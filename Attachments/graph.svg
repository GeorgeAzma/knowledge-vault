<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="918" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="901.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="901.00"> </text><svg id="frames" x="10" width="1180" total_samples="3186860850"><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (501,504 samples, 0.02%)</title><rect x="0.0000%" y="821" width="0.0157%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="501504"/><text x="0.2500%" y="831.50"></text></g><g><title>snd_pcm_poll_descriptors_revents (501,504 samples, 0.02%)</title><rect x="0.0000%" y="805" width="0.0157%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="501504"/><text x="0.2500%" y="815.50"></text></g><g><title>[libasound.so.2.0.0] (501,504 samples, 0.02%)</title><rect x="0.0000%" y="789" width="0.0157%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="501504"/><text x="0.2500%" y="799.50"></text></g><g><title>cpal_alsa_out (1,003,008 samples, 0.03%)</title><rect x="0.0000%" y="853" width="0.0315%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1003008"/><text x="0.2500%" y="863.50"></text></g><g><title>[unknown] (1,003,008 samples, 0.03%)</title><rect x="0.0000%" y="837" width="0.0315%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1003008"/><text x="0.2500%" y="847.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::_{{closure}} (501,504 samples, 0.02%)</title><rect x="0.0157%" y="821" width="0.0157%" height="15" fill="rgb(232,128,0)" fg:x="501504" fg:w="501504"/><text x="0.2657%" y="831.50"></text></g><g><title>silk_engine::sfx::Sfx::new::_{{closure}} (501,504 samples, 0.02%)</title><rect x="0.0157%" y="805" width="0.0157%" height="15" fill="rgb(207,160,47)" fg:x="501504" fg:w="501504"/><text x="0.2657%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (501,504 samples, 0.02%)</title><rect x="0.0157%" y="789" width="0.0157%" height="15" fill="rgb(228,23,34)" fg:x="501504" fg:w="501504"/><text x="0.2657%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (501,504 samples, 0.02%)</title><rect x="0.0157%" y="773" width="0.0157%" height="15" fill="rgb(218,30,26)" fg:x="501504" fg:w="501504"/><text x="0.2657%" y="783.50"></text></g><g><title>[libpipewire-0.3.so.0.1405.0] (501,504 samples, 0.02%)</title><rect x="0.0472%" y="725" width="0.0157%" height="15" fill="rgb(220,122,19)" fg:x="1504512" fg:w="501504"/><text x="0.2972%" y="735.50"></text></g><g><title>[libasound_module_pcm_pipewire.so] (501,504 samples, 0.02%)</title><rect x="0.0472%" y="709" width="0.0157%" height="15" fill="rgb(250,228,42)" fg:x="1504512" fg:w="501504"/><text x="0.2972%" y="719.50"></text></g><g><title>snd_pcm_ioplug_hw_avail (501,504 samples, 0.02%)</title><rect x="0.0472%" y="693" width="0.0157%" height="15" fill="rgb(240,193,28)" fg:x="1504512" fg:w="501504"/><text x="0.2972%" y="703.50"></text></g><g><title>snd_pcm_ioplug_avail (501,504 samples, 0.02%)</title><rect x="0.0472%" y="677" width="0.0157%" height="15" fill="rgb(216,20,37)" fg:x="1504512" fg:w="501504"/><text x="0.2972%" y="687.50"></text></g><g><title>[libspa-audioconvert.so] (2,786,391 samples, 0.09%)</title><rect x="0.0629%" y="693" width="0.0874%" height="15" fill="rgb(206,188,39)" fg:x="2006016" fg:w="2786391"/><text x="0.3129%" y="703.50"></text></g><g><title>[libspa-audioconvert.so] (2,786,391 samples, 0.09%)</title><rect x="0.0629%" y="677" width="0.0874%" height="15" fill="rgb(217,207,13)" fg:x="2006016" fg:w="2786391"/><text x="0.3129%" y="687.50"></text></g><g><title>[libpipewire-0.3.so.0.1405.0] (3,789,399 samples, 0.12%)</title><rect x="0.0472%" y="773" width="0.1189%" height="15" fill="rgb(231,73,38)" fg:x="1504512" fg:w="3789399"/><text x="0.2972%" y="783.50"></text></g><g><title>[libpipewire-0.3.so.0.1405.0] (3,789,399 samples, 0.12%)</title><rect x="0.0472%" y="757" width="0.1189%" height="15" fill="rgb(225,20,46)" fg:x="1504512" fg:w="3789399"/><text x="0.2972%" y="767.50"></text></g><g><title>[libspa-audioconvert.so] (3,789,399 samples, 0.12%)</title><rect x="0.0472%" y="741" width="0.1189%" height="15" fill="rgb(210,31,41)" fg:x="1504512" fg:w="3789399"/><text x="0.2972%" y="751.50"></text></g><g><title>[libspa-audioconvert.so] (3,287,895 samples, 0.10%)</title><rect x="0.0629%" y="725" width="0.1032%" height="15" fill="rgb(221,200,47)" fg:x="2006016" fg:w="3287895"/><text x="0.3129%" y="735.50"></text></g><g><title>[libspa-audioconvert.so] (3,287,895 samples, 0.10%)</title><rect x="0.0629%" y="709" width="0.1032%" height="15" fill="rgb(226,26,5)" fg:x="2006016" fg:w="3287895"/><text x="0.3129%" y="719.50"></text></g><g><title>roundf32x (501,504 samples, 0.02%)</title><rect x="0.1504%" y="693" width="0.0157%" height="15" fill="rgb(249,33,26)" fg:x="4792407" fg:w="501504"/><text x="0.4004%" y="703.50"></text></g><g><title>data-loop.0 (4,792,407 samples, 0.15%)</title><rect x="0.0315%" y="853" width="0.1504%" height="15" fill="rgb(235,183,28)" fg:x="1003008" fg:w="4792407"/><text x="0.2815%" y="863.50"></text></g><g><title>[libc.so.6] (4,792,407 samples, 0.15%)</title><rect x="0.0315%" y="837" width="0.1504%" height="15" fill="rgb(221,5,38)" fg:x="1003008" fg:w="4792407"/><text x="0.2815%" y="847.50"></text></g><g><title>[libc.so.6] (4,792,407 samples, 0.15%)</title><rect x="0.0315%" y="821" width="0.1504%" height="15" fill="rgb(247,18,42)" fg:x="1003008" fg:w="4792407"/><text x="0.2815%" y="831.50"></text></g><g><title>[libpipewire-0.3.so.0.1405.0] (4,792,407 samples, 0.15%)</title><rect x="0.0315%" y="805" width="0.1504%" height="15" fill="rgb(241,131,45)" fg:x="1003008" fg:w="4792407"/><text x="0.2815%" y="815.50"></text></g><g><title>[libspa-support.so] (4,792,407 samples, 0.15%)</title><rect x="0.0315%" y="789" width="0.1504%" height="15" fill="rgb(249,31,29)" fg:x="1003008" fg:w="4792407"/><text x="0.2815%" y="799.50"></text></g><g><title>[libspa-support.so] (501,504 samples, 0.02%)</title><rect x="0.1661%" y="773" width="0.0157%" height="15" fill="rgb(225,111,53)" fg:x="5293911" fg:w="501504"/><text x="0.4161%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (20,089,185 samples, 0.63%)</title><rect x="0.1819%" y="837" width="0.6304%" height="15" fill="rgb(238,160,17)" fg:x="5795415" fg:w="20089185"/><text x="0.4319%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20,089,185 samples, 0.63%)</title><rect x="0.1819%" y="821" width="0.6304%" height="15" fill="rgb(214,148,48)" fg:x="5795415" fg:w="20089185"/><text x="0.4319%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20,089,185 samples, 0.63%)</title><rect x="0.1819%" y="805" width="0.6304%" height="15" fill="rgb(232,36,49)" fg:x="5795415" fg:w="20089185"/><text x="0.4319%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (20,089,185 samples, 0.63%)</title><rect x="0.1819%" y="789" width="0.6304%" height="15" fill="rgb(209,103,24)" fg:x="5795415" fg:w="20089185"/><text x="0.4319%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (20,089,185 samples, 0.63%)</title><rect x="0.1819%" y="773" width="0.6304%" height="15" fill="rgb(229,88,8)" fg:x="5795415" fg:w="20089185"/><text x="0.4319%" y="783.50"></text></g><g><title>core::ptr::copy_nonoverlapping (20,089,185 samples, 0.63%)</title><rect x="0.1819%" y="757" width="0.6304%" height="15" fill="rgb(213,181,19)" fg:x="5795415" fg:w="20089185"/><text x="0.4319%" y="767.50"></text></g><g><title>wayland_client::conn::Connection::flush (20,089,185 samples, 0.63%)</title><rect x="0.1819%" y="741" width="0.6304%" height="15" fill="rgb(254,191,54)" fg:x="5795415" fg:w="20089185"/><text x="0.4319%" y="751.50"></text></g><g><title>&lt;calloop::sources::generic::Generic&lt;F,E&gt; as calloop::sources::EventSource&gt;::process_events (20,089,185 samples, 0.63%)</title><rect x="0.1819%" y="725" width="0.6304%" height="15" fill="rgb(241,83,37)" fg:x="5795415" fg:w="20089185"/><text x="0.4319%" y="735.50"></text></g><g><title>&lt;calloop::sources::ping::eventfd::PingSource as calloop::sources::EventSource&gt;::process_events::_{{closure}} (20,089,185 samples, 0.63%)</title><rect x="0.1819%" y="709" width="0.6304%" height="15" fill="rgb(233,36,39)" fg:x="5795415" fg:w="20089185"/><text x="0.4319%" y="719.50"></text></g><g><title>&lt;&amp;mut T as std::os::fd::owned::AsFd&gt;::as_fd (20,089,185 samples, 0.63%)</title><rect x="0.1819%" y="693" width="0.6304%" height="15" fill="rgb(226,3,54)" fg:x="5795415" fg:w="20089185"/><text x="0.4319%" y="703.50"></text></g><g><title>&lt;calloop::sources::generic::NoIoDrop&lt;T&gt; as std::os::fd::owned::AsFd&gt;::as_fd (20,089,185 samples, 0.63%)</title><rect x="0.1819%" y="677" width="0.6304%" height="15" fill="rgb(245,192,40)" fg:x="5795415" fg:w="20089185"/><text x="0.4319%" y="687.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerBackend::flush (20,089,185 samples, 0.63%)</title><rect x="0.1819%" y="661" width="0.6304%" height="15" fill="rgb(238,167,29)" fg:x="5795415" fg:w="20089185"/><text x="0.4319%" y="671.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerBackend::lock_state (20,089,185 samples, 0.63%)</title><rect x="0.1819%" y="645" width="0.6304%" height="15" fill="rgb(232,182,51)" fg:x="5795415" fg:w="20089185"/><text x="0.4319%" y="655.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (20,089,185 samples, 0.63%)</title><rect x="0.1819%" y="629" width="0.6304%" height="15" fill="rgb(231,60,39)" fg:x="5795415" fg:w="20089185"/><text x="0.4319%" y="639.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (20,089,185 samples, 0.63%)</title><rect x="0.1819%" y="613" width="0.6304%" height="15" fill="rgb(208,69,12)" fg:x="5795415" fg:w="20089185"/><text x="0.4319%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (20,089,185 samples, 0.63%)</title><rect x="0.1819%" y="597" width="0.6304%" height="15" fill="rgb(235,93,37)" fg:x="5795415" fg:w="20089185"/><text x="0.4319%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (20,089,185 samples, 0.63%)</title><rect x="0.1819%" y="581" width="0.6304%" height="15" fill="rgb(213,116,39)" fg:x="5795415" fg:w="20089185"/><text x="0.4319%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (5,028,954 samples, 0.16%)</title><rect x="1.0223%" y="789" width="0.1578%" height="15" fill="rgb(222,207,29)" fg:x="32578982" fg:w="5028954"/><text x="1.2723%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5,028,954 samples, 0.16%)</title><rect x="1.0223%" y="773" width="0.1578%" height="15" fill="rgb(206,96,30)" fg:x="32578982" fg:w="5028954"/><text x="1.2723%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,432,292 samples, 0.58%)</title><rect x="1.0223%" y="805" width="0.5784%" height="15" fill="rgb(218,138,4)" fg:x="32578982" fg:w="18432292"/><text x="1.2723%" y="815.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (13,403,338 samples, 0.42%)</title><rect x="1.1801%" y="789" width="0.4206%" height="15" fill="rgb(250,191,14)" fg:x="37607936" fg:w="13403338"/><text x="1.4301%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,329,679 samples, 0.10%)</title><rect x="1.6007%" y="805" width="0.1045%" height="15" fill="rgb(239,60,40)" fg:x="51011274" fg:w="3329679"/><text x="1.8507%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,329,679 samples, 0.10%)</title><rect x="1.6007%" y="789" width="0.1045%" height="15" fill="rgb(206,27,48)" fg:x="51011274" fg:w="3329679"/><text x="1.8507%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,329,679 samples, 0.10%)</title><rect x="1.6007%" y="773" width="0.1045%" height="15" fill="rgb(225,35,8)" fg:x="51011274" fg:w="3329679"/><text x="1.8507%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,329,679 samples, 0.10%)</title><rect x="1.6007%" y="757" width="0.1045%" height="15" fill="rgb(250,213,24)" fg:x="51011274" fg:w="3329679"/><text x="1.8507%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,329,679 samples, 0.10%)</title><rect x="1.6007%" y="741" width="0.1045%" height="15" fill="rgb(247,123,22)" fg:x="51011274" fg:w="3329679"/><text x="1.8507%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,329,679 samples, 0.10%)</title><rect x="1.6007%" y="725" width="0.1045%" height="15" fill="rgb(231,138,38)" fg:x="51011274" fg:w="3329679"/><text x="1.8507%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,329,679 samples, 0.10%)</title><rect x="1.6007%" y="709" width="0.1045%" height="15" fill="rgb(231,145,46)" fg:x="51011274" fg:w="3329679"/><text x="1.8507%" y="719.50"></text></g><g><title>alloc::alloc::alloc (3,329,679 samples, 0.10%)</title><rect x="1.6007%" y="693" width="0.1045%" height="15" fill="rgb(251,118,11)" fg:x="51011274" fg:w="3329679"/><text x="1.8507%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (30,129,883 samples, 0.95%)</title><rect x="0.8122%" y="837" width="0.9454%" height="15" fill="rgb(217,147,25)" fg:x="25884600" fg:w="30129883"/><text x="1.0622%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (30,129,883 samples, 0.95%)</title><rect x="0.8122%" y="821" width="0.9454%" height="15" fill="rgb(247,81,37)" fg:x="25884600" fg:w="30129883"/><text x="1.0622%" y="831.50"></text></g><g><title>core::ptr::write (1,673,530 samples, 0.05%)</title><rect x="1.7052%" y="805" width="0.0525%" height="15" fill="rgb(209,12,38)" fg:x="54340953" fg:w="1673530"/><text x="1.9552%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1,694,264 samples, 0.05%)</title><rect x="2.0884%" y="821" width="0.0532%" height="15" fill="rgb(227,1,9)" fg:x="66552826" fg:w="1694264"/><text x="2.3384%" y="831.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::offset_from_unsigned (1,694,264 samples, 0.05%)</title><rect x="2.0884%" y="805" width="0.0532%" height="15" fill="rgb(248,47,43)" fg:x="66552826" fg:w="1694264"/><text x="2.3384%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset_from_unsigned (1,694,264 samples, 0.05%)</title><rect x="2.0884%" y="789" width="0.0532%" height="15" fill="rgb(221,10,30)" fg:x="66552826" fg:w="1694264"/><text x="2.3384%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from_unsigned (1,694,264 samples, 0.05%)</title><rect x="2.0884%" y="773" width="0.0532%" height="15" fill="rgb(210,229,1)" fg:x="66552826" fg:w="1694264"/><text x="2.3384%" y="783.50"></text></g><g><title>core::mem::take (5,014,220 samples, 0.16%)</title><rect x="2.1415%" y="821" width="0.1573%" height="15" fill="rgb(222,148,37)" fg:x="68247090" fg:w="5014220"/><text x="2.3915%" y="831.50"></text></g><g><title>core::mem::replace (5,014,220 samples, 0.16%)</title><rect x="2.1415%" y="805" width="0.1573%" height="15" fill="rgb(234,67,33)" fg:x="68247090" fg:w="5014220"/><text x="2.3915%" y="815.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,919,913 samples, 0.59%)</title><rect x="1.7577%" y="837" width="0.5937%" height="15" fill="rgb(247,98,35)" fg:x="56014483" fg:w="18919913"/><text x="2.0077%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;winit::platform_impl::linux::WindowId,alloc::alloc::Global&gt;&gt; (1,673,086 samples, 0.05%)</title><rect x="2.2989%" y="821" width="0.0525%" height="15" fill="rgb(247,138,52)" fg:x="73261310" fg:w="1673086"/><text x="2.5489%" y="831.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,673,086 samples, 0.05%)</title><rect x="2.2989%" y="805" width="0.0525%" height="15" fill="rgb(213,79,30)" fg:x="73261310" fg:w="1673086"/><text x="2.5489%" y="815.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (5,016,891 samples, 0.16%)</title><rect x="2.3514%" y="821" width="0.1574%" height="15" fill="rgb(246,177,23)" fg:x="74934396" fg:w="5016891"/><text x="2.6014%" y="831.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (5,016,891 samples, 0.16%)</title><rect x="2.3514%" y="805" width="0.1574%" height="15" fill="rgb(230,62,27)" fg:x="74934396" fg:w="5016891"/><text x="2.6014%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;dyn calloop::sources::IdleDispatcher&lt;winit::platform_impl::linux::wayland::state::WinitState&gt;&gt;&gt;,alloc::alloc::Global&gt;&gt; (5,015,785 samples, 0.16%)</title><rect x="2.5088%" y="821" width="0.1574%" height="15" fill="rgb(216,154,8)" fg:x="79951287" fg:w="5015785"/><text x="2.7588%" y="831.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,015,785 samples, 0.16%)</title><rect x="2.5088%" y="805" width="0.1574%" height="15" fill="rgb(244,35,45)" fg:x="79951287" fg:w="5015785"/><text x="2.7588%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;dyn calloop::sources::IdleDispatcher&lt;winit::platform_impl::linux::wayland::state::WinitState&gt;&gt;&gt;&gt;&gt; (5,015,785 samples, 0.16%)</title><rect x="2.5088%" y="789" width="0.1574%" height="15" fill="rgb(251,115,12)" fg:x="79951287" fg:w="5015785"/><text x="2.7588%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,015,785 samples, 0.16%)</title><rect x="2.5088%" y="773" width="0.1574%" height="15" fill="rgb(240,54,50)" fg:x="79951287" fg:w="5015785"/><text x="2.7588%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11,702,505 samples, 0.37%)</title><rect x="2.3514%" y="837" width="0.3672%" height="15" fill="rgb(233,84,52)" fg:x="74934396" fg:w="11702505"/><text x="2.6014%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::rc::Rc&lt;core::cell::RefCell&lt;dyn calloop::sources::IdleDispatcher&lt;winit::platform_impl::linux::wayland::state::WinitState&gt;&gt;&gt;]&gt; (1,669,829 samples, 0.05%)</title><rect x="2.6662%" y="821" width="0.0524%" height="15" fill="rgb(207,117,47)" fg:x="84967072" fg:w="1669829"/><text x="2.9162%" y="831.50"></text></g><g><title>&lt;calloop::loop_logic::EventIterator as core::iter::traits::iterator::Iterator&gt;::next (6,701,566 samples, 0.21%)</title><rect x="2.7186%" y="837" width="0.2103%" height="15" fill="rgb(249,43,39)" fg:x="86636901" fg:w="6701566"/><text x="2.9686%" y="847.50"></text></g><g><title>&lt;calloop::sources::ping::eventfd::PingSource as calloop::sources::EventSource&gt;::process_events (13,397,946 samples, 0.42%)</title><rect x="2.9289%" y="837" width="0.4204%" height="15" fill="rgb(209,38,44)" fg:x="93338467" fg:w="13397946"/><text x="3.1789%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11,725,635 samples, 0.37%)</title><rect x="2.9813%" y="821" width="0.3679%" height="15" fill="rgb(236,212,23)" fg:x="95010778" fg:w="11725635"/><text x="3.2313%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11,725,635 samples, 0.37%)</title><rect x="2.9813%" y="805" width="0.3679%" height="15" fill="rgb(242,79,21)" fg:x="95010778" fg:w="11725635"/><text x="3.2313%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11,725,635 samples, 0.37%)</title><rect x="2.9813%" y="789" width="0.3679%" height="15" fill="rgb(211,96,35)" fg:x="95010778" fg:w="11725635"/><text x="3.2313%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11,725,635 samples, 0.37%)</title><rect x="2.9813%" y="773" width="0.3679%" height="15" fill="rgb(253,215,40)" fg:x="95010778" fg:w="11725635"/><text x="3.2313%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11,725,635 samples, 0.37%)</title><rect x="2.9813%" y="757" width="0.3679%" height="15" fill="rgb(211,81,21)" fg:x="95010778" fg:w="11725635"/><text x="3.2313%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (11,725,635 samples, 0.37%)</title><rect x="2.9813%" y="741" width="0.3679%" height="15" fill="rgb(208,190,38)" fg:x="95010778" fg:w="11725635"/><text x="3.2313%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (11,725,635 samples, 0.37%)</title><rect x="2.9813%" y="725" width="0.3679%" height="15" fill="rgb(235,213,38)" fg:x="95010778" fg:w="11725635"/><text x="3.2313%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11,725,635 samples, 0.37%)</title><rect x="2.9813%" y="709" width="0.3679%" height="15" fill="rgb(237,122,38)" fg:x="95010778" fg:w="11725635"/><text x="3.2313%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11,725,635 samples, 0.37%)</title><rect x="2.9813%" y="693" width="0.3679%" height="15" fill="rgb(244,218,35)" fg:x="95010778" fg:w="11725635"/><text x="3.2313%" y="703.50"></text></g><g><title>alloc::alloc::alloc (11,725,635 samples, 0.37%)</title><rect x="2.9813%" y="677" width="0.3679%" height="15" fill="rgb(240,68,47)" fg:x="95010778" fg:w="11725635"/><text x="3.2313%" y="687.50"></text></g><g><title>malloc (11,725,635 samples, 0.37%)</title><rect x="2.9813%" y="661" width="0.3679%" height="15" fill="rgb(210,16,53)" fg:x="95010778" fg:w="11725635"/><text x="3.2313%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (3,318,801 samples, 0.10%)</title><rect x="3.5595%" y="821" width="0.1041%" height="15" fill="rgb(235,124,12)" fg:x="113436662" fg:w="3318801"/><text x="3.8095%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3,318,801 samples, 0.10%)</title><rect x="3.5595%" y="805" width="0.1041%" height="15" fill="rgb(224,169,11)" fg:x="113436662" fg:w="3318801"/><text x="3.8095%" y="815.50"></text></g><g><title>&lt;calloop::loop_logic::EventIterator as core::iter::traits::iterator::Iterator&gt;::next (1,672,302 samples, 0.05%)</title><rect x="3.6112%" y="789" width="0.0525%" height="15" fill="rgb(250,166,2)" fg:x="115083161" fg:w="1672302"/><text x="3.8612%" y="799.50"></text></g><g><title>calloop::token::TokenInner::same_source_as (1,672,302 samples, 0.05%)</title><rect x="3.6112%" y="773" width="0.0525%" height="15" fill="rgb(242,216,29)" fg:x="115083161" fg:w="1672302"/><text x="3.8612%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1,670,932 samples, 0.05%)</title><rect x="3.6637%" y="821" width="0.0524%" height="15" fill="rgb(230,116,27)" fg:x="116755463" fg:w="1670932"/><text x="3.9137%" y="831.50"></text></g><g><title>core::mem::replace (1,670,932 samples, 0.05%)</title><rect x="3.6637%" y="805" width="0.0524%" height="15" fill="rgb(228,99,48)" fg:x="116755463" fg:w="1670932"/><text x="3.9137%" y="815.50"></text></g><g><title>[libc.so.6] (21,614,356 samples, 0.68%)</title><rect x="3.7686%" y="773" width="0.6782%" height="15" fill="rgb(253,11,6)" fg:x="120099146" fg:w="21614356"/><text x="4.0186%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wayland_backend::sys::client_impl::Inner&gt;&gt; (16,725,917 samples, 0.52%)</title><rect x="4.4468%" y="773" width="0.5248%" height="15" fill="rgb(247,143,39)" fg:x="141713502" fg:w="16725917"/><text x="4.6968%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,725,917 samples, 0.52%)</title><rect x="4.4468%" y="757" width="0.5248%" height="15" fill="rgb(236,97,10)" fg:x="141713502" fg:w="16725917"/><text x="4.6968%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (15,048,578 samples, 0.47%)</title><rect x="4.4994%" y="741" width="0.4722%" height="15" fill="rgb(233,208,19)" fg:x="143390841" fg:w="15048578"/><text x="4.7494%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_sub (15,048,578 samples, 0.47%)</title><rect x="4.4994%" y="725" width="0.4722%" height="15" fill="rgb(216,164,2)" fg:x="143390841" fg:w="15048578"/><text x="4.7494%" y="735.50"></text></g><g><title>pthread_mutex_unlock (1,673,035 samples, 0.05%)</title><rect x="4.9716%" y="773" width="0.0525%" height="15" fill="rgb(220,129,5)" fg:x="158439419" fg:w="1673035"/><text x="5.2216%" y="783.50"></text></g><g><title>pthread_cond_broadcast (1,673,123 samples, 0.05%)</title><rect x="5.1814%" y="757" width="0.0525%" height="15" fill="rgb(242,17,10)" fg:x="165124933" fg:w="1673123"/><text x="5.4314%" y="767.50"></text></g><g><title>&lt;calloop_wayland_source::WaylandSource&lt;D&gt; as calloop::sources::EventSource&gt;::before_handle_events (85,173,332 samples, 2.67%)</title><rect x="3.3493%" y="837" width="2.6726%" height="15" fill="rgb(242,107,0)" fg:x="106736413" fg:w="85173332"/><text x="3.5993%" y="847.50">&lt;c..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wayland_backend::sys::client::ReadEventsGuard&gt;&gt; (73,483,350 samples, 2.31%)</title><rect x="3.7161%" y="821" width="2.3058%" height="15" fill="rgb(251,28,31)" fg:x="118426395" fg:w="73483350"/><text x="3.9661%" y="831.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;wayland_backend::sys::client::ReadEventsGuard&gt; (73,483,350 samples, 2.31%)</title><rect x="3.7161%" y="805" width="2.3058%" height="15" fill="rgb(233,223,10)" fg:x="118426395" fg:w="73483350"/><text x="3.9661%" y="815.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;wayland_backend::sys::client_impl::InnerReadEventsGuard&gt; (73,483,350 samples, 2.31%)</title><rect x="3.7161%" y="789" width="2.3058%" height="15" fill="rgb(215,21,27)" fg:x="118426395" fg:w="73483350"/><text x="3.9661%" y="799.50">c..</text></g><g><title>wl_display_cancel_read (31,797,291 samples, 1.00%)</title><rect x="5.0241%" y="773" width="0.9978%" height="15" fill="rgb(232,23,21)" fg:x="160112454" fg:w="31797291"/><text x="5.2741%" y="783.50"></text></g><g><title>pthread_mutex_lock (25,111,689 samples, 0.79%)</title><rect x="5.2339%" y="757" width="0.7880%" height="15" fill="rgb(244,5,23)" fg:x="166798056" fg:w="25111689"/><text x="5.4839%" y="767.50"></text></g><g><title>&lt;calloop_wayland_source::WaylandSource&lt;D&gt; as calloop::sources::EventSource&gt;::before_sleep (13,894,276 samples, 0.44%)</title><rect x="6.0219%" y="837" width="0.4360%" height="15" fill="rgb(226,81,46)" fg:x="191909745" fg:w="13894276"/><text x="6.2719%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wayland_backend::sys::client::ReadEventsGuard&gt;&gt; (1,686,023 samples, 0.05%)</title><rect x="6.4050%" y="821" width="0.0529%" height="15" fill="rgb(247,70,30)" fg:x="204117998" fg:w="1686023"/><text x="6.6550%" y="831.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::before_handle_events (1,673,231 samples, 0.05%)</title><rect x="6.4579%" y="837" width="0.0525%" height="15" fill="rgb(212,68,19)" fg:x="205804021" fg:w="1673231"/><text x="6.7079%" y="847.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1,673,231 samples, 0.05%)</title><rect x="6.4579%" y="821" width="0.0525%" height="15" fill="rgb(240,187,13)" fg:x="205804021" fg:w="1673231"/><text x="6.7079%" y="831.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1,673,231 samples, 0.05%)</title><rect x="6.4579%" y="805" width="0.0525%" height="15" fill="rgb(223,113,26)" fg:x="205804021" fg:w="1673231"/><text x="6.7079%" y="815.50"></text></g><g><title>core::cell::BorrowRefMut::new (1,673,231 samples, 0.05%)</title><rect x="6.4579%" y="789" width="0.0525%" height="15" fill="rgb(206,192,2)" fg:x="205804021" fg:w="1673231"/><text x="6.7079%" y="799.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::before_sleep (3,345,737 samples, 0.10%)</title><rect x="6.5104%" y="837" width="0.1050%" height="15" fill="rgb(241,108,4)" fg:x="207477252" fg:w="3345737"/><text x="6.7604%" y="847.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1,672,386 samples, 0.05%)</title><rect x="6.5629%" y="821" width="0.0525%" height="15" fill="rgb(247,173,49)" fg:x="209150603" fg:w="1672386"/><text x="6.8129%" y="831.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1,672,386 samples, 0.05%)</title><rect x="6.5629%" y="805" width="0.0525%" height="15" fill="rgb(224,114,35)" fg:x="209150603" fg:w="1672386"/><text x="6.8129%" y="815.50"></text></g><g><title>core::cell::BorrowRefMut::new (1,672,386 samples, 0.05%)</title><rect x="6.5629%" y="789" width="0.0525%" height="15" fill="rgb(245,159,27)" fg:x="209150603" fg:w="1672386"/><text x="6.8129%" y="799.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::process_events (6,689,239 samples, 0.21%)</title><rect x="6.6154%" y="837" width="0.2099%" height="15" fill="rgb(245,172,44)" fg:x="210822989" fg:w="6689239"/><text x="6.8654%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;calloop::sources::DispatcherInner&lt;calloop::sources::ping::eventfd::PingSource,winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;()&gt;::new::{{closure}}&gt;&gt;&gt; (1,671,278 samples, 0.05%)</title><rect x="6.7728%" y="821" width="0.0524%" height="15" fill="rgb(236,23,11)" fg:x="215840950" fg:w="1671278"/><text x="7.0228%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (1,671,278 samples, 0.05%)</title><rect x="6.7728%" y="805" width="0.0524%" height="15" fill="rgb(205,117,38)" fg:x="215840950" fg:w="1671278"/><text x="7.0228%" y="815.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1,671,278 samples, 0.05%)</title><rect x="6.7728%" y="789" width="0.0524%" height="15" fill="rgb(237,72,25)" fg:x="215840950" fg:w="1671278"/><text x="7.0228%" y="799.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1,671,278 samples, 0.05%)</title><rect x="6.7728%" y="773" width="0.0524%" height="15" fill="rgb(244,70,9)" fg:x="215840950" fg:w="1671278"/><text x="7.0228%" y="783.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1,671,278 samples, 0.05%)</title><rect x="6.7728%" y="757" width="0.0524%" height="15" fill="rgb(217,125,39)" fg:x="215840950" fg:w="1671278"/><text x="7.0228%" y="767.50"></text></g><g><title>core::mem::replace (1,671,278 samples, 0.05%)</title><rect x="6.7728%" y="741" width="0.0524%" height="15" fill="rgb(235,36,10)" fg:x="215840950" fg:w="1671278"/><text x="7.0228%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15,071,400 samples, 0.47%)</title><rect x="6.8253%" y="837" width="0.4729%" height="15" fill="rgb(251,123,47)" fg:x="217512228" fg:w="15071400"/><text x="7.0753%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,350,205 samples, 0.11%)</title><rect x="7.1931%" y="821" width="0.1051%" height="15" fill="rgb(221,13,13)" fg:x="229233423" fg:w="3350205"/><text x="7.4431%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,350,205 samples, 0.11%)</title><rect x="7.1931%" y="805" width="0.1051%" height="15" fill="rgb(238,131,9)" fg:x="229233423" fg:w="3350205"/><text x="7.4431%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3,350,205 samples, 0.11%)</title><rect x="7.1931%" y="789" width="0.1051%" height="15" fill="rgb(211,50,8)" fg:x="229233423" fg:w="3350205"/><text x="7.4431%" y="799.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (1,673,001 samples, 0.05%)</title><rect x="7.2457%" y="773" width="0.0525%" height="15" fill="rgb(245,182,24)" fg:x="230910627" fg:w="1673001"/><text x="7.4957%" y="783.50"></text></g><g><title>polling::epoll::Events::iter::_{{closure}} (1,673,001 samples, 0.05%)</title><rect x="7.2457%" y="757" width="0.0525%" height="15" fill="rgb(242,14,37)" fg:x="230910627" fg:w="1673001"/><text x="7.4957%" y="767.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (3,327,819 samples, 0.10%)</title><rect x="7.2982%" y="837" width="0.1044%" height="15" fill="rgb(246,228,12)" fg:x="232583628" fg:w="3327819"/><text x="7.5482%" y="847.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3,701,697 samples, 0.12%)</title><rect x="7.4026%" y="837" width="0.1162%" height="15" fill="rgb(213,55,15)" fg:x="235911447" fg:w="3701697"/><text x="7.6526%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,701,697 samples, 0.12%)</title><rect x="7.4026%" y="821" width="0.1162%" height="15" fill="rgb(209,9,3)" fg:x="235911447" fg:w="3701697"/><text x="7.6526%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,701,697 samples, 0.12%)</title><rect x="7.4026%" y="805" width="0.1162%" height="15" fill="rgb(230,59,30)" fg:x="235911447" fg:w="3701697"/><text x="7.6526%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (3,701,697 samples, 0.12%)</title><rect x="7.4026%" y="789" width="0.1162%" height="15" fill="rgb(209,121,21)" fg:x="235911447" fg:w="3701697"/><text x="7.6526%" y="799.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (3,701,697 samples, 0.12%)</title><rect x="7.4026%" y="773" width="0.1162%" height="15" fill="rgb(220,109,13)" fg:x="235911447" fg:w="3701697"/><text x="7.6526%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3,701,697 samples, 0.12%)</title><rect x="7.4026%" y="757" width="0.1162%" height="15" fill="rgb(232,18,1)" fg:x="235911447" fg:w="3701697"/><text x="7.6526%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (3,701,697 samples, 0.12%)</title><rect x="7.4026%" y="741" width="0.1162%" height="15" fill="rgb(215,41,42)" fg:x="235911447" fg:w="3701697"/><text x="7.6526%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (3,701,697 samples, 0.12%)</title><rect x="7.4026%" y="725" width="0.1162%" height="15" fill="rgb(224,123,36)" fg:x="235911447" fg:w="3701697"/><text x="7.6526%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (3,701,697 samples, 0.12%)</title><rect x="7.4026%" y="709" width="0.1162%" height="15" fill="rgb(240,125,3)" fg:x="235911447" fg:w="3701697"/><text x="7.6526%" y="719.50"></text></g><g><title>core::intrinsics::likely (3,701,697 samples, 0.12%)</title><rect x="7.4026%" y="693" width="0.1162%" height="15" fill="rgb(205,98,50)" fg:x="235911447" fg:w="3701697"/><text x="7.6526%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3,346,454 samples, 0.11%)</title><rect x="7.6237%" y="709" width="0.1050%" height="15" fill="rgb(205,185,37)" fg:x="242958175" fg:w="3346454"/><text x="7.8737%" y="719.50"></text></g><g><title>alloc::string::String::push_str (1,674,245 samples, 0.05%)</title><rect x="7.6762%" y="693" width="0.0525%" height="15" fill="rgb(238,207,15)" fg:x="244630384" fg:w="1674245"/><text x="7.9262%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1,674,245 samples, 0.05%)</title><rect x="7.6762%" y="677" width="0.0525%" height="15" fill="rgb(213,199,42)" fg:x="244630384" fg:w="1674245"/><text x="7.9262%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1,674,245 samples, 0.05%)</title><rect x="7.6762%" y="661" width="0.0525%" height="15" fill="rgb(235,201,11)" fg:x="244630384" fg:w="1674245"/><text x="7.9262%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1,674,245 samples, 0.05%)</title><rect x="7.6762%" y="645" width="0.0525%" height="15" fill="rgb(207,46,11)" fg:x="244630384" fg:w="1674245"/><text x="7.9262%" y="655.50"></text></g><g><title>core::ptr::copy_nonoverlapping (1,674,245 samples, 0.05%)</title><rect x="7.6762%" y="629" width="0.0525%" height="15" fill="rgb(241,35,35)" fg:x="244630384" fg:w="1674245"/><text x="7.9262%" y="639.50"></text></g><g><title>[libc.so.6] (1,674,245 samples, 0.05%)</title><rect x="7.6762%" y="613" width="0.0525%" height="15" fill="rgb(243,32,47)" fg:x="244630384" fg:w="1674245"/><text x="7.9262%" y="623.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (1,672,397 samples, 0.05%)</title><rect x="7.7288%" y="677" width="0.0525%" height="15" fill="rgb(247,202,23)" fg:x="246304629" fg:w="1672397"/><text x="7.9788%" y="687.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (1,672,397 samples, 0.05%)</title><rect x="7.7288%" y="661" width="0.0525%" height="15" fill="rgb(219,102,11)" fg:x="246304629" fg:w="1672397"/><text x="7.9788%" y="671.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,672,397 samples, 0.05%)</title><rect x="7.7288%" y="645" width="0.0525%" height="15" fill="rgb(243,110,44)" fg:x="246304629" fg:w="1672397"/><text x="7.9788%" y="655.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact (1,672,397 samples, 0.05%)</title><rect x="7.7288%" y="629" width="0.0525%" height="15" fill="rgb(222,74,54)" fg:x="246304629" fg:w="1672397"/><text x="7.9788%" y="639.50"></text></g><g><title>core::num::flt2dec::strategy::dragon::format_exact (1,672,397 samples, 0.05%)</title><rect x="7.7288%" y="613" width="0.0525%" height="15" fill="rgb(216,99,12)" fg:x="246304629" fg:w="1672397"/><text x="7.9788%" y="623.50"></text></g><g><title>core::num::bignum::Big32x40::add (1,672,397 samples, 0.05%)</title><rect x="7.7288%" y="597" width="0.0525%" height="15" fill="rgb(226,22,26)" fg:x="246304629" fg:w="1672397"/><text x="7.9788%" y="607.50"></text></g><g><title>core::num::&lt;impl u32&gt;::carrying_add (1,672,397 samples, 0.05%)</title><rect x="7.7288%" y="581" width="0.0525%" height="15" fill="rgb(217,163,10)" fg:x="246304629" fg:w="1672397"/><text x="7.9788%" y="591.50"></text></g><g><title>&lt;my_app::MyApp as silk_engine::App&gt;::update (10,034,197 samples, 0.31%)</title><rect x="7.5188%" y="837" width="0.3149%" height="15" fill="rgb(213,25,53)" fg:x="239613144" fg:w="10034197"/><text x="7.7688%" y="847.50"></text></g><g><title>alloc::fmt::format (6,689,166 samples, 0.21%)</title><rect x="7.6237%" y="821" width="0.2099%" height="15" fill="rgb(252,105,26)" fg:x="242958175" fg:w="6689166"/><text x="7.8737%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (6,689,166 samples, 0.21%)</title><rect x="7.6237%" y="805" width="0.2099%" height="15" fill="rgb(220,39,43)" fg:x="242958175" fg:w="6689166"/><text x="7.8737%" y="815.50"></text></g><g><title>alloc::fmt::format::_{{closure}} (6,689,166 samples, 0.21%)</title><rect x="7.6237%" y="789" width="0.2099%" height="15" fill="rgb(229,68,48)" fg:x="242958175" fg:w="6689166"/><text x="7.8737%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (6,689,166 samples, 0.21%)</title><rect x="7.6237%" y="773" width="0.2099%" height="15" fill="rgb(252,8,32)" fg:x="242958175" fg:w="6689166"/><text x="7.8737%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (6,689,166 samples, 0.21%)</title><rect x="7.6237%" y="757" width="0.2099%" height="15" fill="rgb(223,20,43)" fg:x="242958175" fg:w="6689166"/><text x="7.8737%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (6,689,166 samples, 0.21%)</title><rect x="7.6237%" y="741" width="0.2099%" height="15" fill="rgb(229,81,49)" fg:x="242958175" fg:w="6689166"/><text x="7.8737%" y="751.50"></text></g><g><title>core::fmt::write (6,689,166 samples, 0.21%)</title><rect x="7.6237%" y="725" width="0.2099%" height="15" fill="rgb(236,28,36)" fg:x="242958175" fg:w="6689166"/><text x="7.8737%" y="735.50"></text></g><g><title>core::fmt::run (3,342,712 samples, 0.10%)</title><rect x="7.7288%" y="709" width="0.1049%" height="15" fill="rgb(249,185,26)" fg:x="246304629" fg:w="3342712"/><text x="7.9788%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3,342,712 samples, 0.10%)</title><rect x="7.7288%" y="693" width="0.1049%" height="15" fill="rgb(249,174,33)" fg:x="246304629" fg:w="3342712"/><text x="7.9788%" y="703.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_shortest (1,670,315 samples, 0.05%)</title><rect x="7.7812%" y="677" width="0.0524%" height="15" fill="rgb(233,201,37)" fg:x="247977026" fg:w="1670315"/><text x="8.0312%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts (1,670,315 samples, 0.05%)</title><rect x="7.7812%" y="661" width="0.0524%" height="15" fill="rgb(221,78,26)" fg:x="247977026" fg:w="1670315"/><text x="8.0312%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_formatted_parts::write_bytes (1,670,315 samples, 0.05%)</title><rect x="7.7812%" y="645" width="0.0524%" height="15" fill="rgb(250,127,30)" fg:x="247977026" fg:w="1670315"/><text x="8.0312%" y="655.50"></text></g><g><title>silk_engine::AppContext&lt;A&gt;::render (3,345,538 samples, 0.10%)</title><rect x="8.1492%" y="805" width="0.1050%" height="15" fill="rgb(230,49,44)" fg:x="259703440" fg:w="3345538"/><text x="8.3992%" y="815.50"></text></g><g><title>silk_engine::AppContext&lt;A&gt;::update (1,685,537 samples, 0.05%)</title><rect x="8.2542%" y="805" width="0.0529%" height="15" fill="rgb(229,67,23)" fg:x="263048978" fg:w="1685537"/><text x="8.5042%" y="815.50"></text></g><g><title>&lt;tracing_core::metadata::Level as core::cmp::PartialOrd&lt;tracing_core::metadata::LevelFilter&gt;&gt;::le (1,671,381 samples, 0.05%)</title><rect x="8.3071%" y="789" width="0.0524%" height="15" fill="rgb(249,83,47)" fg:x="264734515" fg:w="1671381"/><text x="8.5571%" y="799.50"></text></g><g><title>tracing_core::metadata::filter_as_usize (1,671,381 samples, 0.05%)</title><rect x="8.3071%" y="773" width="0.0524%" height="15" fill="rgb(215,43,3)" fg:x="264734515" fg:w="1671381"/><text x="8.5571%" y="783.50"></text></g><g><title>winit::window::Window::id (5,015,912 samples, 0.16%)</title><rect x="8.3071%" y="805" width="0.1574%" height="15" fill="rgb(238,154,13)" fg:x="264734515" fg:w="5015912"/><text x="8.5571%" y="815.50"></text></g><g><title>winit::platform_impl::linux::Window::maybe_wait_on_main (3,344,531 samples, 0.10%)</title><rect x="8.3595%" y="789" width="0.1049%" height="15" fill="rgb(219,56,2)" fg:x="266405896" fg:w="3344531"/><text x="8.6095%" y="799.50"></text></g><g><title>winit::window::Window::id::_{{closure}} (3,344,531 samples, 0.10%)</title><rect x="8.3595%" y="773" width="0.1049%" height="15" fill="rgb(233,0,4)" fg:x="266405896" fg:w="3344531"/><text x="8.6095%" y="783.50"></text></g><g><title>winit::platform_impl::linux::Window::id (3,344,531 samples, 0.10%)</title><rect x="8.3595%" y="757" width="0.1049%" height="15" fill="rgb(235,30,7)" fg:x="266405896" fg:w="3344531"/><text x="8.6095%" y="767.50"></text></g><g><title>silk_engine::AppContext&lt;A&gt;::event (16,740,623 samples, 0.53%)</title><rect x="7.9916%" y="821" width="0.5253%" height="15" fill="rgb(250,79,13)" fg:x="254681566" fg:w="16740623"/><text x="8.2416%" y="831.50"></text></g><g><title>winit::window::Window::request_redraw (1,671,762 samples, 0.05%)</title><rect x="8.4645%" y="805" width="0.0525%" height="15" fill="rgb(211,146,34)" fg:x="269750427" fg:w="1671762"/><text x="8.7145%" y="815.50"></text></g><g><title>&lt;silk_engine::Engine&lt;T&gt; as winit::application::ApplicationHandler&gt;::window_event (55,096,091 samples, 1.73%)</title><rect x="7.8336%" y="837" width="1.7289%" height="15" fill="rgb(228,22,38)" fg:x="249647341" fg:w="55096091"/><text x="8.0836%" y="847.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (33,321,243 samples, 1.05%)</title><rect x="8.5169%" y="821" width="1.0456%" height="15" fill="rgb(235,168,5)" fg:x="271422189" fg:w="33321243"/><text x="8.7669%" y="831.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (33,321,243 samples, 1.05%)</title><rect x="8.5169%" y="805" width="1.0456%" height="15" fill="rgb(221,155,16)" fg:x="271422189" fg:w="33321243"/><text x="8.7669%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (33,321,243 samples, 1.05%)</title><rect x="8.5169%" y="789" width="1.0456%" height="15" fill="rgb(215,215,53)" fg:x="271422189" fg:w="33321243"/><text x="8.7669%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (33,321,243 samples, 1.05%)</title><rect x="8.5169%" y="773" width="1.0456%" height="15" fill="rgb(223,4,10)" fg:x="271422189" fg:w="33321243"/><text x="8.7669%" y="783.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1,675,472 samples, 0.05%)</title><rect x="9.5625%" y="837" width="0.0526%" height="15" fill="rgb(234,103,6)" fg:x="304743432" fg:w="1675472"/><text x="9.8125%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[wayland_backend::protocol::Argument&lt;wayland_backend::sys::client::ObjectId,i32&gt;]&gt; (1,675,472 samples, 0.05%)</title><rect x="9.5625%" y="821" width="0.0526%" height="15" fill="rgb(227,97,0)" fg:x="304743432" fg:w="1675472"/><text x="9.8125%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;wayland_backend::protocol::Argument&lt;wayland_backend::sys::client::ObjectId,i32&gt;&gt; (1,675,472 samples, 0.05%)</title><rect x="9.5625%" y="805" width="0.0526%" height="15" fill="rgb(234,150,53)" fg:x="304743432" fg:w="1675472"/><text x="9.8125%" y="815.50"></text></g><g><title>__rustc::__rdl_dealloc (1,675,472 samples, 0.05%)</title><rect x="9.5625%" y="789" width="0.0526%" height="15" fill="rgb(228,201,54)" fg:x="304743432" fg:w="1675472"/><text x="9.8125%" y="799.50"></text></g><g><title>std::sys::alloc::unix::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,675,472 samples, 0.05%)</title><rect x="9.5625%" y="773" width="0.0526%" height="15" fill="rgb(222,22,37)" fg:x="304743432" fg:w="1675472"/><text x="9.8125%" y="783.50"></text></g><g><title>&lt;wayland_backend::sys::client_impl::InnerReadEventsGuard as core::ops::drop::Drop&gt;::drop (8,367,518 samples, 0.26%)</title><rect x="9.6151%" y="837" width="0.2626%" height="15" fill="rgb(237,53,32)" fg:x="306418904" fg:w="8367518"/><text x="9.8651%" y="847.50"></text></g><g><title>wayland_sys::client::wayland_client_handle (3,343,989 samples, 0.10%)</title><rect x="9.7727%" y="821" width="0.1049%" height="15" fill="rgb(233,25,53)" fg:x="311442433" fg:w="3343989"/><text x="10.0227%" y="831.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,003,008 samples, 0.03%)</title><rect x="9.8776%" y="837" width="0.0315%" height="15" fill="rgb(210,40,34)" fg:x="314786422" fg:w="1003008"/><text x="10.1276%" y="847.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.02%)</title><rect x="9.8934%" y="821" width="0.0157%" height="15" fill="rgb(241,220,44)" fg:x="315287926" fg:w="501504"/><text x="10.1434%" y="831.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.02%)</title><rect x="9.8934%" y="805" width="0.0157%" height="15" fill="rgb(235,28,35)" fg:x="315287926" fg:w="501504"/><text x="10.1434%" y="815.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.02%)</title><rect x="9.8934%" y="789" width="0.0157%" height="15" fill="rgb(210,56,17)" fg:x="315287926" fg:w="501504"/><text x="10.1434%" y="799.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.02%)</title><rect x="9.8934%" y="773" width="0.0157%" height="15" fill="rgb(224,130,29)" fg:x="315287926" fg:w="501504"/><text x="10.1434%" y="783.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.02%)</title><rect x="9.8934%" y="757" width="0.0157%" height="15" fill="rgb(235,212,8)" fg:x="315287926" fg:w="501504"/><text x="10.1434%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.02%)</title><rect x="9.8934%" y="741" width="0.0157%" height="15" fill="rgb(223,33,50)" fg:x="315287926" fg:w="501504"/><text x="10.1434%" y="751.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.02%)</title><rect x="9.8934%" y="725" width="0.0157%" height="15" fill="rgb(219,149,13)" fg:x="315287926" fg:w="501504"/><text x="10.1434%" y="735.50"></text></g><g><title>[libc.so.6] (1,003,008 samples, 0.03%)</title><rect x="10.1155%" y="821" width="0.0315%" height="15" fill="rgb(250,156,29)" fg:x="322367233" fg:w="1003008"/><text x="10.3655%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (1,003,008 samples, 0.03%)</title><rect x="10.1155%" y="805" width="0.0315%" height="15" fill="rgb(216,193,19)" fg:x="322367233" fg:w="1003008"/><text x="10.3655%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (1,003,008 samples, 0.03%)</title><rect x="10.1155%" y="789" width="0.0315%" height="15" fill="rgb(216,135,14)" fg:x="322367233" fg:w="1003008"/><text x="10.3655%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (1,003,008 samples, 0.03%)</title><rect x="10.1155%" y="773" width="0.0315%" height="15" fill="rgb(241,47,5)" fg:x="322367233" fg:w="1003008"/><text x="10.3655%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (501,504 samples, 0.02%)</title><rect x="10.1312%" y="757" width="0.0157%" height="15" fill="rgb(233,42,35)" fg:x="322868737" fg:w="501504"/><text x="10.3812%" y="767.50"></text></g><g><title>[libc.so.6] (9,257,854 samples, 0.29%)</title><rect x="9.9091%" y="837" width="0.2905%" height="15" fill="rgb(231,13,6)" fg:x="315789430" fg:w="9257854"/><text x="10.1591%" y="847.50"></text></g><g><title>polling::epoll::Poller::modify (1,677,043 samples, 0.05%)</title><rect x="10.1470%" y="821" width="0.0526%" height="15" fill="rgb(207,181,40)" fg:x="323370241" fg:w="1677043"/><text x="10.3970%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (1,961,396 samples, 0.06%)</title><rect x="10.1996%" y="837" width="0.0615%" height="15" fill="rgb(254,173,49)" fg:x="325047284" fg:w="1961396"/><text x="10.4496%" y="847.50"></text></g><g><title>[libc.so.6] (1,319,243 samples, 0.04%)</title><rect x="10.2198%" y="821" width="0.0414%" height="15" fill="rgb(221,1,38)" fg:x="325689437" fg:w="1319243"/><text x="10.4698%" y="831.50"></text></g><g><title>[unknown] (1,306,861 samples, 0.04%)</title><rect x="10.3282%" y="821" width="0.0410%" height="15" fill="rgb(206,124,46)" fg:x="329146769" fg:w="1306861"/><text x="10.5782%" y="831.50"></text></g><g><title>[libc.so.6] (1,306,861 samples, 0.04%)</title><rect x="10.3282%" y="805" width="0.0410%" height="15" fill="rgb(249,21,11)" fg:x="329146769" fg:w="1306861"/><text x="10.5782%" y="815.50"></text></g><g><title>[libvulkan.so.1.4.313] (676,949 samples, 0.02%)</title><rect x="10.3693%" y="741" width="0.0212%" height="15" fill="rgb(222,201,40)" fg:x="330453630" fg:w="676949"/><text x="10.6193%" y="751.50"></text></g><g><title>[libvulkan.so.1.4.313] (676,949 samples, 0.02%)</title><rect x="10.3693%" y="725" width="0.0212%" height="15" fill="rgb(235,61,29)" fg:x="330453630" fg:w="676949"/><text x="10.6193%" y="735.50"></text></g><g><title>[libvulkan.so.1.4.313] (676,949 samples, 0.02%)</title><rect x="10.3693%" y="709" width="0.0212%" height="15" fill="rgb(219,207,3)" fg:x="330453630" fg:w="676949"/><text x="10.6193%" y="719.50"></text></g><g><title>[libvulkan.so.1.4.313] (676,949 samples, 0.02%)</title><rect x="10.3693%" y="693" width="0.0212%" height="15" fill="rgb(222,56,46)" fg:x="330453630" fg:w="676949"/><text x="10.6193%" y="703.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,930,946 samples, 0.06%)</title><rect x="10.3905%" y="565" width="0.0606%" height="15" fill="rgb(239,76,54)" fg:x="331130579" fg:w="1930946"/><text x="10.6405%" y="575.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,040,615 samples, 0.10%)</title><rect x="10.3905%" y="581" width="0.0954%" height="15" fill="rgb(231,124,27)" fg:x="331130579" fg:w="3040615"/><text x="10.6405%" y="591.50"></text></g><g><title>_dl_catch_exception (1,109,669 samples, 0.03%)</title><rect x="10.4511%" y="565" width="0.0348%" height="15" fill="rgb(249,195,6)" fg:x="333061525" fg:w="1109669"/><text x="10.7011%" y="575.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,109,669 samples, 0.03%)</title><rect x="10.4511%" y="549" width="0.0348%" height="15" fill="rgb(237,174,47)" fg:x="333061525" fg:w="1109669"/><text x="10.7011%" y="559.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,109,669 samples, 0.03%)</title><rect x="10.4511%" y="533" width="0.0348%" height="15" fill="rgb(206,201,31)" fg:x="333061525" fg:w="1109669"/><text x="10.7011%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,109,669 samples, 0.03%)</title><rect x="10.4511%" y="517" width="0.0348%" height="15" fill="rgb(231,57,52)" fg:x="333061525" fg:w="1109669"/><text x="10.7011%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,109,669 samples, 0.03%)</title><rect x="10.4511%" y="501" width="0.0348%" height="15" fill="rgb(248,177,22)" fg:x="333061525" fg:w="1109669"/><text x="10.7011%" y="511.50"></text></g><g><title>[libGLX_nvidia.so.575.57.08] (1,830,370 samples, 0.06%)</title><rect x="10.4859%" y="533" width="0.0574%" height="15" fill="rgb(215,211,37)" fg:x="334171194" fg:w="1830370"/><text x="10.7359%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (1,830,370 samples, 0.06%)</title><rect x="10.4859%" y="517" width="0.0574%" height="15" fill="rgb(241,128,51)" fg:x="334171194" fg:w="1830370"/><text x="10.7359%" y="527.50"></text></g><g><title>[libnvidia-gpucomp.so.575.57.08] (1,830,370 samples, 0.06%)</title><rect x="10.4859%" y="501" width="0.0574%" height="15" fill="rgb(227,165,31)" fg:x="334171194" fg:w="1830370"/><text x="10.7359%" y="511.50"></text></g><g><title>[libnvidia-gpucomp.so.575.57.08] (1,830,370 samples, 0.06%)</title><rect x="10.4859%" y="485" width="0.0574%" height="15" fill="rgb(228,167,24)" fg:x="334171194" fg:w="1830370"/><text x="10.7359%" y="495.50"></text></g><g><title>[libnvidia-gpucomp.so.575.57.08] (1,830,370 samples, 0.06%)</title><rect x="10.4859%" y="469" width="0.0574%" height="15" fill="rgb(228,143,12)" fg:x="334171194" fg:w="1830370"/><text x="10.7359%" y="479.50"></text></g><g><title>[libnvidia-gpucomp.so.575.57.08] (1,830,370 samples, 0.06%)</title><rect x="10.4859%" y="453" width="0.0574%" height="15" fill="rgb(249,149,8)" fg:x="334171194" fg:w="1830370"/><text x="10.7359%" y="463.50"></text></g><g><title>__tls_get_addr@plt (1,830,370 samples, 0.06%)</title><rect x="10.4859%" y="437" width="0.0574%" height="15" fill="rgb(243,35,44)" fg:x="334171194" fg:w="1830370"/><text x="10.7359%" y="447.50"></text></g><g><title>[libc.so.6] (1,075,637 samples, 0.03%)</title><rect x="10.6632%" y="501" width="0.0338%" height="15" fill="rgb(246,89,9)" fg:x="339821840" fg:w="1075637"/><text x="10.9132%" y="511.50"></text></g><g><title>[libGLX_nvidia.so.575.57.08] (8,697,260 samples, 0.27%)</title><rect x="10.4859%" y="581" width="0.2729%" height="15" fill="rgb(233,213,13)" fg:x="334171194" fg:w="8697260"/><text x="10.7359%" y="591.50"></text></g><g><title>[libGLX_nvidia.so.575.57.08] (8,697,260 samples, 0.27%)</title><rect x="10.4859%" y="565" width="0.2729%" height="15" fill="rgb(233,141,41)" fg:x="334171194" fg:w="8697260"/><text x="10.7359%" y="575.50"></text></g><g><title>[libGLX_nvidia.so.575.57.08] (8,697,260 samples, 0.27%)</title><rect x="10.4859%" y="549" width="0.2729%" height="15" fill="rgb(239,167,4)" fg:x="334171194" fg:w="8697260"/><text x="10.7359%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (6,866,890 samples, 0.22%)</title><rect x="10.5433%" y="533" width="0.2155%" height="15" fill="rgb(209,217,16)" fg:x="336001564" fg:w="6866890"/><text x="10.7933%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (6,866,890 samples, 0.22%)</title><rect x="10.5433%" y="517" width="0.2155%" height="15" fill="rgb(219,88,35)" fg:x="336001564" fg:w="6866890"/><text x="10.7933%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (1,970,977 samples, 0.06%)</title><rect x="10.6970%" y="501" width="0.0618%" height="15" fill="rgb(220,193,23)" fg:x="340897477" fg:w="1970977"/><text x="10.9470%" y="511.50"></text></g><g><title>[libc.so.6] (1,970,977 samples, 0.06%)</title><rect x="10.6970%" y="485" width="0.0618%" height="15" fill="rgb(230,90,52)" fg:x="340897477" fg:w="1970977"/><text x="10.9470%" y="495.50"></text></g><g><title>dlopen (12,627,422 samples, 0.40%)</title><rect x="10.3905%" y="741" width="0.3962%" height="15" fill="rgb(252,106,19)" fg:x="331130579" fg:w="12627422"/><text x="10.6405%" y="751.50"></text></g><g><title>[libc.so.6] (12,627,422 samples, 0.40%)</title><rect x="10.3905%" y="725" width="0.3962%" height="15" fill="rgb(206,74,20)" fg:x="331130579" fg:w="12627422"/><text x="10.6405%" y="735.50"></text></g><g><title>[ld-linux-x86-64.so.2] (12,627,422 samples, 0.40%)</title><rect x="10.3905%" y="709" width="0.3962%" height="15" fill="rgb(230,138,44)" fg:x="331130579" fg:w="12627422"/><text x="10.6405%" y="719.50"></text></g><g><title>_dl_catch_exception (12,627,422 samples, 0.40%)</title><rect x="10.3905%" y="693" width="0.3962%" height="15" fill="rgb(235,182,43)" fg:x="331130579" fg:w="12627422"/><text x="10.6405%" y="703.50"></text></g><g><title>[libc.so.6] (12,627,422 samples, 0.40%)</title><rect x="10.3905%" y="677" width="0.3962%" height="15" fill="rgb(242,16,51)" fg:x="331130579" fg:w="12627422"/><text x="10.6405%" y="687.50"></text></g><g><title>[ld-linux-x86-64.so.2] (12,627,422 samples, 0.40%)</title><rect x="10.3905%" y="661" width="0.3962%" height="15" fill="rgb(248,9,4)" fg:x="331130579" fg:w="12627422"/><text x="10.6405%" y="671.50"></text></g><g><title>_dl_catch_exception (12,627,422 samples, 0.40%)</title><rect x="10.3905%" y="645" width="0.3962%" height="15" fill="rgb(210,31,22)" fg:x="331130579" fg:w="12627422"/><text x="10.6405%" y="655.50"></text></g><g><title>[ld-linux-x86-64.so.2] (12,627,422 samples, 0.40%)</title><rect x="10.3905%" y="629" width="0.3962%" height="15" fill="rgb(239,54,39)" fg:x="331130579" fg:w="12627422"/><text x="10.6405%" y="639.50"></text></g><g><title>_dl_catch_exception (12,627,422 samples, 0.40%)</title><rect x="10.3905%" y="613" width="0.3962%" height="15" fill="rgb(230,99,41)" fg:x="331130579" fg:w="12627422"/><text x="10.6405%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (12,627,422 samples, 0.40%)</title><rect x="10.3905%" y="597" width="0.3962%" height="15" fill="rgb(253,106,12)" fg:x="331130579" fg:w="12627422"/><text x="10.6405%" y="607.50"></text></g><g><title>[libnvidia-gpucomp.so.575.57.08] (889,547 samples, 0.03%)</title><rect x="10.7588%" y="581" width="0.0279%" height="15" fill="rgb(213,46,41)" fg:x="342868454" fg:w="889547"/><text x="11.0088%" y="591.50"></text></g><g><title>[libnvidia-gpucomp.so.575.57.08] (889,547 samples, 0.03%)</title><rect x="10.7588%" y="565" width="0.0279%" height="15" fill="rgb(215,133,35)" fg:x="342868454" fg:w="889547"/><text x="11.0088%" y="575.50"></text></g><g><title>[libnvidia-gpucomp.so.575.57.08] (889,547 samples, 0.03%)</title><rect x="10.7588%" y="549" width="0.0279%" height="15" fill="rgb(213,28,5)" fg:x="342868454" fg:w="889547"/><text x="11.0088%" y="559.50"></text></g><g><title>[libnvidia-gpucomp.so.575.57.08] (889,547 samples, 0.03%)</title><rect x="10.7588%" y="533" width="0.0279%" height="15" fill="rgb(215,77,49)" fg:x="342868454" fg:w="889547"/><text x="11.0088%" y="543.50"></text></g><g><title>[libc.so.6] (889,547 samples, 0.03%)</title><rect x="10.7588%" y="517" width="0.0279%" height="15" fill="rgb(248,100,22)" fg:x="342868454" fg:w="889547"/><text x="11.0088%" y="527.50"></text></g><g><title>[libc.so.6] (3,979,386 samples, 0.12%)</title><rect x="10.7867%" y="661" width="0.1249%" height="15" fill="rgb(208,67,9)" fg:x="343758001" fg:w="3979386"/><text x="11.0367%" y="671.50"></text></g><g><title>[libGLX_nvidia.so.575.57.08] (1,416,117 samples, 0.04%)</title><rect x="10.9116%" y="645" width="0.0444%" height="15" fill="rgb(219,133,21)" fg:x="347737387" fg:w="1416117"/><text x="11.1616%" y="655.50"></text></g><g><title>[libnvidia-glsi.so.575.57.08] (1,416,117 samples, 0.04%)</title><rect x="10.9116%" y="629" width="0.0444%" height="15" fill="rgb(246,46,29)" fg:x="347737387" fg:w="1416117"/><text x="11.1616%" y="639.50"></text></g><g><title>[libnvidia-glsi.so.575.57.08] (1,416,117 samples, 0.04%)</title><rect x="10.9116%" y="613" width="0.0444%" height="15" fill="rgb(246,185,52)" fg:x="347737387" fg:w="1416117"/><text x="11.1616%" y="623.50"></text></g><g><title>[libnvidia-glsi.so.575.57.08] (1,416,117 samples, 0.04%)</title><rect x="10.9116%" y="597" width="0.0444%" height="15" fill="rgb(252,136,11)" fg:x="347737387" fg:w="1416117"/><text x="11.1616%" y="607.50"></text></g><g><title>[libnvidia-glsi.so.575.57.08] (1,416,117 samples, 0.04%)</title><rect x="10.9116%" y="581" width="0.0444%" height="15" fill="rgb(219,138,53)" fg:x="347737387" fg:w="1416117"/><text x="11.1616%" y="591.50"></text></g><g><title>[libnvidia-glsi.so.575.57.08] (1,416,117 samples, 0.04%)</title><rect x="10.9116%" y="565" width="0.0444%" height="15" fill="rgb(211,51,23)" fg:x="347737387" fg:w="1416117"/><text x="11.1616%" y="575.50"></text></g><g><title>[libnvidia-glsi.so.575.57.08] (1,416,117 samples, 0.04%)</title><rect x="10.9116%" y="549" width="0.0444%" height="15" fill="rgb(247,221,28)" fg:x="347737387" fg:w="1416117"/><text x="11.1616%" y="559.50"></text></g><g><title>[libnvidia-glsi.so.575.57.08] (1,416,117 samples, 0.04%)</title><rect x="10.9116%" y="533" width="0.0444%" height="15" fill="rgb(251,222,45)" fg:x="347737387" fg:w="1416117"/><text x="11.1616%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (3,297,250 samples, 0.10%)</title><rect x="11.0979%" y="597" width="0.1035%" height="15" fill="rgb(217,162,53)" fg:x="353673371" fg:w="3297250"/><text x="11.3479%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (1,209,709 samples, 0.04%)</title><rect x="11.1634%" y="581" width="0.0380%" height="15" fill="rgb(229,93,14)" fg:x="355760912" fg:w="1209709"/><text x="11.4134%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (1,209,709 samples, 0.04%)</title><rect x="11.1634%" y="565" width="0.0380%" height="15" fill="rgb(209,67,49)" fg:x="355760912" fg:w="1209709"/><text x="11.4134%" y="575.50"></text></g><g><title>[libdbus-1.so.3.38.3] (1,209,709 samples, 0.04%)</title><rect x="11.1634%" y="549" width="0.0380%" height="15" fill="rgb(213,87,29)" fg:x="355760912" fg:w="1209709"/><text x="11.4134%" y="559.50"></text></g><g><title>dbus_bus_register (1,209,709 samples, 0.04%)</title><rect x="11.1634%" y="533" width="0.0380%" height="15" fill="rgb(205,151,52)" fg:x="355760912" fg:w="1209709"/><text x="11.4134%" y="543.50"></text></g><g><title>dbus_connection_send_with_reply_and_block (1,209,709 samples, 0.04%)</title><rect x="11.1634%" y="517" width="0.0380%" height="15" fill="rgb(253,215,39)" fg:x="355760912" fg:w="1209709"/><text x="11.4134%" y="527.50"></text></g><g><title>dbus_connection_send_with_reply (1,209,709 samples, 0.04%)</title><rect x="11.1634%" y="501" width="0.0380%" height="15" fill="rgb(221,220,41)" fg:x="355760912" fg:w="1209709"/><text x="11.4134%" y="511.50"></text></g><g><title>dbus_message_new_error (1,209,709 samples, 0.04%)</title><rect x="11.1634%" y="485" width="0.0380%" height="15" fill="rgb(218,133,21)" fg:x="355760912" fg:w="1209709"/><text x="11.4134%" y="495.50"></text></g><g><title>dbus_message_iter_append_basic (1,209,709 samples, 0.04%)</title><rect x="11.1634%" y="469" width="0.0380%" height="15" fill="rgb(221,193,43)" fg:x="355760912" fg:w="1209709"/><text x="11.4134%" y="479.50"></text></g><g><title>[libdbus-1.so.3.38.3] (1,209,709 samples, 0.04%)</title><rect x="11.1634%" y="453" width="0.0380%" height="15" fill="rgb(240,128,52)" fg:x="355760912" fg:w="1209709"/><text x="11.4134%" y="463.50"></text></g><g><title>_dbus_header_get_field_raw (1,209,709 samples, 0.04%)</title><rect x="11.1634%" y="437" width="0.0380%" height="15" fill="rgb(253,114,12)" fg:x="355760912" fg:w="1209709"/><text x="11.4134%" y="447.50"></text></g><g><title>[libdbus-1.so.3.38.3] (1,209,709 samples, 0.04%)</title><rect x="11.1634%" y="421" width="0.0380%" height="15" fill="rgb(215,223,47)" fg:x="355760912" fg:w="1209709"/><text x="11.4134%" y="431.50"></text></g><g><title>_dbus_type_reader_next (1,209,709 samples, 0.04%)</title><rect x="11.1634%" y="405" width="0.0380%" height="15" fill="rgb(248,225,23)" fg:x="355760912" fg:w="1209709"/><text x="11.4134%" y="415.50"></text></g><g><title>[libdbus-1.so.3.38.3] (1,209,709 samples, 0.04%)</title><rect x="11.1634%" y="389" width="0.0380%" height="15" fill="rgb(250,108,0)" fg:x="355760912" fg:w="1209709"/><text x="11.4134%" y="399.50"></text></g><g><title>_dbus_type_reader_next (1,209,709 samples, 0.04%)</title><rect x="11.1634%" y="373" width="0.0380%" height="15" fill="rgb(228,208,7)" fg:x="355760912" fg:w="1209709"/><text x="11.4134%" y="383.50"></text></g><g><title>[libdbus-1.so.3.38.3] (1,209,709 samples, 0.04%)</title><rect x="11.1634%" y="357" width="0.0380%" height="15" fill="rgb(244,45,10)" fg:x="355760912" fg:w="1209709"/><text x="11.4134%" y="367.50"></text></g><g><title>[libdbus-1.so.3.38.3] (1,209,709 samples, 0.04%)</title><rect x="11.1634%" y="341" width="0.0380%" height="15" fill="rgb(207,125,25)" fg:x="355760912" fg:w="1209709"/><text x="11.4134%" y="351.50"></text></g><g><title>_dbus_type_reader_next (1,209,709 samples, 0.04%)</title><rect x="11.1634%" y="325" width="0.0380%" height="15" fill="rgb(210,195,18)" fg:x="355760912" fg:w="1209709"/><text x="11.4134%" y="335.50"></text></g><g><title>[libGLX_nvidia.so.575.57.08] (14,092,744 samples, 0.44%)</title><rect x="10.7867%" y="677" width="0.4422%" height="15" fill="rgb(249,80,12)" fg:x="343758001" fg:w="14092744"/><text x="11.0367%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (10,113,358 samples, 0.32%)</title><rect x="10.9116%" y="661" width="0.3173%" height="15" fill="rgb(221,65,9)" fg:x="347737387" fg:w="10113358"/><text x="11.1616%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (8,697,241 samples, 0.27%)</title><rect x="10.9560%" y="645" width="0.2729%" height="15" fill="rgb(235,49,36)" fg:x="349153504" fg:w="8697241"/><text x="11.2060%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (8,697,241 samples, 0.27%)</title><rect x="10.9560%" y="629" width="0.2729%" height="15" fill="rgb(225,32,20)" fg:x="349153504" fg:w="8697241"/><text x="11.2060%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (8,697,241 samples, 0.27%)</title><rect x="10.9560%" y="613" width="0.2729%" height="15" fill="rgb(215,141,46)" fg:x="349153504" fg:w="8697241"/><text x="11.2060%" y="623.50"></text></g><g><title>getenv (880,124 samples, 0.03%)</title><rect x="11.2013%" y="597" width="0.0276%" height="15" fill="rgb(250,160,47)" fg:x="356970621" fg:w="880124"/><text x="11.4513%" y="607.50"></text></g><g><title>[libGLX_nvidia.so.575.57.08] (16,052,198 samples, 0.50%)</title><rect x="10.7867%" y="693" width="0.5037%" height="15" fill="rgb(216,222,40)" fg:x="343758001" fg:w="16052198"/><text x="11.0367%" y="703.50"></text></g><g><title>dlopen (1,959,454 samples, 0.06%)</title><rect x="11.2289%" y="677" width="0.0615%" height="15" fill="rgb(234,217,39)" fg:x="357850745" fg:w="1959454"/><text x="11.4789%" y="687.50"></text></g><g><title>[libc.so.6] (1,959,454 samples, 0.06%)</title><rect x="11.2289%" y="661" width="0.0615%" height="15" fill="rgb(207,178,40)" fg:x="357850745" fg:w="1959454"/><text x="11.4789%" y="671.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,959,454 samples, 0.06%)</title><rect x="11.2289%" y="645" width="0.0615%" height="15" fill="rgb(221,136,13)" fg:x="357850745" fg:w="1959454"/><text x="11.4789%" y="655.50"></text></g><g><title>_dl_catch_exception (1,959,454 samples, 0.06%)</title><rect x="11.2289%" y="629" width="0.0615%" height="15" fill="rgb(249,199,10)" fg:x="357850745" fg:w="1959454"/><text x="11.4789%" y="639.50"></text></g><g><title>[libc.so.6] (1,959,454 samples, 0.06%)</title><rect x="11.2289%" y="613" width="0.0615%" height="15" fill="rgb(249,222,13)" fg:x="357850745" fg:w="1959454"/><text x="11.4789%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,959,454 samples, 0.06%)</title><rect x="11.2289%" y="597" width="0.0615%" height="15" fill="rgb(244,185,38)" fg:x="357850745" fg:w="1959454"/><text x="11.4789%" y="607.50"></text></g><g><title>_dl_catch_exception (1,959,454 samples, 0.06%)</title><rect x="11.2289%" y="581" width="0.0615%" height="15" fill="rgb(236,202,9)" fg:x="357850745" fg:w="1959454"/><text x="11.4789%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,959,454 samples, 0.06%)</title><rect x="11.2289%" y="565" width="0.0615%" height="15" fill="rgb(250,229,37)" fg:x="357850745" fg:w="1959454"/><text x="11.4789%" y="575.50"></text></g><g><title>_dl_catch_exception (1,959,454 samples, 0.06%)</title><rect x="11.2289%" y="549" width="0.0615%" height="15" fill="rgb(206,174,23)" fg:x="357850745" fg:w="1959454"/><text x="11.4789%" y="559.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,959,454 samples, 0.06%)</title><rect x="11.2289%" y="533" width="0.0615%" height="15" fill="rgb(211,33,43)" fg:x="357850745" fg:w="1959454"/><text x="11.4789%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,959,454 samples, 0.06%)</title><rect x="11.2289%" y="517" width="0.0615%" height="15" fill="rgb(245,58,50)" fg:x="357850745" fg:w="1959454"/><text x="11.4789%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,959,454 samples, 0.06%)</title><rect x="11.2289%" y="501" width="0.0615%" height="15" fill="rgb(244,68,36)" fg:x="357850745" fg:w="1959454"/><text x="11.4789%" y="511.50"></text></g><g><title>[libvulkan.so.1.4.313] (37,392,145 samples, 1.17%)</title><rect x="10.2612%" y="837" width="1.1733%" height="15" fill="rgb(232,229,15)" fg:x="327008680" fg:w="37392145"/><text x="10.5112%" y="847.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (33,947,195 samples, 1.07%)</title><rect x="10.3693%" y="821" width="1.0652%" height="15" fill="rgb(254,30,23)" fg:x="330453630" fg:w="33947195"/><text x="10.6193%" y="831.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties::_{{closure}} (33,947,195 samples, 1.07%)</title><rect x="10.3693%" y="805" width="1.0652%" height="15" fill="rgb(235,160,14)" fg:x="330453630" fg:w="33947195"/><text x="10.6193%" y="815.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (33,947,195 samples, 1.07%)</title><rect x="10.3693%" y="789" width="1.0652%" height="15" fill="rgb(212,155,44)" fg:x="330453630" fg:w="33947195"/><text x="10.6193%" y="799.50"></text></g><g><title>[libvulkan.so.1.4.313] (33,947,195 samples, 1.07%)</title><rect x="10.3693%" y="773" width="1.0652%" height="15" fill="rgb(226,2,50)" fg:x="330453630" fg:w="33947195"/><text x="10.6193%" y="783.50"></text></g><g><title>[libvulkan.so.1.4.313] (33,947,195 samples, 1.07%)</title><rect x="10.3693%" y="757" width="1.0652%" height="15" fill="rgb(234,177,6)" fg:x="330453630" fg:w="33947195"/><text x="10.6193%" y="767.50"></text></g><g><title>vk_icdNegotiateLoaderICDInterfaceVersion (20,642,824 samples, 0.65%)</title><rect x="10.7867%" y="741" width="0.6477%" height="15" fill="rgb(217,24,9)" fg:x="343758001" fg:w="20642824"/><text x="11.0367%" y="751.50"></text></g><g><title>[libGLX_nvidia.so.575.57.08] (20,642,824 samples, 0.65%)</title><rect x="10.7867%" y="725" width="0.6477%" height="15" fill="rgb(220,13,46)" fg:x="343758001" fg:w="20642824"/><text x="11.0367%" y="735.50"></text></g><g><title>[libGLX_nvidia.so.575.57.08] (20,642,824 samples, 0.65%)</title><rect x="10.7867%" y="709" width="0.6477%" height="15" fill="rgb(239,221,27)" fg:x="343758001" fg:w="20642824"/><text x="11.0367%" y="719.50"></text></g><g><title>[libnvidia-glsi.so.575.57.08] (4,590,626 samples, 0.14%)</title><rect x="11.2904%" y="693" width="0.1440%" height="15" fill="rgb(222,198,25)" fg:x="359810199" fg:w="4590626"/><text x="11.5404%" y="703.50"></text></g><g><title>[libnvidia-glsi.so.575.57.08] (4,590,626 samples, 0.14%)</title><rect x="11.2904%" y="677" width="0.1440%" height="15" fill="rgb(211,99,13)" fg:x="359810199" fg:w="4590626"/><text x="11.5404%" y="687.50"></text></g><g><title>[libnvidia-glsi.so.575.57.08] (4,590,626 samples, 0.14%)</title><rect x="11.2904%" y="661" width="0.1440%" height="15" fill="rgb(232,111,31)" fg:x="359810199" fg:w="4590626"/><text x="11.5404%" y="671.50"></text></g><g><title>[libnvidia-glsi.so.575.57.08] (4,590,626 samples, 0.14%)</title><rect x="11.2904%" y="645" width="0.1440%" height="15" fill="rgb(245,82,37)" fg:x="359810199" fg:w="4590626"/><text x="11.5404%" y="655.50"></text></g><g><title>[libnvidia-glsi.so.575.57.08] (4,590,626 samples, 0.14%)</title><rect x="11.2904%" y="629" width="0.1440%" height="15" fill="rgb(227,149,46)" fg:x="359810199" fg:w="4590626"/><text x="11.5404%" y="639.50"></text></g><g><title>[libnvidia-glsi.so.575.57.08] (4,590,626 samples, 0.14%)</title><rect x="11.2904%" y="613" width="0.1440%" height="15" fill="rgb(218,36,50)" fg:x="359810199" fg:w="4590626"/><text x="11.5404%" y="623.50"></text></g><g><title>[libnvidia-glsi.so.575.57.08] (4,590,626 samples, 0.14%)</title><rect x="11.2904%" y="597" width="0.1440%" height="15" fill="rgb(226,80,48)" fg:x="359810199" fg:w="4590626"/><text x="11.5404%" y="607.50"></text></g><g><title>[libnvidia-glsi.so.575.57.08] (4,590,626 samples, 0.14%)</title><rect x="11.2904%" y="581" width="0.1440%" height="15" fill="rgb(238,224,15)" fg:x="359810199" fg:w="4590626"/><text x="11.5404%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8,377,522 samples, 0.26%)</title><rect x="16.1823%" y="821" width="0.2629%" height="15" fill="rgb(241,136,10)" fg:x="515707214" fg:w="8377522"/><text x="16.4323%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8,377,522 samples, 0.26%)</title><rect x="16.1823%" y="805" width="0.2629%" height="15" fill="rgb(208,32,45)" fg:x="515707214" fg:w="8377522"/><text x="16.4323%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,347,198 samples, 0.11%)</title><rect x="16.3401%" y="789" width="0.1050%" height="15" fill="rgb(207,135,9)" fg:x="520737538" fg:w="3347198"/><text x="16.5901%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3,347,198 samples, 0.11%)</title><rect x="16.3401%" y="773" width="0.1050%" height="15" fill="rgb(206,86,44)" fg:x="520737538" fg:w="3347198"/><text x="16.5901%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,347,198 samples, 0.11%)</title><rect x="16.3401%" y="757" width="0.1050%" height="15" fill="rgb(245,177,15)" fg:x="520737538" fg:w="3347198"/><text x="16.5901%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3,347,198 samples, 0.11%)</title><rect x="16.3401%" y="741" width="0.1050%" height="15" fill="rgb(206,64,50)" fg:x="520737538" fg:w="3347198"/><text x="16.5901%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,347,198 samples, 0.11%)</title><rect x="16.3401%" y="725" width="0.1050%" height="15" fill="rgb(234,36,40)" fg:x="520737538" fg:w="3347198"/><text x="16.5901%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (3,342,658 samples, 0.10%)</title><rect x="16.6575%" y="805" width="0.1049%" height="15" fill="rgb(213,64,8)" fg:x="530851526" fg:w="3342658"/><text x="16.9075%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::offset_from_unsigned (3,342,658 samples, 0.10%)</title><rect x="16.6575%" y="789" width="0.1049%" height="15" fill="rgb(210,75,36)" fg:x="530851526" fg:w="3342658"/><text x="16.9075%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset_from_unsigned (3,342,658 samples, 0.10%)</title><rect x="16.6575%" y="773" width="0.1049%" height="15" fill="rgb(229,88,21)" fg:x="530851526" fg:w="3342658"/><text x="16.9075%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from_unsigned (3,342,658 samples, 0.10%)</title><rect x="16.6575%" y="757" width="0.1049%" height="15" fill="rgb(252,204,47)" fg:x="530851526" fg:w="3342658"/><text x="16.9075%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from_unsigned::precondition_check (1,671,082 samples, 0.05%)</title><rect x="16.7100%" y="741" width="0.0524%" height="15" fill="rgb(208,77,27)" fg:x="532523102" fg:w="1671082"/><text x="16.9600%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from_unsigned::runtime_ptr_ge (1,671,082 samples, 0.05%)</title><rect x="16.7100%" y="725" width="0.0524%" height="15" fill="rgb(221,76,26)" fg:x="532523102" fg:w="1671082"/><text x="16.9600%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from_unsigned::runtime_ptr_ge::runtime (1,671,082 samples, 0.05%)</title><rect x="16.7100%" y="709" width="0.0524%" height="15" fill="rgb(225,139,18)" fg:x="532523102" fg:w="1671082"/><text x="16.9600%" y="719.50"></text></g><g><title>core::mem::take (3,343,416 samples, 0.10%)</title><rect x="16.7624%" y="805" width="0.1049%" height="15" fill="rgb(230,137,11)" fg:x="534194184" fg:w="3343416"/><text x="17.0124%" y="815.50"></text></g><g><title>core::mem::replace (3,343,416 samples, 0.10%)</title><rect x="16.7624%" y="789" width="0.1049%" height="15" fill="rgb(212,28,1)" fg:x="534194184" fg:w="3343416"/><text x="17.0124%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,797,180 samples, 0.53%)</title><rect x="16.4452%" y="821" width="0.5271%" height="15" fill="rgb(248,164,17)" fg:x="524084736" fg:w="16797180"/><text x="16.6952%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;winit::event::Event&lt;()&gt;,alloc::alloc::Global&gt;&gt; (3,344,316 samples, 0.10%)</title><rect x="16.8673%" y="805" width="0.1049%" height="15" fill="rgb(222,171,42)" fg:x="537537600" fg:w="3344316"/><text x="17.1173%" y="815.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,344,316 samples, 0.10%)</title><rect x="16.8673%" y="789" width="0.1049%" height="15" fill="rgb(243,84,45)" fg:x="537537600" fg:w="3344316"/><text x="17.1173%" y="799.50"></text></g><g><title>&lt;calloop::sources::generic::Generic&lt;F,E&gt; as calloop::sources::EventSource&gt;::process_events (3,355,212 samples, 0.11%)</title><rect x="16.9722%" y="821" width="0.1053%" height="15" fill="rgb(252,49,23)" fg:x="540881916" fg:w="3355212"/><text x="17.2222%" y="831.50"></text></g><g><title>&lt;calloop_wayland_source::WaylandSource&lt;D&gt; as calloop::sources::EventSource&gt;::before_sleep (1,673,537 samples, 0.05%)</title><rect x="17.0775%" y="821" width="0.0525%" height="15" fill="rgb(215,19,7)" fg:x="544237128" fg:w="1673537"/><text x="17.3275%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18,016,136 samples, 0.57%)</title><rect x="17.1300%" y="821" width="0.5653%" height="15" fill="rgb(238,81,41)" fg:x="545910665" fg:w="18016136"/><text x="17.3800%" y="831.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::FromResidual&lt;core::ops::control_flow::ControlFlow&lt;B,core::convert::Infallible&gt;&gt;&gt;::from_residual (3,344,444 samples, 0.10%)</title><rect x="17.6954%" y="757" width="0.1049%" height="15" fill="rgb(210,199,37)" fg:x="563926801" fg:w="3344444"/><text x="17.9454%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::_{{closure}} (5,020,369 samples, 0.16%)</title><rect x="18.6599%" y="709" width="0.1575%" height="15" fill="rgb(244,192,49)" fg:x="594664863" fg:w="5020369"/><text x="18.9099%" y="719.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::from_try (5,020,369 samples, 0.16%)</title><rect x="18.6599%" y="693" width="0.1575%" height="15" fill="rgb(226,211,11)" fg:x="594664863" fg:w="5020369"/><text x="18.9099%" y="703.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (5,020,369 samples, 0.16%)</title><rect x="18.6599%" y="677" width="0.1575%" height="15" fill="rgb(236,162,54)" fg:x="594664863" fg:w="5020369"/><text x="18.9099%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (41,434,529 samples, 1.30%)</title><rect x="17.6954%" y="821" width="1.3002%" height="15" fill="rgb(220,229,9)" fg:x="563926801" fg:w="41434529"/><text x="17.9454%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (41,434,529 samples, 1.30%)</title><rect x="17.6954%" y="805" width="1.3002%" height="15" fill="rgb(250,87,22)" fg:x="563926801" fg:w="41434529"/><text x="17.9454%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (41,434,529 samples, 1.30%)</title><rect x="17.6954%" y="789" width="1.3002%" height="15" fill="rgb(239,43,17)" fg:x="563926801" fg:w="41434529"/><text x="17.9454%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (41,434,529 samples, 1.30%)</title><rect x="17.6954%" y="773" width="1.3002%" height="15" fill="rgb(231,177,25)" fg:x="563926801" fg:w="41434529"/><text x="17.9454%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (38,090,085 samples, 1.20%)</title><rect x="17.8003%" y="757" width="1.1952%" height="15" fill="rgb(219,179,1)" fg:x="567271245" fg:w="38090085"/><text x="18.0503%" y="767.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (38,090,085 samples, 1.20%)</title><rect x="17.8003%" y="741" width="1.1952%" height="15" fill="rgb(238,219,53)" fg:x="567271245" fg:w="38090085"/><text x="18.0503%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_{{closure}} (38,090,085 samples, 1.20%)</title><rect x="17.8003%" y="725" width="1.1952%" height="15" fill="rgb(232,167,36)" fg:x="567271245" fg:w="38090085"/><text x="18.0503%" y="735.50"></text></g><g><title>calloop::sys::Poll::poll::_{{closure}} (5,676,098 samples, 0.18%)</title><rect x="18.8174%" y="709" width="0.1781%" height="15" fill="rgb(244,19,51)" fg:x="599685232" fg:w="5676098"/><text x="19.0674%" y="719.50"></text></g><g><title>&lt;my_app::MyApp as silk_engine::App&gt;::update (3,003,915 samples, 0.09%)</title><rect x="18.9955%" y="821" width="0.0943%" height="15" fill="rgb(224,6,22)" fg:x="605361330" fg:w="3003915"/><text x="19.2455%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;silk_engine::AppContext&lt;my_app::MyApp&gt;&gt;&gt; (31,821,916 samples, 1.00%)</title><rect x="19.1423%" y="805" width="0.9985%" height="15" fill="rgb(224,145,5)" fg:x="610038187" fg:w="31821916"/><text x="19.3923%" y="815.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31,821,916 samples, 1.00%)</title><rect x="19.1423%" y="789" width="0.9985%" height="15" fill="rgb(234,130,49)" fg:x="610038187" fg:w="31821916"/><text x="19.3923%" y="799.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (31,821,916 samples, 1.00%)</title><rect x="19.1423%" y="773" width="0.9985%" height="15" fill="rgb(254,6,2)" fg:x="610038187" fg:w="31821916"/><text x="19.3923%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (30,150,267 samples, 0.95%)</title><rect x="19.1947%" y="757" width="0.9461%" height="15" fill="rgb(208,96,46)" fg:x="611709836" fg:w="30150267"/><text x="19.4447%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_swap (30,150,267 samples, 0.95%)</title><rect x="19.1947%" y="741" width="0.9461%" height="15" fill="rgb(239,3,39)" fg:x="611709836" fg:w="30150267"/><text x="19.4447%" y="751.50"></text></g><g><title>&lt;silk_engine::Engine&lt;T&gt; as winit::application::ApplicationHandler&gt;::window_event (1,672,228 samples, 0.05%)</title><rect x="20.1933%" y="789" width="0.0525%" height="15" fill="rgb(233,210,1)" fg:x="643532799" fg:w="1672228"/><text x="20.4433%" y="799.50"></text></g><g><title>silk_engine::AppContext&lt;A&gt;::event (1,672,228 samples, 0.05%)</title><rect x="20.1933%" y="773" width="0.0525%" height="15" fill="rgb(244,137,37)" fg:x="643532799" fg:w="1672228"/><text x="20.4433%" y="783.50"></text></g><g><title>[libc.so.6] (6,705,616 samples, 0.21%)</title><rect x="20.2458%" y="789" width="0.2104%" height="15" fill="rgb(240,136,2)" fg:x="645205027" fg:w="6705616"/><text x="20.4958%" y="799.50"></text></g><g><title>silk_engine::AppContext&lt;A&gt;::my_app (1,672,114 samples, 0.05%)</title><rect x="20.4562%" y="789" width="0.0525%" height="15" fill="rgb(239,18,37)" fg:x="651910643" fg:w="1672114"/><text x="20.7062%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1,672,114 samples, 0.05%)</title><rect x="20.4562%" y="773" width="0.0525%" height="15" fill="rgb(218,185,22)" fg:x="651910643" fg:w="1672114"/><text x="20.7062%" y="783.50"></text></g><g><title>silk_engine::AppContext&lt;A&gt;::render (13,373,957 samples, 0.42%)</title><rect x="20.5087%" y="789" width="0.4197%" height="15" fill="rgb(225,218,4)" fg:x="653582757" fg:w="13373957"/><text x="20.7587%" y="799.50"></text></g><g><title>silk_engine::input::Input::reset (8,355,722 samples, 0.26%)</title><rect x="20.6661%" y="773" width="0.2622%" height="15" fill="rgb(230,182,32)" fg:x="658600992" fg:w="8355722"/><text x="20.9161%" y="783.50"></text></g><g><title>[libc.so.6] (8,355,722 samples, 0.26%)</title><rect x="20.6661%" y="757" width="0.2622%" height="15" fill="rgb(242,56,43)" fg:x="658600992" fg:w="8355722"/><text x="20.9161%" y="767.50"></text></g><g><title>core::time::Duration::as_secs_f32 (21,593,564 samples, 0.68%)</title><rect x="21.0333%" y="773" width="0.6776%" height="15" fill="rgb(233,99,24)" fg:x="670301562" fg:w="21593564"/><text x="21.2833%" y="783.50"></text></g><g><title>silk_engine::AppContext&lt;A&gt;::my_app (1,677,692 samples, 0.05%)</title><rect x="21.7109%" y="773" width="0.0526%" height="15" fill="rgb(234,209,42)" fg:x="691895126" fg:w="1677692"/><text x="21.9609%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1,677,692 samples, 0.05%)</title><rect x="21.7109%" y="757" width="0.0526%" height="15" fill="rgb(227,7,12)" fg:x="691895126" fg:w="1677692"/><text x="21.9609%" y="767.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (46,822,492 samples, 1.47%)</title><rect x="21.7635%" y="773" width="1.4692%" height="15" fill="rgb(245,203,43)" fg:x="693572818" fg:w="46822492"/><text x="22.0135%" y="783.50"></text></g><g><title>clock_gettime (45,151,048 samples, 1.42%)</title><rect x="21.8160%" y="757" width="1.4168%" height="15" fill="rgb(238,205,33)" fg:x="695244262" fg:w="45151048"/><text x="22.0660%" y="767.50"></text></g><g><title>__vdso_clock_gettime (45,151,048 samples, 1.42%)</title><rect x="21.8160%" y="741" width="1.4168%" height="15" fill="rgb(231,56,7)" fg:x="695244262" fg:w="45151048"/><text x="22.0660%" y="751.50"></text></g><g><title>silk_engine::AppContext&lt;A&gt;::update (86,867,131 samples, 2.73%)</title><rect x="20.9283%" y="789" width="2.7258%" height="15" fill="rgb(244,186,29)" fg:x="666956714" fg:w="86867131"/><text x="21.1783%" y="799.50">si..</text></g><g><title>std::time::Instant::duration_since (13,428,535 samples, 0.42%)</title><rect x="23.2327%" y="773" width="0.4214%" height="15" fill="rgb(234,111,31)" fg:x="740395310" fg:w="13428535"/><text x="23.4827%" y="783.50"></text></g><g><title>std::time::Instant::checked_duration_since (11,756,728 samples, 0.37%)</title><rect x="23.2852%" y="757" width="0.3689%" height="15" fill="rgb(241,149,10)" fg:x="742067117" fg:w="11756728"/><text x="23.5352%" y="767.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (11,756,728 samples, 0.37%)</title><rect x="23.2852%" y="741" width="0.3689%" height="15" fill="rgb(249,206,44)" fg:x="742067117" fg:w="11756728"/><text x="23.5352%" y="751.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (11,756,728 samples, 0.37%)</title><rect x="23.2852%" y="725" width="0.3689%" height="15" fill="rgb(251,153,30)" fg:x="742067117" fg:w="11756728"/><text x="23.5352%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (3,342,082 samples, 0.10%)</title><rect x="23.5492%" y="709" width="0.1049%" height="15" fill="rgb(239,152,38)" fg:x="750481763" fg:w="3342082"/><text x="23.7992%" y="719.50"></text></g><g><title>core::cmp::PartialOrd::ge (3,342,082 samples, 0.10%)</title><rect x="23.5492%" y="693" width="0.1049%" height="15" fill="rgb(249,139,47)" fg:x="750481763" fg:w="3342082"/><text x="23.7992%" y="703.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (3,342,082 samples, 0.10%)</title><rect x="23.5492%" y="677" width="0.1049%" height="15" fill="rgb(244,64,35)" fg:x="750481763" fg:w="3342082"/><text x="23.7992%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (1,671,146 samples, 0.05%)</title><rect x="23.6017%" y="661" width="0.0524%" height="15" fill="rgb(216,46,15)" fg:x="752152699" fg:w="1671146"/><text x="23.8517%" y="671.50"></text></g><g><title>&lt;tracing_core::metadata::Level as core::cmp::PartialOrd&lt;tracing_core::metadata::LevelFilter&gt;&gt;::le (3,343,308 samples, 0.10%)</title><rect x="23.6541%" y="773" width="0.1049%" height="15" fill="rgb(250,74,19)" fg:x="753823845" fg:w="3343308"/><text x="23.9041%" y="783.50"></text></g><g><title>tracing_core::metadata::filter_as_usize (3,343,308 samples, 0.10%)</title><rect x="23.6541%" y="757" width="0.1049%" height="15" fill="rgb(249,42,33)" fg:x="753823845" fg:w="3343308"/><text x="23.9041%" y="767.50"></text></g><g><title>tracing::span::Span::entered (13,380,141 samples, 0.42%)</title><rect x="23.7590%" y="773" width="0.4199%" height="15" fill="rgb(242,149,17)" fg:x="757167153" fg:w="13380141"/><text x="24.0090%" y="783.50"></text></g><g><title>&lt;silk_engine::Engine&lt;T&gt; as winit::application::ApplicationHandler&gt;::window_event (192,319,408 samples, 6.03%)</title><rect x="19.0898%" y="821" width="6.0348%" height="15" fill="rgb(244,29,21)" fg:x="608365245" fg:w="192319408"/><text x="19.3398%" y="831.50">&lt;silk_en..</text></g><g><title>silk_engine::AppContext&lt;A&gt;::event (158,824,550 samples, 4.98%)</title><rect x="20.1408%" y="805" width="4.9837%" height="15" fill="rgb(220,130,37)" fg:x="641860103" fg:w="158824550"/><text x="20.3908%" y="815.50">silk_e..</text></g><g><title>winit::window::Window::request_redraw (46,860,808 samples, 1.47%)</title><rect x="23.6541%" y="789" width="1.4704%" height="15" fill="rgb(211,67,2)" fg:x="753823845" fg:w="46860808"/><text x="23.9041%" y="799.50"></text></g><g><title>winit::platform_impl::linux::Window::maybe_queue_on_main (30,137,359 samples, 0.95%)</title><rect x="24.1789%" y="773" width="0.9457%" height="15" fill="rgb(235,68,52)" fg:x="770547294" fg:w="30137359"/><text x="24.4289%" y="783.50"></text></g><g><title>winit::window::Window::request_redraw::_{{closure}} (30,137,359 samples, 0.95%)</title><rect x="24.1789%" y="757" width="0.9457%" height="15" fill="rgb(246,142,3)" fg:x="770547294" fg:w="30137359"/><text x="24.4289%" y="767.50"></text></g><g><title>winit::platform_impl::linux::Window::request_redraw (30,137,359 samples, 0.95%)</title><rect x="24.1789%" y="741" width="0.9457%" height="15" fill="rgb(241,25,7)" fg:x="770547294" fg:w="30137359"/><text x="24.4289%" y="751.50"></text></g><g><title>winit::platform_impl::linux::wayland::window::Window::request_redraw (30,137,359 samples, 0.95%)</title><rect x="24.1789%" y="725" width="0.9457%" height="15" fill="rgb(242,119,39)" fg:x="770547294" fg:w="30137359"/><text x="24.4289%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (28,464,458 samples, 0.89%)</title><rect x="24.2314%" y="709" width="0.8932%" height="15" fill="rgb(241,98,45)" fg:x="772220195" fg:w="28464458"/><text x="24.4814%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (28,464,458 samples, 0.89%)</title><rect x="24.2314%" y="693" width="0.8932%" height="15" fill="rgb(254,28,30)" fg:x="772220195" fg:w="28464458"/><text x="24.4814%" y="703.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1,673,080 samples, 0.05%)</title><rect x="25.1246%" y="821" width="0.0525%" height="15" fill="rgb(241,142,54)" fg:x="800684653" fg:w="1673080"/><text x="25.3746%" y="831.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,673,080 samples, 0.05%)</title><rect x="25.1246%" y="805" width="0.0525%" height="15" fill="rgb(222,85,15)" fg:x="800684653" fg:w="1673080"/><text x="25.3746%" y="815.50"></text></g><g><title>[libc.so.6] (1,673,080 samples, 0.05%)</title><rect x="25.1246%" y="789" width="0.0525%" height="15" fill="rgb(210,85,47)" fg:x="800684653" fg:w="1673080"/><text x="25.3746%" y="799.50"></text></g><g><title>[libc.so.6] (6,686,216 samples, 0.21%)</title><rect x="25.1771%" y="821" width="0.2098%" height="15" fill="rgb(224,206,25)" fg:x="802357733" fg:w="6686216"/><text x="25.4271%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1,672,065 samples, 0.05%)</title><rect x="25.3869%" y="789" width="0.0525%" height="15" fill="rgb(243,201,19)" fg:x="809043949" fg:w="1672065"/><text x="25.6369%" y="799.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::exit_code (1,672,409 samples, 0.05%)</title><rect x="25.5967%" y="773" width="0.0525%" height="15" fill="rgb(236,59,4)" fg:x="815732237" fg:w="1672409"/><text x="25.8467%" y="783.50"></text></g><g><title>winit::platform_impl::linux::ActiveEventLoop::exit_code (1,672,409 samples, 0.05%)</title><rect x="25.5967%" y="757" width="0.0525%" height="15" fill="rgb(254,179,45)" fg:x="815732237" fg:w="1672409"/><text x="25.8467%" y="767.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::exiting (3,343,372 samples, 0.10%)</title><rect x="25.6492%" y="773" width="0.1049%" height="15" fill="rgb(226,14,10)" fg:x="817404646" fg:w="3343372"/><text x="25.8992%" y="783.50"></text></g><g><title>winit::platform_impl::linux::ActiveEventLoop::exiting (3,343,372 samples, 0.10%)</title><rect x="25.6492%" y="757" width="0.1049%" height="15" fill="rgb(244,27,41)" fg:x="817404646" fg:w="3343372"/><text x="25.8992%" y="767.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (53,906,582 samples, 1.69%)</title><rect x="25.9116%" y="757" width="1.6915%" height="15" fill="rgb(235,35,32)" fg:x="825768173" fg:w="53906582"/><text x="26.1616%" y="767.50"></text></g><g><title>clock_gettime (52,236,455 samples, 1.64%)</title><rect x="25.9641%" y="741" width="1.6391%" height="15" fill="rgb(218,68,31)" fg:x="827438300" fg:w="52236455"/><text x="26.2141%" y="751.50"></text></g><g><title>__vdso_clock_gettime (52,236,455 samples, 1.64%)</title><rect x="25.9641%" y="725" width="1.6391%" height="15" fill="rgb(207,120,37)" fg:x="827438300" fg:w="52236455"/><text x="26.2141%" y="735.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::control_flow (5,020,949 samples, 0.16%)</title><rect x="27.6032%" y="757" width="0.1576%" height="15" fill="rgb(227,98,0)" fg:x="879674755" fg:w="5020949"/><text x="27.8532%" y="767.50"></text></g><g><title>winit::platform_impl::linux::ActiveEventLoop::control_flow (5,020,949 samples, 0.16%)</title><rect x="27.6032%" y="741" width="0.1576%" height="15" fill="rgb(207,7,3)" fg:x="879674755" fg:w="5020949"/><text x="27.8532%" y="751.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,354,155 samples, 0.11%)</title><rect x="28.9684%" y="709" width="0.1052%" height="15" fill="rgb(206,98,19)" fg:x="923183676" fg:w="3354155"/><text x="29.2184%" y="719.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::inner (1,682,024 samples, 0.05%)</title><rect x="29.0209%" y="693" width="0.0528%" height="15" fill="rgb(217,5,26)" fg:x="924855807" fg:w="1682024"/><text x="29.2709%" y="703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1,682,024 samples, 0.05%)</title><rect x="29.0209%" y="677" width="0.0528%" height="15" fill="rgb(235,190,38)" fg:x="924855807" fg:w="1682024"/><text x="29.2709%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3,344,946 samples, 0.10%)</title><rect x="29.0737%" y="709" width="0.1050%" height="15" fill="rgb(247,86,24)" fg:x="926537831" fg:w="3344946"/><text x="29.3237%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (3,344,946 samples, 0.10%)</title><rect x="29.0737%" y="693" width="0.1050%" height="15" fill="rgb(205,101,16)" fg:x="926537831" fg:w="3344946"/><text x="29.3237%" y="703.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (3,344,946 samples, 0.10%)</title><rect x="29.0737%" y="677" width="0.1050%" height="15" fill="rgb(246,168,33)" fg:x="926537831" fg:w="3344946"/><text x="29.3237%" y="687.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut::precondition_check (3,344,946 samples, 0.10%)</title><rect x="29.0737%" y="661" width="0.1050%" height="15" fill="rgb(231,114,1)" fg:x="926537831" fg:w="3344946"/><text x="29.3237%" y="671.50"></text></g><g><title>core::ub_checks::maybe_is_aligned_and_not_null (3,344,946 samples, 0.10%)</title><rect x="29.0737%" y="645" width="0.1050%" height="15" fill="rgb(207,184,53)" fg:x="926537831" fg:w="3344946"/><text x="29.3237%" y="655.50"></text></g><g><title>core::ub_checks::maybe_is_aligned_and_not_null::runtime (3,344,946 samples, 0.10%)</title><rect x="29.0737%" y="629" width="0.1050%" height="15" fill="rgb(224,95,51)" fg:x="926537831" fg:w="3344946"/><text x="29.3237%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,671,093 samples, 0.05%)</title><rect x="29.1786%" y="677" width="0.0524%" height="15" fill="rgb(212,188,45)" fg:x="929882777" fg:w="1671093"/><text x="29.4286%" y="687.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,671,093 samples, 0.05%)</title><rect x="29.1786%" y="661" width="0.0524%" height="15" fill="rgb(223,154,38)" fg:x="929882777" fg:w="1671093"/><text x="29.4286%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,671,093 samples, 0.05%)</title><rect x="29.1786%" y="645" width="0.0524%" height="15" fill="rgb(251,22,52)" fg:x="929882777" fg:w="1671093"/><text x="29.4286%" y="655.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (5,018,518 samples, 0.16%)</title><rect x="29.1786%" y="693" width="0.1575%" height="15" fill="rgb(229,209,22)" fg:x="929882777" fg:w="5018518"/><text x="29.4286%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (3,347,425 samples, 0.11%)</title><rect x="29.2311%" y="677" width="0.1050%" height="15" fill="rgb(234,138,34)" fg:x="931553870" fg:w="3347425"/><text x="29.4811%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,366,232 samples, 0.26%)</title><rect x="29.1786%" y="709" width="0.2625%" height="15" fill="rgb(212,95,11)" fg:x="929882777" fg:w="8366232"/><text x="29.4286%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (3,347,714 samples, 0.11%)</title><rect x="29.3361%" y="693" width="0.1050%" height="15" fill="rgb(240,179,47)" fg:x="934901295" fg:w="3347714"/><text x="29.5861%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (3,347,714 samples, 0.11%)</title><rect x="29.3361%" y="677" width="0.1050%" height="15" fill="rgb(240,163,11)" fg:x="934901295" fg:w="3347714"/><text x="29.5861%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,347,714 samples, 0.11%)</title><rect x="29.3361%" y="661" width="0.1050%" height="15" fill="rgb(236,37,12)" fg:x="934901295" fg:w="3347714"/><text x="29.5861%" y="671.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3,347,714 samples, 0.11%)</title><rect x="29.3361%" y="645" width="0.1050%" height="15" fill="rgb(232,164,16)" fg:x="934901295" fg:w="3347714"/><text x="29.5861%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,671,019 samples, 0.05%)</title><rect x="29.4412%" y="709" width="0.0524%" height="15" fill="rgb(244,205,15)" fg:x="938249009" fg:w="1671019"/><text x="29.6912%" y="719.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,678,274 samples, 0.05%)</title><rect x="29.4936%" y="709" width="0.0527%" height="15" fill="rgb(223,117,47)" fg:x="939920028" fg:w="1678274"/><text x="29.7436%" y="719.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,678,274 samples, 0.05%)</title><rect x="29.4936%" y="693" width="0.0527%" height="15" fill="rgb(244,107,35)" fg:x="939920028" fg:w="1678274"/><text x="29.7436%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (1,672,760 samples, 0.05%)</title><rect x="29.5463%" y="709" width="0.0525%" height="15" fill="rgb(205,140,8)" fg:x="941598302" fg:w="1672760"/><text x="29.7963%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1,672,760 samples, 0.05%)</title><rect x="29.5463%" y="693" width="0.0525%" height="15" fill="rgb(228,84,46)" fg:x="941598302" fg:w="1672760"/><text x="29.7963%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,346,497 samples, 0.11%)</title><rect x="29.5988%" y="693" width="0.1050%" height="15" fill="rgb(254,188,9)" fg:x="943271062" fg:w="3346497"/><text x="29.8488%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (3,346,497 samples, 0.11%)</title><rect x="29.5988%" y="677" width="0.1050%" height="15" fill="rgb(206,112,54)" fg:x="943271062" fg:w="3346497"/><text x="29.8488%" y="687.50"></text></g><g><title>calloop::token::TokenInner::same_source_as (13,390,012 samples, 0.42%)</title><rect x="29.7038%" y="693" width="0.4202%" height="15" fill="rgb(216,84,49)" fg:x="946617559" fg:w="13390012"/><text x="29.9538%" y="703.50"></text></g><g><title>calloop::list::SourceList&lt;Data&gt;::get (20,081,120 samples, 0.63%)</title><rect x="29.5988%" y="709" width="0.6301%" height="15" fill="rgb(214,194,35)" fg:x="943271062" fg:w="20081120"/><text x="29.8488%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (3,344,611 samples, 0.10%)</title><rect x="30.1239%" y="693" width="0.1050%" height="15" fill="rgb(249,28,3)" fg:x="960007571" fg:w="3344611"/><text x="30.3739%" y="703.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (3,344,611 samples, 0.10%)</title><rect x="30.1239%" y="677" width="0.1050%" height="15" fill="rgb(222,56,52)" fg:x="960007571" fg:w="3344611"/><text x="30.3739%" y="687.50"></text></g><g><title>calloop_wayland_source::flush_queue (1,671,199 samples, 0.05%)</title><rect x="30.2289%" y="709" width="0.0524%" height="15" fill="rgb(245,217,50)" fg:x="963352182" fg:w="1671199"/><text x="30.4789%" y="719.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1,672,219 samples, 0.05%)</title><rect x="30.2813%" y="661" width="0.0525%" height="15" fill="rgb(213,201,24)" fg:x="965023381" fg:w="1672219"/><text x="30.5313%" y="671.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1,672,219 samples, 0.05%)</title><rect x="30.2813%" y="645" width="0.0525%" height="15" fill="rgb(248,116,28)" fg:x="965023381" fg:w="1672219"/><text x="30.5313%" y="655.50"></text></g><g><title>core::mem::replace (1,672,219 samples, 0.05%)</title><rect x="30.2813%" y="629" width="0.0525%" height="15" fill="rgb(219,72,43)" fg:x="965023381" fg:w="1672219"/><text x="30.5313%" y="639.50"></text></g><g><title>core::cell::BorrowRef::new (5,018,890 samples, 0.16%)</title><rect x="30.2813%" y="677" width="0.1575%" height="15" fill="rgb(209,138,14)" fg:x="965023381" fg:w="5018890"/><text x="30.5313%" y="687.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_add (3,346,671 samples, 0.11%)</title><rect x="30.3338%" y="661" width="0.1050%" height="15" fill="rgb(222,18,33)" fg:x="966695600" fg:w="3346671"/><text x="30.5838%" y="671.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (8,363,807 samples, 0.26%)</title><rect x="30.2813%" y="709" width="0.2624%" height="15" fill="rgb(213,199,7)" fg:x="965023381" fg:w="8363807"/><text x="30.5313%" y="719.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (8,363,807 samples, 0.26%)</title><rect x="30.2813%" y="693" width="0.2624%" height="15" fill="rgb(250,110,10)" fg:x="965023381" fg:w="8363807"/><text x="30.5313%" y="703.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (3,344,917 samples, 0.10%)</title><rect x="30.4388%" y="677" width="0.1050%" height="15" fill="rgb(248,123,6)" fg:x="970042271" fg:w="3344917"/><text x="30.6888%" y="687.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1,672,466 samples, 0.05%)</title><rect x="30.5438%" y="709" width="0.0525%" height="15" fill="rgb(206,91,31)" fg:x="973387188" fg:w="1672466"/><text x="30.7938%" y="719.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1,672,466 samples, 0.05%)</title><rect x="30.5438%" y="693" width="0.0525%" height="15" fill="rgb(211,154,13)" fg:x="973387188" fg:w="1672466"/><text x="30.7938%" y="703.50"></text></g><g><title>core::cell::BorrowRefMut::new (1,672,466 samples, 0.05%)</title><rect x="30.5438%" y="677" width="0.0525%" height="15" fill="rgb(225,148,7)" fg:x="973387188" fg:w="1672466"/><text x="30.7938%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1,672,466 samples, 0.05%)</title><rect x="30.5438%" y="661" width="0.0525%" height="15" fill="rgb(220,160,43)" fg:x="973387188" fg:w="1672466"/><text x="30.7938%" y="671.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1,672,466 samples, 0.05%)</title><rect x="30.5438%" y="645" width="0.0525%" height="15" fill="rgb(213,52,39)" fg:x="973387188" fg:w="1672466"/><text x="30.7938%" y="655.50"></text></g><g><title>core::mem::replace (1,672,466 samples, 0.05%)</title><rect x="30.5438%" y="629" width="0.0525%" height="15" fill="rgb(243,137,7)" fg:x="973387188" fg:w="1672466"/><text x="30.7938%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::chain (3,342,630 samples, 0.10%)</title><rect x="30.5962%" y="709" width="0.1049%" height="15" fill="rgb(230,79,13)" fg:x="975059654" fg:w="3342630"/><text x="30.8462%" y="719.50"></text></g><g><title>core::iter::adapters::chain::Chain&lt;A,B&gt;::new (3,342,630 samples, 0.10%)</title><rect x="30.5962%" y="693" width="0.1049%" height="15" fill="rgb(247,105,23)" fg:x="975059654" fg:w="3342630"/><text x="30.8462%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (11,710,744 samples, 0.37%)</title><rect x="30.7011%" y="709" width="0.3675%" height="15" fill="rgb(223,179,41)" fg:x="978402284" fg:w="11710744"/><text x="30.9511%" y="719.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch_events::_{{closure}} (11,710,744 samples, 0.37%)</title><rect x="30.7011%" y="693" width="0.3675%" height="15" fill="rgb(218,9,34)" fg:x="978402284" fg:w="11710744"/><text x="30.9511%" y="703.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (11,710,744 samples, 0.37%)</title><rect x="30.7011%" y="677" width="0.3675%" height="15" fill="rgb(222,106,8)" fg:x="978402284" fg:w="11710744"/><text x="30.9511%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,360,110 samples, 0.26%)</title><rect x="30.8063%" y="661" width="0.2623%" height="15" fill="rgb(211,220,0)" fg:x="981752918" fg:w="8360110"/><text x="31.0563%" y="671.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (8,360,110 samples, 0.26%)</title><rect x="30.8063%" y="645" width="0.2623%" height="15" fill="rgb(229,52,16)" fg:x="981752918" fg:w="8360110"/><text x="31.0563%" y="655.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1,674,088 samples, 0.05%)</title><rect x="31.0161%" y="629" width="0.0525%" height="15" fill="rgb(212,155,18)" fg:x="988438940" fg:w="1674088"/><text x="31.2661%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1,674,088 samples, 0.05%)</title><rect x="31.0161%" y="613" width="0.0525%" height="15" fill="rgb(242,21,14)" fg:x="988438940" fg:w="1674088"/><text x="31.2661%" y="623.50"></text></g><g><title>core::mem::replace (1,674,088 samples, 0.05%)</title><rect x="31.0161%" y="597" width="0.0525%" height="15" fill="rgb(222,19,48)" fg:x="988438940" fg:w="1674088"/><text x="31.2661%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;calloop::list::SourceList&lt;winit::platform_impl::linux::wayland::state::WinitState&gt;&gt;&gt; (3,350,942 samples, 0.11%)</title><rect x="31.0686%" y="709" width="0.1051%" height="15" fill="rgb(232,45,27)" fg:x="990113028" fg:w="3350942"/><text x="31.3186%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (3,350,942 samples, 0.11%)</title><rect x="31.0686%" y="693" width="0.1051%" height="15" fill="rgb(249,103,42)" fg:x="990113028" fg:w="3350942"/><text x="31.3186%" y="703.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (3,350,942 samples, 0.11%)</title><rect x="31.0686%" y="677" width="0.1051%" height="15" fill="rgb(246,81,33)" fg:x="990113028" fg:w="3350942"/><text x="31.3186%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3,350,942 samples, 0.11%)</title><rect x="31.0686%" y="661" width="0.1051%" height="15" fill="rgb(252,33,42)" fg:x="990113028" fg:w="3350942"/><text x="31.3186%" y="671.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3,350,942 samples, 0.11%)</title><rect x="31.0686%" y="645" width="0.1051%" height="15" fill="rgb(209,212,41)" fg:x="990113028" fg:w="3350942"/><text x="31.3186%" y="655.50"></text></g><g><title>core::mem::replace (3,350,942 samples, 0.11%)</title><rect x="31.0686%" y="629" width="0.1051%" height="15" fill="rgb(207,154,6)" fg:x="990113028" fg:w="3350942"/><text x="31.3186%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;calloop::sys::Poll&gt;&gt; (3,325,035 samples, 0.10%)</title><rect x="31.1737%" y="709" width="0.1043%" height="15" fill="rgb(223,64,47)" fg:x="993463970" fg:w="3325035"/><text x="31.4237%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (3,325,035 samples, 0.10%)</title><rect x="31.1737%" y="693" width="0.1043%" height="15" fill="rgb(211,161,38)" fg:x="993463970" fg:w="3325035"/><text x="31.4237%" y="703.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (3,325,035 samples, 0.10%)</title><rect x="31.1737%" y="677" width="0.1043%" height="15" fill="rgb(219,138,40)" fg:x="993463970" fg:w="3325035"/><text x="31.4237%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3,325,035 samples, 0.10%)</title><rect x="31.1737%" y="661" width="0.1043%" height="15" fill="rgb(241,228,46)" fg:x="993463970" fg:w="3325035"/><text x="31.4237%" y="671.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3,325,035 samples, 0.10%)</title><rect x="31.1737%" y="645" width="0.1043%" height="15" fill="rgb(223,209,38)" fg:x="993463970" fg:w="3325035"/><text x="31.4237%" y="655.50"></text></g><g><title>core::mem::replace (3,325,035 samples, 0.10%)</title><rect x="31.1737%" y="629" width="0.1043%" height="15" fill="rgb(236,164,45)" fg:x="993463970" fg:w="3325035"/><text x="31.4237%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;calloop::sources::AdditionalLifecycleEventsSet&gt;&gt; (3,350,957 samples, 0.11%)</title><rect x="31.2781%" y="709" width="0.1051%" height="15" fill="rgb(231,15,5)" fg:x="996789005" fg:w="3350957"/><text x="31.5281%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (3,350,957 samples, 0.11%)</title><rect x="31.2781%" y="693" width="0.1051%" height="15" fill="rgb(252,35,15)" fg:x="996789005" fg:w="3350957"/><text x="31.5281%" y="703.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (3,350,957 samples, 0.11%)</title><rect x="31.2781%" y="677" width="0.1051%" height="15" fill="rgb(248,181,18)" fg:x="996789005" fg:w="3350957"/><text x="31.5281%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1,677,811 samples, 0.05%)</title><rect x="31.3306%" y="661" width="0.0526%" height="15" fill="rgb(233,39,42)" fg:x="998462151" fg:w="1677811"/><text x="31.5806%" y="671.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1,677,811 samples, 0.05%)</title><rect x="31.3306%" y="645" width="0.0526%" height="15" fill="rgb(238,110,33)" fg:x="998462151" fg:w="1677811"/><text x="31.5806%" y="655.50"></text></g><g><title>core::mem::replace (1,677,811 samples, 0.05%)</title><rect x="31.3306%" y="629" width="0.0526%" height="15" fill="rgb(233,195,10)" fg:x="998462151" fg:w="1677811"/><text x="31.5806%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::chain::Chain&lt;alloc::vec::drain::Drain&lt;calloop::sys::PollEvent&gt;,alloc::vec::into_iter::IntoIter&lt;calloop::sys::PollEvent&gt;&gt;&gt; (21,740,957 samples, 0.68%)</title><rect x="31.3832%" y="709" width="0.6822%" height="15" fill="rgb(254,105,3)" fg:x="1000139962" fg:w="21740957"/><text x="31.6332%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;calloop::sys::PollEvent&gt;&gt;&gt; (21,740,957 samples, 0.68%)</title><rect x="31.3832%" y="693" width="0.6822%" height="15" fill="rgb(221,225,9)" fg:x="1000139962" fg:w="21740957"/><text x="31.6332%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;calloop::sys::PollEvent&gt;&gt; (21,740,957 samples, 0.68%)</title><rect x="31.3832%" y="677" width="0.6822%" height="15" fill="rgb(224,227,45)" fg:x="1000139962" fg:w="21740957"/><text x="31.6332%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21,740,957 samples, 0.68%)</title><rect x="31.3832%" y="661" width="0.6822%" height="15" fill="rgb(229,198,43)" fg:x="1000139962" fg:w="21740957"/><text x="31.6332%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;calloop::sys::PollEvent,alloc::alloc::Global&gt;&gt; (21,740,957 samples, 0.68%)</title><rect x="31.3832%" y="645" width="0.6822%" height="15" fill="rgb(206,209,35)" fg:x="1000139962" fg:w="21740957"/><text x="31.6332%" y="655.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21,740,957 samples, 0.68%)</title><rect x="31.3832%" y="629" width="0.6822%" height="15" fill="rgb(245,195,53)" fg:x="1000139962" fg:w="21740957"/><text x="31.6332%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;calloop::sys::PollEvent&gt;&gt; (21,740,957 samples, 0.68%)</title><rect x="31.3832%" y="613" width="0.6822%" height="15" fill="rgb(240,92,26)" fg:x="1000139962" fg:w="21740957"/><text x="31.6332%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21,740,957 samples, 0.68%)</title><rect x="31.3832%" y="597" width="0.6822%" height="15" fill="rgb(207,40,23)" fg:x="1000139962" fg:w="21740957"/><text x="31.6332%" y="607.50"></text></g><g><title>cfree (21,740,957 samples, 0.68%)</title><rect x="31.3832%" y="581" width="0.6822%" height="15" fill="rgb(223,111,35)" fg:x="1000139962" fg:w="21740957"/><text x="31.6332%" y="591.50"></text></g><g><title>log::max_level (1,672,931 samples, 0.05%)</title><rect x="32.0654%" y="709" width="0.0525%" height="15" fill="rgb(229,147,28)" fg:x="1021880919" fg:w="1672931"/><text x="32.3154%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,672,931 samples, 0.05%)</title><rect x="32.0654%" y="693" width="0.0525%" height="15" fill="rgb(211,29,28)" fg:x="1021880919" fg:w="1672931"/><text x="32.3154%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (1,672,931 samples, 0.05%)</title><rect x="32.0654%" y="677" width="0.0525%" height="15" fill="rgb(228,72,33)" fg:x="1021880919" fg:w="1672931"/><text x="32.3154%" y="687.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (46,477,912 samples, 1.46%)</title><rect x="32.1179%" y="709" width="1.4584%" height="15" fill="rgb(205,214,31)" fg:x="1023553850" fg:w="46477912"/><text x="32.3679%" y="719.50"></text></g><g><title>clock_gettime (44,806,383 samples, 1.41%)</title><rect x="32.1704%" y="693" width="1.4060%" height="15" fill="rgb(224,111,15)" fg:x="1025225379" fg:w="44806383"/><text x="32.4204%" y="703.50"></text></g><g><title>__vdso_clock_gettime (43,134,449 samples, 1.35%)</title><rect x="32.2228%" y="677" width="1.3535%" height="15" fill="rgb(253,21,26)" fg:x="1026897313" fg:w="43134449"/><text x="32.4728%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16,637,195 samples, 0.52%)</title><rect x="33.5764%" y="677" width="0.5221%" height="15" fill="rgb(245,139,43)" fg:x="1070031762" fg:w="16637195"/><text x="33.8264%" y="687.50"></text></g><g><title>[libc.so.6] (1,672,361 samples, 0.05%)</title><rect x="34.0984%" y="661" width="0.0525%" height="15" fill="rgb(252,170,7)" fg:x="1086668957" fg:w="1672361"/><text x="34.3484%" y="671.50"></text></g><g><title>std::sync::poison::Flag::done (3,347,507 samples, 0.11%)</title><rect x="34.1509%" y="629" width="0.1050%" height="15" fill="rgb(231,118,14)" fg:x="1088341318" fg:w="3347507"/><text x="34.4009%" y="639.50"></text></g><g><title>std::thread::panicking (3,347,507 samples, 0.11%)</title><rect x="34.1509%" y="613" width="0.1050%" height="15" fill="rgb(238,83,0)" fg:x="1088341318" fg:w="3347507"/><text x="34.4009%" y="623.50"></text></g><g><title>std::panicking::panicking (3,347,507 samples, 0.11%)</title><rect x="34.1509%" y="597" width="0.1050%" height="15" fill="rgb(221,39,39)" fg:x="1088341318" fg:w="3347507"/><text x="34.4009%" y="607.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (3,347,507 samples, 0.11%)</title><rect x="34.1509%" y="581" width="0.1050%" height="15" fill="rgb(222,119,46)" fg:x="1088341318" fg:w="3347507"/><text x="34.4009%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3,347,507 samples, 0.11%)</title><rect x="34.1509%" y="565" width="0.1050%" height="15" fill="rgb(222,165,49)" fg:x="1088341318" fg:w="3347507"/><text x="34.4009%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (3,347,507 samples, 0.11%)</title><rect x="34.1509%" y="549" width="0.1050%" height="15" fill="rgb(219,113,52)" fg:x="1088341318" fg:w="3347507"/><text x="34.4009%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;wayland_backend::sys::client_impl::ConnectionState&gt;&gt; (20,073,094 samples, 0.63%)</title><rect x="34.1509%" y="661" width="0.6299%" height="15" fill="rgb(214,7,15)" fg:x="1088341318" fg:w="20073094"/><text x="34.4009%" y="671.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20,073,094 samples, 0.63%)</title><rect x="34.1509%" y="645" width="0.6299%" height="15" fill="rgb(235,32,4)" fg:x="1088341318" fg:w="20073094"/><text x="34.4009%" y="655.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (16,725,587 samples, 0.52%)</title><rect x="34.2559%" y="629" width="0.5248%" height="15" fill="rgb(238,90,54)" fg:x="1091688825" fg:w="16725587"/><text x="34.5059%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (15,049,724 samples, 0.47%)</title><rect x="34.3085%" y="613" width="0.4722%" height="15" fill="rgb(213,208,19)" fg:x="1093364688" fg:w="15049724"/><text x="34.5585%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_swap (15,049,724 samples, 0.47%)</title><rect x="34.3085%" y="597" width="0.4722%" height="15" fill="rgb(233,156,4)" fg:x="1093364688" fg:w="15049724"/><text x="34.5585%" y="607.50"></text></g><g><title>std::sync::poison::mutex::MutexGuard&lt;T&gt;::new (1,686,195 samples, 0.05%)</title><rect x="34.7808%" y="629" width="0.0529%" height="15" fill="rgb(207,194,5)" fg:x="1108414412" fg:w="1686195"/><text x="35.0308%" y="639.50"></text></g><g><title>std::sync::poison::Flag::guard (1,686,195 samples, 0.05%)</title><rect x="34.7808%" y="613" width="0.0529%" height="15" fill="rgb(206,111,30)" fg:x="1108414412" fg:w="1686195"/><text x="35.0308%" y="623.50"></text></g><g><title>std::thread::panicking (1,686,195 samples, 0.05%)</title><rect x="34.7808%" y="597" width="0.0529%" height="15" fill="rgb(243,70,54)" fg:x="1108414412" fg:w="1686195"/><text x="35.0308%" y="607.50"></text></g><g><title>std::panicking::panicking (1,686,195 samples, 0.05%)</title><rect x="34.7808%" y="581" width="0.0529%" height="15" fill="rgb(242,28,8)" fg:x="1108414412" fg:w="1686195"/><text x="35.0308%" y="591.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1,686,195 samples, 0.05%)</title><rect x="34.7808%" y="565" width="0.0529%" height="15" fill="rgb(219,106,18)" fg:x="1108414412" fg:w="1686195"/><text x="35.0308%" y="575.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerBackend::lock_state (31,804,996 samples, 1.00%)</title><rect x="34.7808%" y="661" width="0.9980%" height="15" fill="rgb(244,222,10)" fg:x="1108414412" fg:w="31804996"/><text x="35.0308%" y="671.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (31,804,996 samples, 1.00%)</title><rect x="34.7808%" y="645" width="0.9980%" height="15" fill="rgb(236,179,52)" fg:x="1108414412" fg:w="31804996"/><text x="35.0308%" y="655.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (30,118,801 samples, 0.95%)</title><rect x="34.8337%" y="629" width="0.9451%" height="15" fill="rgb(213,23,39)" fg:x="1110100607" fg:w="30118801"/><text x="35.0837%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (26,773,570 samples, 0.84%)</title><rect x="34.9386%" y="613" width="0.8401%" height="15" fill="rgb(238,48,10)" fg:x="1113445838" fg:w="26773570"/><text x="35.1886%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (26,773,570 samples, 0.84%)</title><rect x="34.9386%" y="597" width="0.8401%" height="15" fill="rgb(251,196,23)" fg:x="1113445838" fg:w="26773570"/><text x="35.1886%" y="607.50"></text></g><g><title>[libc.so.6] (13,672,268 samples, 0.43%)</title><rect x="36.0267%" y="645" width="0.4290%" height="15" fill="rgb(250,152,24)" fg:x="1148120515" fg:w="13672268"/><text x="36.2767%" y="655.50"></text></g><g><title>pthread_mutex_lock (23,146,744 samples, 0.73%)</title><rect x="36.4557%" y="645" width="0.7263%" height="15" fill="rgb(209,150,17)" fg:x="1161792783" fg:w="23146744"/><text x="36.7057%" y="655.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch_events (293,551,065 samples, 9.21%)</title><rect x="28.0232%" y="725" width="9.2113%" height="15" fill="rgb(234,202,34)" fg:x="893058982" fg:w="293551065"/><text x="28.2732%" y="735.50">calloop::loop..</text></g><g><title>wayland_client::conn::Connection::prepare_read (116,578,285 samples, 3.66%)</title><rect x="33.5764%" y="709" width="3.6581%" height="15" fill="rgb(253,148,53)" fg:x="1070031762" fg:w="116578285"/><text x="33.8264%" y="719.50">wayl..</text></g><g><title>wayland_backend::sys::client::Backend::prepare_read (116,578,285 samples, 3.66%)</title><rect x="33.5764%" y="693" width="3.6581%" height="15" fill="rgb(218,129,16)" fg:x="1070031762" fg:w="116578285"/><text x="33.8264%" y="703.50">wayl..</text></g><g><title>wayland_backend::sys::client_impl::InnerReadEventsGuard::try_new (99,941,090 samples, 3.14%)</title><rect x="34.0984%" y="677" width="3.1360%" height="15" fill="rgb(216,85,19)" fg:x="1086668957" fg:w="99941090"/><text x="34.3484%" y="687.50">way..</text></g><g><title>wl_display_prepare_read_queue (46,390,639 samples, 1.46%)</title><rect x="35.7788%" y="661" width="1.4557%" height="15" fill="rgb(235,228,7)" fg:x="1140219408" fg:w="46390639"/><text x="36.0288%" y="671.50"></text></g><g><title>pthread_mutex_unlock (1,670,520 samples, 0.05%)</title><rect x="37.1820%" y="645" width="0.0524%" height="15" fill="rgb(245,175,0)" fg:x="1184939527" fg:w="1670520"/><text x="37.4320%" y="655.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch (301,909,489 samples, 9.47%)</title><rect x="27.9182%" y="741" width="9.4736%" height="15" fill="rgb(208,168,36)" fg:x="889715528" fg:w="301909489"/><text x="28.1682%" y="751.50">calloop::loop_..</text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch_idles (5,014,970 samples, 0.16%)</title><rect x="37.2344%" y="725" width="0.1574%" height="15" fill="rgb(246,171,24)" fg:x="1186610047" fg:w="5014970"/><text x="37.4844%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,345,814 samples, 0.10%)</title><rect x="37.2868%" y="709" width="0.1050%" height="15" fill="rgb(215,142,24)" fg:x="1188279203" fg:w="3345814"/><text x="37.5368%" y="719.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::loop_dispatch (308,603,136 samples, 9.68%)</title><rect x="27.7607%" y="757" width="9.6836%" height="15" fill="rgb(250,187,7)" fg:x="884695704" fg:w="308603136"/><text x="28.0107%" y="767.50">winit::platfor..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1,673,823 samples, 0.05%)</title><rect x="37.3918%" y="741" width="0.0525%" height="15" fill="rgb(228,66,33)" fg:x="1191625017" fg:w="1673823"/><text x="37.6418%" y="751.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,343,580 samples, 0.10%)</title><rect x="37.8081%" y="741" width="0.1049%" height="15" fill="rgb(234,215,21)" fg:x="1204890882" fg:w="3343580"/><text x="38.0581%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,343,580 samples, 0.10%)</title><rect x="37.8081%" y="725" width="0.1049%" height="15" fill="rgb(222,191,20)" fg:x="1204890882" fg:w="3343580"/><text x="38.0581%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,406,198 samples, 0.04%)</title><rect x="37.9130%" y="741" width="0.0441%" height="15" fill="rgb(245,79,54)" fg:x="1208234462" fg:w="1406198"/><text x="38.1630%" y="751.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (3,342,963 samples, 0.10%)</title><rect x="37.9571%" y="741" width="0.1049%" height="15" fill="rgb(240,10,37)" fg:x="1209640660" fg:w="3342963"/><text x="38.2071%" y="751.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (3,342,963 samples, 0.10%)</title><rect x="37.9571%" y="725" width="0.1049%" height="15" fill="rgb(214,192,32)" fg:x="1209640660" fg:w="3342963"/><text x="38.2071%" y="735.50"></text></g><g><title>core::cell::BorrowRefMut::new (3,342,963 samples, 0.10%)</title><rect x="37.9571%" y="709" width="0.1049%" height="15" fill="rgb(209,36,54)" fg:x="1209640660" fg:w="3342963"/><text x="38.2071%" y="719.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1,672,136 samples, 0.05%)</title><rect x="38.0096%" y="693" width="0.0525%" height="15" fill="rgb(220,10,11)" fg:x="1211311487" fg:w="1672136"/><text x="38.2596%" y="703.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1,672,136 samples, 0.05%)</title><rect x="38.0096%" y="677" width="0.0525%" height="15" fill="rgb(221,106,17)" fg:x="1211311487" fg:w="1672136"/><text x="38.2596%" y="687.50"></text></g><g><title>core::mem::replace (1,672,136 samples, 0.05%)</title><rect x="38.0096%" y="661" width="0.0525%" height="15" fill="rgb(251,142,44)" fg:x="1211311487" fg:w="1672136"/><text x="38.2596%" y="671.50"></text></g><g><title>core::ptr::swap_nonoverlapping::precondition_check (3,345,539 samples, 0.10%)</title><rect x="38.0620%" y="693" width="0.1050%" height="15" fill="rgb(238,13,15)" fg:x="1212983623" fg:w="3345539"/><text x="38.3120%" y="703.50"></text></g><g><title>core::ub_checks::maybe_is_nonoverlapping (3,345,539 samples, 0.10%)</title><rect x="38.0620%" y="677" width="0.1050%" height="15" fill="rgb(208,107,27)" fg:x="1212983623" fg:w="3345539"/><text x="38.3120%" y="687.50"></text></g><g><title>core::ub_checks::maybe_is_nonoverlapping::runtime (3,345,539 samples, 0.10%)</title><rect x="38.0620%" y="661" width="0.1050%" height="15" fill="rgb(205,136,37)" fg:x="1212983623" fg:w="3345539"/><text x="38.3120%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::abs_diff (3,345,539 samples, 0.10%)</title><rect x="38.0620%" y="645" width="0.1050%" height="15" fill="rgb(250,205,27)" fg:x="1212983623" fg:w="3345539"/><text x="38.3120%" y="655.50"></text></g><g><title>core::mem::swap (11,704,847 samples, 0.37%)</title><rect x="38.0620%" y="741" width="0.3673%" height="15" fill="rgb(210,80,43)" fg:x="1212983623" fg:w="11704847"/><text x="38.3120%" y="751.50"></text></g><g><title>core::intrinsics::typed_swap_nonoverlapping (11,704,847 samples, 0.37%)</title><rect x="38.0620%" y="725" width="0.3673%" height="15" fill="rgb(247,160,36)" fg:x="1212983623" fg:w="11704847"/><text x="38.3120%" y="735.50"></text></g><g><title>core::ptr::swap_nonoverlapping (11,704,847 samples, 0.37%)</title><rect x="38.0620%" y="709" width="0.3673%" height="15" fill="rgb(234,13,49)" fg:x="1212983623" fg:w="11704847"/><text x="38.3120%" y="719.50"></text></g><g><title>core::ptr::swap_nonoverlapping::runtime (8,359,308 samples, 0.26%)</title><rect x="38.1670%" y="693" width="0.2623%" height="15" fill="rgb(234,122,0)" fg:x="1216329162" fg:w="8359308"/><text x="38.4170%" y="703.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (8,359,308 samples, 0.26%)</title><rect x="38.1670%" y="677" width="0.2623%" height="15" fill="rgb(207,146,38)" fg:x="1216329162" fg:w="8359308"/><text x="38.4170%" y="687.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes::swap_nonoverlapping_chunks (8,359,308 samples, 0.26%)</title><rect x="38.1670%" y="661" width="0.2623%" height="15" fill="rgb(207,177,25)" fg:x="1216329162" fg:w="8359308"/><text x="38.4170%" y="671.50"></text></g><g><title>core::ptr::swap_chunk (8,359,308 samples, 0.26%)</title><rect x="38.1670%" y="645" width="0.2623%" height="15" fill="rgb(211,178,42)" fg:x="1216329162" fg:w="8359308"/><text x="38.4170%" y="655.50"></text></g><g><title>core::mem::take (3,350,169 samples, 0.11%)</title><rect x="38.4293%" y="741" width="0.1051%" height="15" fill="rgb(230,69,54)" fg:x="1224688470" fg:w="3350169"/><text x="38.6793%" y="751.50"></text></g><g><title>core::mem::replace (3,350,169 samples, 0.11%)</title><rect x="38.4293%" y="725" width="0.1051%" height="15" fill="rgb(214,135,41)" fg:x="1224688470" fg:w="3350169"/><text x="38.6793%" y="735.50"></text></g><g><title>[libc.so.6] (5,014,276 samples, 0.16%)</title><rect x="38.5344%" y="613" width="0.1573%" height="15" fill="rgb(237,67,25)" fg:x="1228038639" fg:w="5014276"/><text x="38.7844%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8,359,859 samples, 0.26%)</title><rect x="38.5344%" y="741" width="0.2623%" height="15" fill="rgb(222,189,50)" fg:x="1228038639" fg:w="8359859"/><text x="38.7844%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8,359,859 samples, 0.26%)</title><rect x="38.5344%" y="725" width="0.2623%" height="15" fill="rgb(245,148,34)" fg:x="1228038639" fg:w="8359859"/><text x="38.7844%" y="735.50"></text></g><g><title>winit::platform::run_on_demand::EventLoopExtRunOnDemand::run_app_on_demand::_{{closure}} (8,359,859 samples, 0.26%)</title><rect x="38.5344%" y="709" width="0.2623%" height="15" fill="rgb(222,29,6)" fg:x="1228038639" fg:w="8359859"/><text x="38.7844%" y="719.50"></text></g><g><title>winit::event_loop::dispatch_event_for_app (8,359,859 samples, 0.26%)</title><rect x="38.5344%" y="693" width="0.2623%" height="15" fill="rgb(221,189,43)" fg:x="1228038639" fg:w="8359859"/><text x="38.7844%" y="703.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch (8,359,859 samples, 0.26%)</title><rect x="38.5344%" y="677" width="0.2623%" height="15" fill="rgb(207,36,27)" fg:x="1228038639" fg:w="8359859"/><text x="38.7844%" y="687.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch_idles (8,359,859 samples, 0.26%)</title><rect x="38.5344%" y="661" width="0.2623%" height="15" fill="rgb(217,90,24)" fg:x="1228038639" fg:w="8359859"/><text x="38.7844%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;dyn calloop::sources::IdleDispatcher&lt;winit::platform_impl::linux::wayland::state::WinitState&gt;&gt;&gt;&gt;&gt; (8,359,859 samples, 0.26%)</title><rect x="38.5344%" y="645" width="0.2623%" height="15" fill="rgb(224,66,35)" fg:x="1228038639" fg:w="8359859"/><text x="38.7844%" y="655.50"></text></g><g><title>&lt;silk_engine::Engine&lt;T&gt; as winit::application::ApplicationHandler&gt;::window_event (8,359,859 samples, 0.26%)</title><rect x="38.5344%" y="629" width="0.2623%" height="15" fill="rgb(221,13,50)" fg:x="1228038639" fg:w="8359859"/><text x="38.7844%" y="639.50"></text></g><g><title>silk_engine::AppContext&lt;A&gt;::event (3,345,583 samples, 0.10%)</title><rect x="38.6918%" y="613" width="0.1050%" height="15" fill="rgb(236,68,49)" fg:x="1233052915" fg:w="3345583"/><text x="38.9418%" y="623.50"></text></g><g><title>silk_engine::AppContext&lt;A&gt;::update (3,345,583 samples, 0.10%)</title><rect x="38.6918%" y="597" width="0.1050%" height="15" fill="rgb(229,146,28)" fg:x="1233052915" fg:w="3345583"/><text x="38.9418%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;winit::platform_impl::linux::WindowId&gt;&gt; (1,675,926 samples, 0.05%)</title><rect x="38.7968%" y="741" width="0.0526%" height="15" fill="rgb(225,31,38)" fg:x="1236398498" fg:w="1675926"/><text x="39.0468%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;winit::platform_impl::linux::WindowId&gt;&gt; (1,675,926 samples, 0.05%)</title><rect x="38.7968%" y="725" width="0.0526%" height="15" fill="rgb(250,208,3)" fg:x="1236398498" fg:w="1675926"/><text x="39.0468%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,675,926 samples, 0.05%)</title><rect x="38.7968%" y="709" width="0.0526%" height="15" fill="rgb(246,54,23)" fg:x="1236398498" fg:w="1675926"/><text x="39.0468%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;winit::platform_impl::linux::wayland::state::WindowCompositorUpdate&gt;&gt; (3,344,201 samples, 0.10%)</title><rect x="38.8493%" y="741" width="0.1049%" height="15" fill="rgb(243,76,11)" fg:x="1238074424" fg:w="3344201"/><text x="39.0993%" y="751.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,344,201 samples, 0.10%)</title><rect x="38.8493%" y="725" width="0.1049%" height="15" fill="rgb(245,21,50)" fg:x="1238074424" fg:w="3344201"/><text x="39.0993%" y="735.50"></text></g><g><title>core::mem::take (1,671,010 samples, 0.05%)</title><rect x="38.9018%" y="709" width="0.0524%" height="15" fill="rgb(228,9,43)" fg:x="1239747615" fg:w="1671010"/><text x="39.1518%" y="719.50"></text></g><g><title>core::mem::replace (1,671,010 samples, 0.05%)</title><rect x="38.9018%" y="693" width="0.0524%" height="15" fill="rgb(208,100,47)" fg:x="1239747615" fg:w="1671010"/><text x="39.1518%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;alloc::vec::Vec&lt;()&gt;&gt;&gt; (1,672,889 samples, 0.05%)</title><rect x="38.9543%" y="741" width="0.0525%" height="15" fill="rgb(232,26,8)" fg:x="1241418625" fg:w="1672889"/><text x="39.2043%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (1,672,889 samples, 0.05%)</title><rect x="38.9543%" y="725" width="0.0525%" height="15" fill="rgb(216,166,38)" fg:x="1241418625" fg:w="1672889"/><text x="39.2043%" y="735.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1,672,889 samples, 0.05%)</title><rect x="38.9543%" y="709" width="0.0525%" height="15" fill="rgb(251,202,51)" fg:x="1241418625" fg:w="1672889"/><text x="39.2043%" y="719.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1,672,889 samples, 0.05%)</title><rect x="38.9543%" y="693" width="0.0525%" height="15" fill="rgb(254,216,34)" fg:x="1241418625" fg:w="1672889"/><text x="39.2043%" y="703.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1,672,889 samples, 0.05%)</title><rect x="38.9543%" y="677" width="0.0525%" height="15" fill="rgb(251,32,27)" fg:x="1241418625" fg:w="1672889"/><text x="39.2043%" y="687.50"></text></g><g><title>core::mem::replace (1,672,889 samples, 0.05%)</title><rect x="38.9543%" y="661" width="0.0525%" height="15" fill="rgb(208,127,28)" fg:x="1241418625" fg:w="1672889"/><text x="39.2043%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,672,502 samples, 0.05%)</title><rect x="39.0068%" y="709" width="0.0525%" height="15" fill="rgb(224,137,22)" fg:x="1243091514" fg:w="1672502"/><text x="39.2568%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[winit::event::Event&lt;()&gt;]&gt; (1,672,502 samples, 0.05%)</title><rect x="39.0068%" y="693" width="0.0525%" height="15" fill="rgb(254,70,32)" fg:x="1243091514" fg:w="1672502"/><text x="39.2568%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;winit::platform_impl::linux::wayland::event_loop::sink::EventSink&gt; (3,344,764 samples, 0.10%)</title><rect x="39.0068%" y="741" width="0.1050%" height="15" fill="rgb(229,75,37)" fg:x="1243091514" fg:w="3344764"/><text x="39.2568%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;winit::event::Event&lt;()&gt;&gt;&gt; (3,344,764 samples, 0.10%)</title><rect x="39.0068%" y="725" width="0.1050%" height="15" fill="rgb(252,64,23)" fg:x="1243091514" fg:w="3344764"/><text x="39.2568%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;winit::event::Event&lt;()&gt;&gt;&gt; (1,672,262 samples, 0.05%)</title><rect x="39.0593%" y="709" width="0.0525%" height="15" fill="rgb(232,162,48)" fg:x="1244764016" fg:w="1672262"/><text x="39.3093%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,672,262 samples, 0.05%)</title><rect x="39.0593%" y="693" width="0.0525%" height="15" fill="rgb(246,160,12)" fg:x="1244764016" fg:w="1672262"/><text x="39.3093%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (5,023,841 samples, 0.16%)</title><rect x="39.4791%" y="709" width="0.1576%" height="15" fill="rgb(247,166,0)" fg:x="1258144938" fg:w="5023841"/><text x="39.7291%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (5,023,841 samples, 0.16%)</title><rect x="39.4791%" y="693" width="0.1576%" height="15" fill="rgb(249,219,21)" fg:x="1258144938" fg:w="5023841"/><text x="39.7291%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5,023,841 samples, 0.16%)</title><rect x="39.4791%" y="677" width="0.1576%" height="15" fill="rgb(205,209,3)" fg:x="1258144938" fg:w="5023841"/><text x="39.7291%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5,023,841 samples, 0.16%)</title><rect x="39.4791%" y="661" width="0.1576%" height="15" fill="rgb(243,44,1)" fg:x="1258144938" fg:w="5023841"/><text x="39.7291%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,350,538 samples, 0.11%)</title><rect x="39.5316%" y="645" width="0.1051%" height="15" fill="rgb(206,159,16)" fg:x="1259818241" fg:w="3350538"/><text x="39.7816%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,350,538 samples, 0.11%)</title><rect x="39.5316%" y="629" width="0.1051%" height="15" fill="rgb(244,77,30)" fg:x="1259818241" fg:w="3350538"/><text x="39.7816%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,350,538 samples, 0.11%)</title><rect x="39.5316%" y="613" width="0.1051%" height="15" fill="rgb(218,69,12)" fg:x="1259818241" fg:w="3350538"/><text x="39.7816%" y="623.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,350,538 samples, 0.11%)</title><rect x="39.5316%" y="597" width="0.1051%" height="15" fill="rgb(212,87,7)" fg:x="1259818241" fg:w="3350538"/><text x="39.7816%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,350,538 samples, 0.11%)</title><rect x="39.5316%" y="581" width="0.1051%" height="15" fill="rgb(245,114,25)" fg:x="1259818241" fg:w="3350538"/><text x="39.7816%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1,673,473 samples, 0.05%)</title><rect x="39.5843%" y="565" width="0.0525%" height="15" fill="rgb(210,61,42)" fg:x="1261495306" fg:w="1673473"/><text x="39.8343%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1,673,473 samples, 0.05%)</title><rect x="39.5843%" y="549" width="0.0525%" height="15" fill="rgb(211,52,33)" fg:x="1261495306" fg:w="1673473"/><text x="39.8343%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1,673,473 samples, 0.05%)</title><rect x="39.5843%" y="533" width="0.0525%" height="15" fill="rgb(234,58,33)" fg:x="1261495306" fg:w="1673473"/><text x="39.8343%" y="543.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,685,968 samples, 0.05%)</title><rect x="39.6368%" y="709" width="0.0529%" height="15" fill="rgb(220,115,36)" fg:x="1263168779" fg:w="1685968"/><text x="39.8868%" y="719.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (1,685,968 samples, 0.05%)</title><rect x="39.6368%" y="693" width="0.0529%" height="15" fill="rgb(243,153,54)" fg:x="1263168779" fg:w="1685968"/><text x="39.8868%" y="703.50"></text></g><g><title>ahash::hash_map::AHashMap&lt;K,V,S&gt;::get (1,673,629 samples, 0.05%)</title><rect x="39.6897%" y="709" width="0.0525%" height="15" fill="rgb(251,47,18)" fg:x="1264854747" fg:w="1673629"/><text x="39.9397%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,673,629 samples, 0.05%)</title><rect x="39.6897%" y="693" width="0.0525%" height="15" fill="rgb(242,102,42)" fg:x="1264854747" fg:w="1673629"/><text x="39.9397%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,673,629 samples, 0.05%)</title><rect x="39.6897%" y="677" width="0.0525%" height="15" fill="rgb(234,31,38)" fg:x="1264854747" fg:w="1673629"/><text x="39.9397%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,673,092 samples, 0.05%)</title><rect x="39.7422%" y="677" width="0.0525%" height="15" fill="rgb(221,117,51)" fg:x="1266528376" fg:w="1673092"/><text x="39.9922%" y="687.50"></text></g><g><title>[libc.so.6] (3,343,390 samples, 0.10%)</title><rect x="39.7947%" y="661" width="0.1049%" height="15" fill="rgb(212,20,18)" fg:x="1268201468" fg:w="3343390"/><text x="40.0447%" y="671.50"></text></g><g><title>core::ptr::copy_nonoverlapping (5,015,699 samples, 0.16%)</title><rect x="39.7947%" y="677" width="0.1574%" height="15" fill="rgb(245,133,36)" fg:x="1268201468" fg:w="5015699"/><text x="40.0447%" y="687.50"></text></g><g><title>core::ptr::copy_nonoverlapping::precondition_check (1,672,309 samples, 0.05%)</title><rect x="39.8996%" y="661" width="0.0525%" height="15" fill="rgb(212,6,19)" fg:x="1271544858" fg:w="1672309"/><text x="40.1496%" y="671.50"></text></g><g><title>core::ub_checks::maybe_is_nonoverlapping (1,672,309 samples, 0.05%)</title><rect x="39.8996%" y="645" width="0.0525%" height="15" fill="rgb(218,1,36)" fg:x="1271544858" fg:w="1672309"/><text x="40.1496%" y="655.50"></text></g><g><title>core::ub_checks::maybe_is_nonoverlapping::runtime (1,672,309 samples, 0.05%)</title><rect x="39.8996%" y="629" width="0.0525%" height="15" fill="rgb(246,84,54)" fg:x="1271544858" fg:w="1672309"/><text x="40.1496%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::abs_diff (1,672,309 samples, 0.05%)</title><rect x="39.8996%" y="613" width="0.0525%" height="15" fill="rgb(242,110,6)" fg:x="1271544858" fg:w="1672309"/><text x="40.1496%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8,361,159 samples, 0.26%)</title><rect x="39.7422%" y="693" width="0.2624%" height="15" fill="rgb(214,47,5)" fg:x="1266528376" fg:w="8361159"/><text x="39.9922%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1,672,368 samples, 0.05%)</title><rect x="39.9521%" y="677" width="0.0525%" height="15" fill="rgb(218,159,25)" fg:x="1273217167" fg:w="1672368"/><text x="40.2021%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (10,036,298 samples, 0.31%)</title><rect x="39.7422%" y="709" width="0.3149%" height="15" fill="rgb(215,211,28)" fg:x="1266528376" fg:w="10036298"/><text x="39.9922%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,675,139 samples, 0.05%)</title><rect x="40.0046%" y="693" width="0.0526%" height="15" fill="rgb(238,59,32)" fg:x="1274889535" fg:w="1675139"/><text x="40.2546%" y="703.50"></text></g><g><title>std::sync::poison::Flag::done (1,673,484 samples, 0.05%)</title><rect x="40.0571%" y="677" width="0.0525%" height="15" fill="rgb(226,82,3)" fg:x="1276564674" fg:w="1673484"/><text x="40.3071%" y="687.50"></text></g><g><title>std::thread::panicking (1,673,484 samples, 0.05%)</title><rect x="40.0571%" y="661" width="0.0525%" height="15" fill="rgb(240,164,32)" fg:x="1276564674" fg:w="1673484"/><text x="40.3071%" y="671.50"></text></g><g><title>std::panicking::panicking (1,673,484 samples, 0.05%)</title><rect x="40.0571%" y="645" width="0.0525%" height="15" fill="rgb(232,46,7)" fg:x="1276564674" fg:w="1673484"/><text x="40.3071%" y="655.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1,673,484 samples, 0.05%)</title><rect x="40.0571%" y="629" width="0.0525%" height="15" fill="rgb(229,129,53)" fg:x="1276564674" fg:w="1673484"/><text x="40.3071%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;winit::platform_impl::linux::wayland::event_loop::sink::EventSink&gt;&gt; (15,079,821 samples, 0.47%)</title><rect x="40.0571%" y="709" width="0.4732%" height="15" fill="rgb(234,188,29)" fg:x="1276564674" fg:w="15079821"/><text x="40.3071%" y="719.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15,079,821 samples, 0.47%)</title><rect x="40.0571%" y="693" width="0.4732%" height="15" fill="rgb(246,141,4)" fg:x="1276564674" fg:w="15079821"/><text x="40.3071%" y="703.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (13,406,337 samples, 0.42%)</title><rect x="40.1096%" y="677" width="0.4207%" height="15" fill="rgb(229,23,39)" fg:x="1278238158" fg:w="13406337"/><text x="40.3596%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (13,406,337 samples, 0.42%)</title><rect x="40.1096%" y="661" width="0.4207%" height="15" fill="rgb(206,12,3)" fg:x="1278238158" fg:w="13406337"/><text x="40.3596%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_swap (13,406,337 samples, 0.42%)</title><rect x="40.1096%" y="645" width="0.4207%" height="15" fill="rgb(252,226,20)" fg:x="1278238158" fg:w="13406337"/><text x="40.3596%" y="655.50"></text></g><g><title>std::sync::poison::Flag::done (3,346,721 samples, 0.11%)</title><rect x="40.5303%" y="677" width="0.1050%" height="15" fill="rgb(216,123,35)" fg:x="1291644495" fg:w="3346721"/><text x="40.7803%" y="687.50"></text></g><g><title>std::thread::panicking (3,346,721 samples, 0.11%)</title><rect x="40.5303%" y="661" width="0.1050%" height="15" fill="rgb(212,68,40)" fg:x="1291644495" fg:w="3346721"/><text x="40.7803%" y="671.50"></text></g><g><title>std::panicking::panicking (3,346,721 samples, 0.11%)</title><rect x="40.5303%" y="645" width="0.1050%" height="15" fill="rgb(254,125,32)" fg:x="1291644495" fg:w="3346721"/><text x="40.7803%" y="655.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (3,346,721 samples, 0.11%)</title><rect x="40.5303%" y="629" width="0.1050%" height="15" fill="rgb(253,97,22)" fg:x="1291644495" fg:w="3346721"/><text x="40.7803%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;winit::platform_impl::linux::wayland::window::state::WindowState&gt;&gt; (51,973,605 samples, 1.63%)</title><rect x="40.5303%" y="709" width="1.6309%" height="15" fill="rgb(241,101,14)" fg:x="1291644495" fg:w="51973605"/><text x="40.7803%" y="719.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (51,973,605 samples, 1.63%)</title><rect x="40.5303%" y="693" width="1.6309%" height="15" fill="rgb(238,103,29)" fg:x="1291644495" fg:w="51973605"/><text x="40.7803%" y="703.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (48,626,884 samples, 1.53%)</title><rect x="40.6353%" y="677" width="1.5259%" height="15" fill="rgb(233,195,47)" fg:x="1294991216" fg:w="48626884"/><text x="40.8853%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (45,337,366 samples, 1.42%)</title><rect x="40.7385%" y="661" width="1.4226%" height="15" fill="rgb(246,218,30)" fg:x="1298280734" fg:w="45337366"/><text x="40.9885%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_swap (45,337,366 samples, 1.42%)</title><rect x="40.7385%" y="645" width="1.4226%" height="15" fill="rgb(219,145,47)" fg:x="1298280734" fg:w="45337366"/><text x="40.9885%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::keys (1,676,357 samples, 0.05%)</title><rect x="42.1612%" y="709" width="0.0526%" height="15" fill="rgb(243,12,26)" fg:x="1343618100" fg:w="1676357"/><text x="42.4112%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1,676,357 samples, 0.05%)</title><rect x="42.1612%" y="693" width="0.0526%" height="15" fill="rgb(214,87,16)" fg:x="1343618100" fg:w="1676357"/><text x="42.4112%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1,676,357 samples, 0.05%)</title><rect x="42.1612%" y="677" width="0.0526%" height="15" fill="rgb(208,99,42)" fg:x="1343618100" fg:w="1676357"/><text x="42.4112%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1,676,357 samples, 0.05%)</title><rect x="42.1612%" y="661" width="0.0526%" height="15" fill="rgb(253,99,2)" fg:x="1343618100" fg:w="1676357"/><text x="42.4112%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (1,676,357 samples, 0.05%)</title><rect x="42.1612%" y="645" width="0.0526%" height="15" fill="rgb(220,168,23)" fg:x="1343618100" fg:w="1676357"/><text x="42.4112%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1,676,357 samples, 0.05%)</title><rect x="42.1612%" y="629" width="0.0526%" height="15" fill="rgb(242,38,24)" fg:x="1343618100" fg:w="1676357"/><text x="42.4112%" y="639.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_full (1,676,357 samples, 0.05%)</title><rect x="42.1612%" y="613" width="0.0526%" height="15" fill="rgb(225,182,9)" fg:x="1343618100" fg:w="1676357"/><text x="42.4112%" y="623.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::invert (1,676,357 samples, 0.05%)</title><rect x="42.1612%" y="597" width="0.0526%" height="15" fill="rgb(243,178,37)" fg:x="1343618100" fg:w="1676357"/><text x="42.4112%" y="607.50"></text></g><g><title>std::sync::poison::mutex::MutexGuard&lt;T&gt;::new (5,021,240 samples, 0.16%)</title><rect x="42.2138%" y="693" width="0.1576%" height="15" fill="rgb(232,139,19)" fg:x="1345294457" fg:w="5021240"/><text x="42.4638%" y="703.50"></text></g><g><title>std::sync::poison::Flag::guard (5,021,240 samples, 0.16%)</title><rect x="42.2138%" y="677" width="0.1576%" height="15" fill="rgb(225,201,24)" fg:x="1345294457" fg:w="5021240"/><text x="42.4638%" y="687.50"></text></g><g><title>std::thread::panicking (5,021,240 samples, 0.16%)</title><rect x="42.2138%" y="661" width="0.1576%" height="15" fill="rgb(221,47,46)" fg:x="1345294457" fg:w="5021240"/><text x="42.4638%" y="671.50"></text></g><g><title>std::panicking::panicking (5,021,240 samples, 0.16%)</title><rect x="42.2138%" y="645" width="0.1576%" height="15" fill="rgb(249,23,13)" fg:x="1345294457" fg:w="5021240"/><text x="42.4638%" y="655.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (5,021,240 samples, 0.16%)</title><rect x="42.2138%" y="629" width="0.1576%" height="15" fill="rgb(219,9,5)" fg:x="1345294457" fg:w="5021240"/><text x="42.4638%" y="639.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (89,563,412 samples, 2.81%)</title><rect x="42.2138%" y="709" width="2.8104%" height="15" fill="rgb(254,171,16)" fg:x="1345294457" fg:w="89563412"/><text x="42.4638%" y="719.50">st..</text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (84,542,172 samples, 2.65%)</title><rect x="42.3713%" y="693" width="2.6528%" height="15" fill="rgb(230,171,20)" fg:x="1350315697" fg:w="84542172"/><text x="42.6213%" y="703.50">st..</text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (81,198,207 samples, 2.55%)</title><rect x="42.4763%" y="677" width="2.5479%" height="15" fill="rgb(210,71,41)" fg:x="1353659662" fg:w="81198207"/><text x="42.7263%" y="687.50">co..</text></g><g><title>core::sync::atomic::atomic_compare_exchange (81,198,207 samples, 2.55%)</title><rect x="42.4763%" y="661" width="2.5479%" height="15" fill="rgb(206,173,20)" fg:x="1353659662" fg:w="81198207"/><text x="42.7263%" y="671.50">co..</text></g><g><title>[libc.so.6] (3,347,037 samples, 0.11%)</title><rect x="45.0242%" y="645" width="0.1050%" height="15" fill="rgb(233,88,34)" fg:x="1434857869" fg:w="3347037"/><text x="45.2742%" y="655.50"></text></g><g><title>core::num::&lt;impl usize&gt;::abs_diff (1,673,198 samples, 0.05%)</title><rect x="45.1292%" y="597" width="0.0525%" height="15" fill="rgb(223,209,46)" fg:x="1438204906" fg:w="1673198"/><text x="45.3792%" y="607.50"></text></g><g><title>core::ptr::copy_nonoverlapping (6,692,013 samples, 0.21%)</title><rect x="45.0242%" y="661" width="0.2100%" height="15" fill="rgb(250,43,18)" fg:x="1434857869" fg:w="6692013"/><text x="45.2742%" y="671.50"></text></g><g><title>core::ptr::copy_nonoverlapping::precondition_check (3,344,976 samples, 0.10%)</title><rect x="45.1292%" y="645" width="0.1050%" height="15" fill="rgb(208,13,10)" fg:x="1438204906" fg:w="3344976"/><text x="45.3792%" y="655.50"></text></g><g><title>core::ub_checks::maybe_is_nonoverlapping (3,344,976 samples, 0.10%)</title><rect x="45.1292%" y="629" width="0.1050%" height="15" fill="rgb(212,200,36)" fg:x="1438204906" fg:w="3344976"/><text x="45.3792%" y="639.50"></text></g><g><title>core::ub_checks::maybe_is_nonoverlapping::runtime (3,344,976 samples, 0.10%)</title><rect x="45.1292%" y="613" width="0.1050%" height="15" fill="rgb(225,90,30)" fg:x="1438204906" fg:w="3344976"/><text x="45.3792%" y="623.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1,671,778 samples, 0.05%)</title><rect x="45.1817%" y="597" width="0.0525%" height="15" fill="rgb(236,182,39)" fg:x="1439878104" fg:w="1671778"/><text x="45.4317%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1,671,778 samples, 0.05%)</title><rect x="45.1817%" y="581" width="0.0525%" height="15" fill="rgb(212,144,35)" fg:x="1439878104" fg:w="1671778"/><text x="45.4317%" y="591.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::with_state (198,455,716 samples, 6.23%)</title><rect x="39.1117%" y="741" width="6.2273%" height="15" fill="rgb(228,63,44)" fg:x="1246436278" fg:w="198455716"/><text x="39.3617%" y="751.50">winit::p..</text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::single_iteration::_{{closure}} (195,116,088 samples, 6.12%)</title><rect x="39.2165%" y="725" width="6.1225%" height="15" fill="rgb(228,109,6)" fg:x="1249775906" fg:w="195116088"/><text x="39.4665%" y="735.50">winit::p..</text></g><g><title>winit::platform_impl::linux::wayland::event_loop::sink::EventSink::append (10,034,125 samples, 0.31%)</title><rect x="45.0242%" y="709" width="0.3149%" height="15" fill="rgb(238,117,24)" fg:x="1434857869" fg:w="10034125"/><text x="45.2742%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (10,034,125 samples, 0.31%)</title><rect x="45.0242%" y="693" width="0.3149%" height="15" fill="rgb(242,26,26)" fg:x="1434857869" fg:w="10034125"/><text x="45.2742%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10,034,125 samples, 0.31%)</title><rect x="45.0242%" y="677" width="0.3149%" height="15" fill="rgb(221,92,48)" fg:x="1434857869" fg:w="10034125"/><text x="45.2742%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3,342,112 samples, 0.10%)</title><rect x="45.2342%" y="661" width="0.1049%" height="15" fill="rgb(209,209,32)" fg:x="1441549882" fg:w="3342112"/><text x="45.4842%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1,685,571 samples, 0.05%)</title><rect x="45.3390%" y="709" width="0.0529%" height="15" fill="rgb(221,70,22)" fg:x="1444891994" fg:w="1685571"/><text x="45.5890%" y="719.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::single_iteration (258,309,907 samples, 8.11%)</title><rect x="37.4443%" y="757" width="8.1055%" height="15" fill="rgb(248,145,5)" fg:x="1193298840" fg:w="258309907"/><text x="37.6943%" y="767.50">winit::plat..</text></g><g><title>winit::platform_impl::linux::wayland::event_loop::sink::EventSink::drain (6,716,753 samples, 0.21%)</title><rect x="45.3390%" y="741" width="0.2108%" height="15" fill="rgb(226,116,26)" fg:x="1444891994" fg:w="6716753"/><text x="45.5890%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (6,716,753 samples, 0.21%)</title><rect x="45.3390%" y="725" width="0.2108%" height="15" fill="rgb(244,5,17)" fg:x="1444891994" fg:w="6716753"/><text x="45.5890%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (5,031,182 samples, 0.16%)</title><rect x="45.3919%" y="709" width="0.1579%" height="15" fill="rgb(252,159,33)" fg:x="1446577565" fg:w="5031182"/><text x="45.6419%" y="719.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (5,031,182 samples, 0.16%)</title><rect x="45.3919%" y="693" width="0.1579%" height="15" fill="rgb(206,71,0)" fg:x="1446577565" fg:w="5031182"/><text x="45.6419%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5,031,182 samples, 0.16%)</title><rect x="45.3919%" y="677" width="0.1579%" height="15" fill="rgb(233,118,54)" fg:x="1446577565" fg:w="5031182"/><text x="45.6419%" y="687.50"></text></g><g><title>[unknown] (644,236,338 samples, 20.22%)</title><rect x="25.3869%" y="821" width="20.2154%" height="15" fill="rgb(234,83,48)" fg:x="809043949" fg:w="644236338"/><text x="25.6369%" y="831.50">[unknown]</text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::run_on_demand (644,236,338 samples, 20.22%)</title><rect x="25.3869%" y="805" width="20.2154%" height="15" fill="rgb(228,3,54)" fg:x="809043949" fg:w="644236338"/><text x="25.6369%" y="815.50">winit::platform_impl::linux::way..</text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::pump_events (642,564,273 samples, 20.16%)</title><rect x="25.4393%" y="789" width="20.1629%" height="15" fill="rgb(226,155,13)" fg:x="810716014" fg:w="642564273"/><text x="25.6893%" y="799.50">winit::platform_impl::linux::way..</text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::poll_events_with_timeout (632,532,269 samples, 19.85%)</title><rect x="25.7541%" y="773" width="19.8481%" height="15" fill="rgb(241,28,37)" fg:x="820748018" fg:w="632532269"/><text x="26.0041%" y="783.50">winit::platform_impl::linux::wa..</text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::with_state (1,671,540 samples, 0.05%)</title><rect x="45.5498%" y="757" width="0.0525%" height="15" fill="rgb(233,93,10)" fg:x="1451608747" fg:w="1671540"/><text x="45.7998%" y="767.50"></text></g><g><title>__rustc::__rust_alloc (3,560,241 samples, 0.11%)</title><rect x="45.6023%" y="821" width="0.1117%" height="15" fill="rgb(225,113,19)" fg:x="1453280287" fg:w="3560241"/><text x="45.8523%" y="831.50"></text></g><g><title>addr2line::line::render_file (2,717,824 samples, 0.09%)</title><rect x="45.7140%" y="821" width="0.0853%" height="15" fill="rgb(241,2,18)" fg:x="1456840528" fg:w="2717824"/><text x="45.9640%" y="831.50"></text></g><g><title>gimli::read::line::FileEntry&lt;R,Offset&gt;::path_name (2,717,824 samples, 0.09%)</title><rect x="45.7140%" y="805" width="0.0853%" height="15" fill="rgb(228,207,21)" fg:x="1456840528" fg:w="2717824"/><text x="45.9640%" y="815.50"></text></g><g><title>&lt;gimli::read::unit::AttributeValue&lt;R,Offset&gt; as core::clone::Clone&gt;::clone (2,717,824 samples, 0.09%)</title><rect x="45.7140%" y="789" width="0.0853%" height="15" fill="rgb(213,211,35)" fg:x="1456840528" fg:w="2717824"/><text x="45.9640%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,350,003 samples, 0.11%)</title><rect x="45.7992%" y="821" width="0.1051%" height="15" fill="rgb(209,83,10)" fg:x="1459558352" fg:w="3350003"/><text x="46.0492%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1,676,157 samples, 0.05%)</title><rect x="45.8518%" y="805" width="0.0526%" height="15" fill="rgb(209,164,1)" fg:x="1461232198" fg:w="1676157"/><text x="46.1018%" y="815.50"></text></g><g><title>[libvulkan.so.1.4.313] (1,171,749 samples, 0.04%)</title><rect x="45.9044%" y="581" width="0.0368%" height="15" fill="rgb(213,184,43)" fg:x="1462908355" fg:w="1171749"/><text x="46.1544%" y="591.50"></text></g><g><title>[libvulkan.so.1.4.313] (1,171,749 samples, 0.04%)</title><rect x="45.9044%" y="565" width="0.0368%" height="15" fill="rgb(231,61,34)" fg:x="1462908355" fg:w="1171749"/><text x="46.1544%" y="575.50"></text></g><g><title>[libvulkan.so.1.4.313] (1,171,749 samples, 0.04%)</title><rect x="45.9044%" y="549" width="0.0368%" height="15" fill="rgb(235,75,3)" fg:x="1462908355" fg:w="1171749"/><text x="46.1544%" y="559.50"></text></g><g><title>[libvulkan.so.1.4.313] (1,171,749 samples, 0.04%)</title><rect x="45.9044%" y="533" width="0.0368%" height="15" fill="rgb(220,106,47)" fg:x="1462908355" fg:w="1171749"/><text x="46.1544%" y="543.50"></text></g><g><title>[libvulkan.so.1.4.313] (1,171,749 samples, 0.04%)</title><rect x="45.9044%" y="517" width="0.0368%" height="15" fill="rgb(210,196,33)" fg:x="1462908355" fg:w="1171749"/><text x="46.1544%" y="527.50"></text></g><g><title>[libvulkan.so.1.4.313] (1,171,749 samples, 0.04%)</title><rect x="45.9044%" y="501" width="0.0368%" height="15" fill="rgb(229,154,42)" fg:x="1462908355" fg:w="1171749"/><text x="46.1544%" y="511.50"></text></g><g><title>[libvulkan.so.1.4.313] (1,171,749 samples, 0.04%)</title><rect x="45.9044%" y="485" width="0.0368%" height="15" fill="rgb(228,114,26)" fg:x="1462908355" fg:w="1171749"/><text x="46.1544%" y="495.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (2,020,822 samples, 0.06%)</title><rect x="45.9044%" y="821" width="0.0634%" height="15" fill="rgb(208,144,1)" fg:x="1462908355" fg:w="2020822"/><text x="46.1544%" y="831.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_layer_properties::_{{closure}} (2,020,822 samples, 0.06%)</title><rect x="45.9044%" y="805" width="0.0634%" height="15" fill="rgb(239,112,37)" fg:x="1462908355" fg:w="2020822"/><text x="46.1544%" y="815.50"></text></g><g><title>vkEnumerateInstanceLayerProperties (2,020,822 samples, 0.06%)</title><rect x="45.9044%" y="789" width="0.0634%" height="15" fill="rgb(210,96,50)" fg:x="1462908355" fg:w="2020822"/><text x="46.1544%" y="799.50"></text></g><g><title>[libvulkan.so.1.4.313] (2,020,822 samples, 0.06%)</title><rect x="45.9044%" y="773" width="0.0634%" height="15" fill="rgb(222,178,2)" fg:x="1462908355" fg:w="2020822"/><text x="46.1544%" y="783.50"></text></g><g><title>[libvulkan.so.1.4.313] (2,020,822 samples, 0.06%)</title><rect x="45.9044%" y="757" width="0.0634%" height="15" fill="rgb(226,74,18)" fg:x="1462908355" fg:w="2020822"/><text x="46.1544%" y="767.50"></text></g><g><title>[libvulkan.so.1.4.313] (2,020,822 samples, 0.06%)</title><rect x="45.9044%" y="741" width="0.0634%" height="15" fill="rgb(225,67,54)" fg:x="1462908355" fg:w="2020822"/><text x="46.1544%" y="751.50"></text></g><g><title>[libvulkan.so.1.4.313] (2,020,822 samples, 0.06%)</title><rect x="45.9044%" y="725" width="0.0634%" height="15" fill="rgb(251,92,32)" fg:x="1462908355" fg:w="2020822"/><text x="46.1544%" y="735.50"></text></g><g><title>[libvulkan.so.1.4.313] (2,020,822 samples, 0.06%)</title><rect x="45.9044%" y="709" width="0.0634%" height="15" fill="rgb(228,149,22)" fg:x="1462908355" fg:w="2020822"/><text x="46.1544%" y="719.50"></text></g><g><title>[libvulkan.so.1.4.313] (2,020,822 samples, 0.06%)</title><rect x="45.9044%" y="693" width="0.0634%" height="15" fill="rgb(243,54,13)" fg:x="1462908355" fg:w="2020822"/><text x="46.1544%" y="703.50"></text></g><g><title>[libvulkan.so.1.4.313] (2,020,822 samples, 0.06%)</title><rect x="45.9044%" y="677" width="0.0634%" height="15" fill="rgb(243,180,28)" fg:x="1462908355" fg:w="2020822"/><text x="46.1544%" y="687.50"></text></g><g><title>[libvulkan.so.1.4.313] (2,020,822 samples, 0.06%)</title><rect x="45.9044%" y="661" width="0.0634%" height="15" fill="rgb(208,167,24)" fg:x="1462908355" fg:w="2020822"/><text x="46.1544%" y="671.50"></text></g><g><title>[libvulkan.so.1.4.313] (2,020,822 samples, 0.06%)</title><rect x="45.9044%" y="645" width="0.0634%" height="15" fill="rgb(245,73,45)" fg:x="1462908355" fg:w="2020822"/><text x="46.1544%" y="655.50"></text></g><g><title>[libvulkan.so.1.4.313] (2,020,822 samples, 0.06%)</title><rect x="45.9044%" y="629" width="0.0634%" height="15" fill="rgb(237,203,48)" fg:x="1462908355" fg:w="2020822"/><text x="46.1544%" y="639.50"></text></g><g><title>[libvulkan.so.1.4.313] (2,020,822 samples, 0.06%)</title><rect x="45.9044%" y="613" width="0.0634%" height="15" fill="rgb(211,197,16)" fg:x="1462908355" fg:w="2020822"/><text x="46.1544%" y="623.50"></text></g><g><title>[libvulkan.so.1.4.313] (2,020,822 samples, 0.06%)</title><rect x="45.9044%" y="597" width="0.0634%" height="15" fill="rgb(243,99,51)" fg:x="1462908355" fg:w="2020822"/><text x="46.1544%" y="607.50"></text></g><g><title>__libc_calloc (849,073 samples, 0.03%)</title><rect x="45.9411%" y="581" width="0.0266%" height="15" fill="rgb(215,123,29)" fg:x="1464080104" fg:w="849073"/><text x="46.1911%" y="591.50"></text></g><g><title>[libc.so.6] (849,073 samples, 0.03%)</title><rect x="45.9411%" y="565" width="0.0266%" height="15" fill="rgb(239,186,37)" fg:x="1464080104" fg:w="849073"/><text x="46.1911%" y="575.50"></text></g><g><title>calloop::sources::timer::TimerWheel::next_deadline (1,673,273 samples, 0.05%)</title><rect x="45.9678%" y="805" width="0.0525%" height="15" fill="rgb(252,136,39)" fg:x="1464929177" fg:w="1673273"/><text x="46.2178%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,673,273 samples, 0.05%)</title><rect x="45.9678%" y="789" width="0.0525%" height="15" fill="rgb(223,213,32)" fg:x="1464929177" fg:w="1673273"/><text x="46.2178%" y="799.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1,681,409 samples, 0.05%)</title><rect x="46.0203%" y="805" width="0.0528%" height="15" fill="rgb(233,115,5)" fg:x="1466602450" fg:w="1681409"/><text x="46.2703%" y="815.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1,681,409 samples, 0.05%)</title><rect x="46.0203%" y="789" width="0.0528%" height="15" fill="rgb(207,226,44)" fg:x="1466602450" fg:w="1681409"/><text x="46.2703%" y="799.50"></text></g><g><title>core::cell::BorrowRefMut::new (1,681,409 samples, 0.05%)</title><rect x="46.0203%" y="773" width="0.0528%" height="15" fill="rgb(208,126,0)" fg:x="1466602450" fg:w="1681409"/><text x="46.2703%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,318,166 samples, 0.10%)</title><rect x="46.0730%" y="805" width="0.1041%" height="15" fill="rgb(244,66,21)" fg:x="1468283859" fg:w="3318166"/><text x="46.3230%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (3,318,166 samples, 0.10%)</title><rect x="46.0730%" y="789" width="0.1041%" height="15" fill="rgb(222,97,12)" fg:x="1468283859" fg:w="3318166"/><text x="46.3230%" y="799.50"></text></g><g><title>core::iter::adapters::try_process (3,318,166 samples, 0.10%)</title><rect x="46.0730%" y="773" width="0.1041%" height="15" fill="rgb(219,213,19)" fg:x="1468283859" fg:w="3318166"/><text x="46.3230%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (3,318,166 samples, 0.10%)</title><rect x="46.0730%" y="757" width="0.1041%" height="15" fill="rgb(252,169,30)" fg:x="1468283859" fg:w="3318166"/><text x="46.3230%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,318,166 samples, 0.10%)</title><rect x="46.0730%" y="741" width="0.1041%" height="15" fill="rgb(206,32,51)" fg:x="1468283859" fg:w="3318166"/><text x="46.3230%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,318,166 samples, 0.10%)</title><rect x="46.0730%" y="725" width="0.1041%" height="15" fill="rgb(250,172,42)" fg:x="1468283859" fg:w="3318166"/><text x="46.3230%" y="735.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (3,318,166 samples, 0.10%)</title><rect x="46.0730%" y="709" width="0.1041%" height="15" fill="rgb(209,34,43)" fg:x="1468283859" fg:w="3318166"/><text x="46.3230%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::Ref&lt;calloop::sources::timer::TimerWheel&gt;&gt; (1,671,133 samples, 0.05%)</title><rect x="46.1772%" y="805" width="0.0524%" height="15" fill="rgb(223,11,35)" fg:x="1471602025" fg:w="1671133"/><text x="46.4272%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRef&gt; (1,671,133 samples, 0.05%)</title><rect x="46.1772%" y="789" width="0.0524%" height="15" fill="rgb(251,219,26)" fg:x="1471602025" fg:w="1671133"/><text x="46.4272%" y="799.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (1,671,133 samples, 0.05%)</title><rect x="46.1772%" y="773" width="0.0524%" height="15" fill="rgb(231,119,3)" fg:x="1471602025" fg:w="1671133"/><text x="46.4272%" y="783.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1,671,133 samples, 0.05%)</title><rect x="46.1772%" y="757" width="0.0524%" height="15" fill="rgb(216,97,11)" fg:x="1471602025" fg:w="1671133"/><text x="46.4272%" y="767.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1,671,133 samples, 0.05%)</title><rect x="46.1772%" y="741" width="0.0524%" height="15" fill="rgb(223,59,9)" fg:x="1471602025" fg:w="1671133"/><text x="46.4272%" y="751.50"></text></g><g><title>core::mem::replace (1,671,133 samples, 0.05%)</title><rect x="46.1772%" y="725" width="0.0524%" height="15" fill="rgb(233,93,31)" fg:x="1471602025" fg:w="1671133"/><text x="46.4272%" y="735.50"></text></g><g><title>calloop::sys::Poll::poll (60,150,434 samples, 1.89%)</title><rect x="45.9678%" y="821" width="1.8875%" height="15" fill="rgb(239,81,33)" fg:x="1464929177" fg:w="60150434"/><text x="46.2178%" y="831.50">c..</text></g><g><title>std::sys::pal::unix::time::Timespec::now (51,806,453 samples, 1.63%)</title><rect x="46.2296%" y="805" width="1.6256%" height="15" fill="rgb(213,120,34)" fg:x="1473273158" fg:w="51806453"/><text x="46.4796%" y="815.50"></text></g><g><title>clock_gettime (50,134,507 samples, 1.57%)</title><rect x="46.2821%" y="789" width="1.5732%" height="15" fill="rgb(243,49,53)" fg:x="1474945104" fg:w="50134507"/><text x="46.5321%" y="799.50"></text></g><g><title>__vdso_clock_gettime (46,791,294 samples, 1.47%)</title><rect x="46.3870%" y="773" width="1.4683%" height="15" fill="rgb(247,216,33)" fg:x="1478288317" fg:w="46791294"/><text x="46.6370%" y="783.50"></text></g><g><title>calloop_wayland_source::flush_queue (1,671,892 samples, 0.05%)</title><rect x="47.8552%" y="821" width="0.0525%" height="15" fill="rgb(226,26,14)" fg:x="1525079611" fg:w="1671892"/><text x="48.1052%" y="831.50"></text></g><g><title>clock_gettime (7,186,391 samples, 0.23%)</title><rect x="47.9077%" y="821" width="0.2255%" height="15" fill="rgb(215,49,53)" fg:x="1526751503" fg:w="7186391"/><text x="48.1577%" y="831.50"></text></g><g><title>core::alloc::layout::Layout::is_size_align_valid (928,797 samples, 0.03%)</title><rect x="48.1332%" y="821" width="0.0291%" height="15" fill="rgb(245,162,40)" fg:x="1533937894" fg:w="928797"/><text x="48.3832%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5,873,843 samples, 0.18%)</title><rect x="48.1623%" y="821" width="0.1843%" height="15" fill="rgb(229,68,17)" fg:x="1534866691" fg:w="5873843"/><text x="48.4123%" y="831.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (5,873,843 samples, 0.18%)</title><rect x="48.1623%" y="805" width="0.1843%" height="15" fill="rgb(213,182,10)" fg:x="1534866691" fg:w="5873843"/><text x="48.4123%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5,873,843 samples, 0.18%)</title><rect x="48.1623%" y="789" width="0.1843%" height="15" fill="rgb(245,125,30)" fg:x="1534866691" fg:w="5873843"/><text x="48.4123%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5,873,843 samples, 0.18%)</title><rect x="48.1623%" y="773" width="0.1843%" height="15" fill="rgb(232,202,2)" fg:x="1534866691" fg:w="5873843"/><text x="48.4123%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5,873,843 samples, 0.18%)</title><rect x="48.1623%" y="757" width="0.1843%" height="15" fill="rgb(237,140,51)" fg:x="1534866691" fg:w="5873843"/><text x="48.4123%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5,873,843 samples, 0.18%)</title><rect x="48.1623%" y="741" width="0.1843%" height="15" fill="rgb(236,157,25)" fg:x="1534866691" fg:w="5873843"/><text x="48.4123%" y="751.50"></text></g><g><title>[libvulkan.so.1.4.313] (1,405,816 samples, 0.04%)</title><rect x="48.3467%" y="741" width="0.0441%" height="15" fill="rgb(219,209,0)" fg:x="1540740534" fg:w="1405816"/><text x="48.5967%" y="751.50"></text></g><g><title>[libvulkan.so.1.4.313] (1,405,816 samples, 0.04%)</title><rect x="48.3467%" y="725" width="0.0441%" height="15" fill="rgb(240,116,54)" fg:x="1540740534" fg:w="1405816"/><text x="48.5967%" y="735.50"></text></g><g><title>[libc.so.6] (1,405,816 samples, 0.04%)</title><rect x="48.3467%" y="709" width="0.0441%" height="15" fill="rgb(216,10,36)" fg:x="1540740534" fg:w="1405816"/><text x="48.5967%" y="719.50"></text></g><g><title>[libc.so.6] (1,405,816 samples, 0.04%)</title><rect x="48.3467%" y="693" width="0.0441%" height="15" fill="rgb(222,72,44)" fg:x="1540740534" fg:w="1405816"/><text x="48.5967%" y="703.50"></text></g><g><title>malloc (1,405,816 samples, 0.04%)</title><rect x="48.3467%" y="677" width="0.0441%" height="15" fill="rgb(232,159,9)" fg:x="1540740534" fg:w="1405816"/><text x="48.5967%" y="687.50"></text></g><g><title>[libc.so.6] (1,405,816 samples, 0.04%)</title><rect x="48.3467%" y="661" width="0.0441%" height="15" fill="rgb(210,39,32)" fg:x="1540740534" fg:w="1405816"/><text x="48.5967%" y="671.50"></text></g><g><title>[libc.so.6] (1,405,816 samples, 0.04%)</title><rect x="48.3467%" y="645" width="0.0441%" height="15" fill="rgb(216,194,45)" fg:x="1540740534" fg:w="1405816"/><text x="48.5967%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5,071,544 samples, 0.16%)</title><rect x="48.3467%" y="821" width="0.1591%" height="15" fill="rgb(218,18,35)" fg:x="1540740534" fg:w="5071544"/><text x="48.5967%" y="831.50"></text></g><g><title>silk_engine::gfx::vulkan::instance::INSTANCE::_{{closure}} (5,071,544 samples, 0.16%)</title><rect x="48.3467%" y="805" width="0.1591%" height="15" fill="rgb(207,83,51)" fg:x="1540740534" fg:w="5071544"/><text x="48.5967%" y="815.50"></text></g><g><title>ash::entry::Entry::create_instance (5,071,544 samples, 0.16%)</title><rect x="48.3467%" y="789" width="0.1591%" height="15" fill="rgb(225,63,43)" fg:x="1540740534" fg:w="5071544"/><text x="48.5967%" y="799.50"></text></g><g><title>vkCreateInstance (5,071,544 samples, 0.16%)</title><rect x="48.3467%" y="773" width="0.1591%" height="15" fill="rgb(207,57,36)" fg:x="1540740534" fg:w="5071544"/><text x="48.5967%" y="783.50"></text></g><g><title>[libvulkan.so.1.4.313] (5,071,544 samples, 0.16%)</title><rect x="48.3467%" y="757" width="0.1591%" height="15" fill="rgb(216,99,33)" fg:x="1540740534" fg:w="5071544"/><text x="48.5967%" y="767.50"></text></g><g><title>dlopen (3,665,728 samples, 0.12%)</title><rect x="48.3908%" y="741" width="0.1150%" height="15" fill="rgb(225,42,16)" fg:x="1542146350" fg:w="3665728"/><text x="48.6408%" y="751.50"></text></g><g><title>[libc.so.6] (3,665,728 samples, 0.12%)</title><rect x="48.3908%" y="725" width="0.1150%" height="15" fill="rgb(220,201,45)" fg:x="1542146350" fg:w="3665728"/><text x="48.6408%" y="735.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,665,728 samples, 0.12%)</title><rect x="48.3908%" y="709" width="0.1150%" height="15" fill="rgb(225,33,4)" fg:x="1542146350" fg:w="3665728"/><text x="48.6408%" y="719.50"></text></g><g><title>_dl_catch_exception (3,665,728 samples, 0.12%)</title><rect x="48.3908%" y="693" width="0.1150%" height="15" fill="rgb(224,33,50)" fg:x="1542146350" fg:w="3665728"/><text x="48.6408%" y="703.50"></text></g><g><title>[libc.so.6] (3,665,728 samples, 0.12%)</title><rect x="48.3908%" y="677" width="0.1150%" height="15" fill="rgb(246,198,51)" fg:x="1542146350" fg:w="3665728"/><text x="48.6408%" y="687.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,665,728 samples, 0.12%)</title><rect x="48.3908%" y="661" width="0.1150%" height="15" fill="rgb(205,22,4)" fg:x="1542146350" fg:w="3665728"/><text x="48.6408%" y="671.50"></text></g><g><title>_dl_catch_exception (3,665,728 samples, 0.12%)</title><rect x="48.3908%" y="645" width="0.1150%" height="15" fill="rgb(206,3,8)" fg:x="1542146350" fg:w="3665728"/><text x="48.6408%" y="655.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,665,728 samples, 0.12%)</title><rect x="48.3908%" y="629" width="0.1150%" height="15" fill="rgb(251,23,15)" fg:x="1542146350" fg:w="3665728"/><text x="48.6408%" y="639.50"></text></g><g><title>_dl_catch_exception (3,665,728 samples, 0.12%)</title><rect x="48.3908%" y="613" width="0.1150%" height="15" fill="rgb(252,88,28)" fg:x="1542146350" fg:w="3665728"/><text x="48.6408%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,665,728 samples, 0.12%)</title><rect x="48.3908%" y="597" width="0.1150%" height="15" fill="rgb(212,127,14)" fg:x="1542146350" fg:w="3665728"/><text x="48.6408%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,665,728 samples, 0.12%)</title><rect x="48.3908%" y="581" width="0.1150%" height="15" fill="rgb(247,145,37)" fg:x="1542146350" fg:w="3665728"/><text x="48.6408%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,665,728 samples, 0.12%)</title><rect x="48.3908%" y="565" width="0.1150%" height="15" fill="rgb(209,117,53)" fg:x="1542146350" fg:w="3665728"/><text x="48.6408%" y="575.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,665,728 samples, 0.12%)</title><rect x="48.3908%" y="549" width="0.1150%" height="15" fill="rgb(212,90,42)" fg:x="1542146350" fg:w="3665728"/><text x="48.6408%" y="559.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3,665,728 samples, 0.12%)</title><rect x="48.3908%" y="533" width="0.1150%" height="15" fill="rgb(218,164,37)" fg:x="1542146350" fg:w="3665728"/><text x="48.6408%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (6,688,283 samples, 0.21%)</title><rect x="48.5058%" y="821" width="0.2099%" height="15" fill="rgb(246,65,34)" fg:x="1545812078" fg:w="6688283"/><text x="48.7558%" y="831.50"></text></g><g><title>&lt;tracing::span::EnteredSpan as core::ops::drop::Drop&gt;::drop (1,673,460 samples, 0.05%)</title><rect x="48.6632%" y="805" width="0.0525%" height="15" fill="rgb(231,100,33)" fg:x="1550826901" fg:w="1673460"/><text x="48.9132%" y="815.50"></text></g><g><title>tracing::span::Span::do_exit (1,673,460 samples, 0.05%)</title><rect x="48.6632%" y="789" width="0.0525%" height="15" fill="rgb(228,126,14)" fg:x="1550826901" fg:w="1673460"/><text x="48.9132%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1,673,460 samples, 0.05%)</title><rect x="48.6632%" y="773" width="0.0525%" height="15" fill="rgb(215,173,21)" fg:x="1550826901" fg:w="1673460"/><text x="48.9132%" y="783.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3,353,665 samples, 0.11%)</title><rect x="48.7157%" y="741" width="0.1052%" height="15" fill="rgb(210,6,40)" fg:x="1552500361" fg:w="3353665"/><text x="48.9657%" y="751.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::new (2,724,681 samples, 0.09%)</title><rect x="48.8209%" y="725" width="0.0855%" height="15" fill="rgb(212,48,18)" fg:x="1555854026" fg:w="2724681"/><text x="49.0709%" y="735.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::parse (5,343,192 samples, 0.17%)</title><rect x="48.8209%" y="741" width="0.1677%" height="15" fill="rgb(230,214,11)" fg:x="1555854026" fg:w="5343192"/><text x="49.0709%" y="751.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::parse_attributes (2,618,511 samples, 0.08%)</title><rect x="48.9064%" y="725" width="0.0822%" height="15" fill="rgb(254,105,39)" fg:x="1558578707" fg:w="2618511"/><text x="49.1564%" y="735.50"></text></g><g><title>gimli::read::dwarf::Unit&lt;R&gt;::new (11,077,786 samples, 0.35%)</title><rect x="48.7157%" y="821" width="0.3476%" height="15" fill="rgb(245,158,5)" fg:x="1552500361" fg:w="11077786"/><text x="48.9657%" y="831.50"></text></g><g><title>gimli::read::dwarf::Dwarf&lt;R&gt;::abbreviations (11,077,786 samples, 0.35%)</title><rect x="48.7157%" y="805" width="0.3476%" height="15" fill="rgb(249,208,11)" fg:x="1552500361" fg:w="11077786"/><text x="48.9657%" y="815.50"></text></g><g><title>gimli::read::abbrev::AbbreviationsCache::get (11,077,786 samples, 0.35%)</title><rect x="48.7157%" y="789" width="0.3476%" height="15" fill="rgb(210,39,28)" fg:x="1552500361" fg:w="11077786"/><text x="48.9657%" y="799.50"></text></g><g><title>gimli::read::abbrev::DebugAbbrev&lt;R&gt;::abbreviations (11,077,786 samples, 0.35%)</title><rect x="48.7157%" y="773" width="0.3476%" height="15" fill="rgb(211,56,53)" fg:x="1552500361" fg:w="11077786"/><text x="48.9657%" y="783.50"></text></g><g><title>gimli::read::abbrev::Abbreviations::parse (11,077,786 samples, 0.35%)</title><rect x="48.7157%" y="757" width="0.3476%" height="15" fill="rgb(226,201,30)" fg:x="1552500361" fg:w="11077786"/><text x="48.9657%" y="767.50"></text></g><g><title>gimli::read::abbrev::Abbreviations::insert (2,380,929 samples, 0.07%)</title><rect x="48.9886%" y="741" width="0.0747%" height="15" fill="rgb(239,101,34)" fg:x="1561197218" fg:w="2380929"/><text x="49.2386%" y="751.50"></text></g><g><title>&lt;tracing_core::metadata::Level as core::cmp::PartialOrd&lt;tracing_core::metadata::LevelFilter&gt;&gt;::le (5,024,347 samples, 0.16%)</title><rect x="49.0633%" y="805" width="0.1577%" height="15" fill="rgb(226,209,5)" fg:x="1563578147" fg:w="5024347"/><text x="49.3133%" y="815.50"></text></g><g><title>tracing_core::metadata::filter_as_usize (5,024,347 samples, 0.16%)</title><rect x="49.0633%" y="789" width="0.1577%" height="15" fill="rgb(250,105,47)" fg:x="1563578147" fg:w="5024347"/><text x="49.3133%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (28,466,242 samples, 0.89%)</title><rect x="49.2209%" y="805" width="0.8932%" height="15" fill="rgb(230,72,3)" fg:x="1568602494" fg:w="28466242"/><text x="49.4709%" y="815.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (28,466,242 samples, 0.89%)</title><rect x="49.2209%" y="789" width="0.8932%" height="15" fill="rgb(232,218,39)" fg:x="1568602494" fg:w="28466242"/><text x="49.4709%" y="799.50"></text></g><g><title>tracing::span::Span::do_exit (28,466,242 samples, 0.89%)</title><rect x="49.2209%" y="773" width="0.8932%" height="15" fill="rgb(248,166,6)" fg:x="1568602494" fg:w="28466242"/><text x="49.4709%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (28,466,242 samples, 0.89%)</title><rect x="49.2209%" y="757" width="0.8932%" height="15" fill="rgb(247,89,20)" fg:x="1568602494" fg:w="28466242"/><text x="49.4709%" y="767.50"></text></g><g><title>polling::epoll::epoll_flags (8,376,393 samples, 0.26%)</title><rect x="50.1142%" y="805" width="0.2628%" height="15" fill="rgb(248,130,54)" fg:x="1597068736" fg:w="8376393"/><text x="50.3642%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,673,336 samples, 0.05%)</title><rect x="50.5873%" y="773" width="0.0525%" height="15" fill="rgb(234,196,4)" fg:x="1612147087" fg:w="1673336"/><text x="50.8373%" y="783.50"></text></g><g><title>rustix::backend::conv::&lt;impl core::convert::From&lt;std::os::fd::owned::BorrowedFd&gt; for rustix::backend::reg::ArgReg&lt;Num&gt;&gt;::from (1,673,336 samples, 0.05%)</title><rect x="50.5873%" y="757" width="0.0525%" height="15" fill="rgb(250,143,31)" fg:x="1612147087" fg:w="1673336"/><text x="50.8373%" y="767.50"></text></g><g><title>rustix::backend::conv::raw_fd (1,673,336 samples, 0.05%)</title><rect x="50.5873%" y="741" width="0.0525%" height="15" fill="rgb(211,110,34)" fg:x="1612147087" fg:w="1673336"/><text x="50.8373%" y="751.50"></text></g><g><title>rustix::backend::arch::asm::syscall4_readonly (26,750,282 samples, 0.84%)</title><rect x="50.6398%" y="773" width="0.8394%" height="15" fill="rgb(215,124,48)" fg:x="1613820423" fg:w="26750282"/><text x="50.8898%" y="783.50"></text></g><g><title>[unknown] (26,750,282 samples, 0.84%)</title><rect x="50.6398%" y="757" width="0.8394%" height="15" fill="rgb(216,46,13)" fg:x="1613820423" fg:w="26750282"/><text x="50.8898%" y="767.50"></text></g><g><title>rustix::event::epoll::modify (70,040,167 samples, 2.20%)</title><rect x="50.3770%" y="805" width="2.1978%" height="15" fill="rgb(205,184,25)" fg:x="1605445129" fg:w="70040167"/><text x="50.6270%" y="815.50">r..</text></g><g><title>rustix::backend::event::syscalls::epoll_mod (65,011,082 samples, 2.04%)</title><rect x="50.5348%" y="789" width="2.0400%" height="15" fill="rgb(228,1,10)" fg:x="1610474214" fg:w="65011082"/><text x="50.7848%" y="799.50">r..</text></g><g><title>rustix::backend::conv::ret (34,914,591 samples, 1.10%)</title><rect x="51.4792%" y="773" width="1.0956%" height="15" fill="rgb(213,116,27)" fg:x="1640570705" fg:w="34914591"/><text x="51.7292%" y="783.50"></text></g><g><title>rustix::backend::io::errno::try_decode_void (34,914,591 samples, 1.10%)</title><rect x="51.4792%" y="757" width="1.0956%" height="15" fill="rgb(241,95,50)" fg:x="1640570705" fg:w="34914591"/><text x="51.7292%" y="767.50"></text></g><g><title>rustix::backend::reg::RetReg&lt;Num&gt;::is_nonzero (33,242,592 samples, 1.04%)</title><rect x="51.5317%" y="741" width="1.0431%" height="15" fill="rgb(238,48,32)" fg:x="1642242704" fg:w="33242592"/><text x="51.7817%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (33,242,592 samples, 1.04%)</title><rect x="51.5317%" y="725" width="1.0431%" height="15" fill="rgb(235,113,49)" fg:x="1642242704" fg:w="33242592"/><text x="51.7817%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (33,242,592 samples, 1.04%)</title><rect x="51.5317%" y="709" width="1.0431%" height="15" fill="rgb(205,127,43)" fg:x="1642242704" fg:w="33242592"/><text x="51.7817%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null::runtime (33,242,592 samples, 1.04%)</title><rect x="51.5317%" y="693" width="1.0431%" height="15" fill="rgb(250,162,2)" fg:x="1642242704" fg:w="33242592"/><text x="51.7817%" y="703.50"></text></g><g><title>polling::epoll::Poller::modify (118,607,993 samples, 3.72%)</title><rect x="49.0633%" y="821" width="3.7218%" height="15" fill="rgb(220,13,41)" fg:x="1563578147" fg:w="118607993"/><text x="49.3133%" y="831.50">poll..</text></g><g><title>tracing_core::metadata::LevelFilter::current (6,700,844 samples, 0.21%)</title><rect x="52.5748%" y="805" width="0.2103%" height="15" fill="rgb(249,221,25)" fg:x="1675485296" fg:w="6700844"/><text x="52.8248%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5,028,239 samples, 0.16%)</title><rect x="52.6273%" y="789" width="0.1578%" height="15" fill="rgb(215,208,19)" fg:x="1677157901" fg:w="5028239"/><text x="52.8773%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (5,028,239 samples, 0.16%)</title><rect x="52.6273%" y="773" width="0.1578%" height="15" fill="rgb(236,175,2)" fg:x="1677157901" fg:w="5028239"/><text x="52.8773%" y="783.50"></text></g><g><title>polling::epoll::Poller::wait (8,365,108 samples, 0.26%)</title><rect x="52.7851%" y="821" width="0.2625%" height="15" fill="rgb(241,52,2)" fg:x="1682186140" fg:w="8365108"/><text x="53.0351%" y="831.50"></text></g><g><title>rustix::event::epoll::wait (3,347,715 samples, 0.11%)</title><rect x="52.9425%" y="805" width="0.1050%" height="15" fill="rgb(248,140,14)" fg:x="1687203533" fg:w="3347715"/><text x="53.1925%" y="815.50"></text></g><g><title>rustix::backend::event::syscalls::epoll_wait (3,347,715 samples, 0.11%)</title><rect x="52.9425%" y="789" width="0.1050%" height="15" fill="rgb(253,22,42)" fg:x="1687203533" fg:w="3347715"/><text x="53.1925%" y="799.50"></text></g><g><title>core::num::&lt;impl i64&gt;::checked_mul (3,344,021 samples, 0.10%)</title><rect x="53.0475%" y="805" width="0.1049%" height="15" fill="rgb(234,61,47)" fg:x="1690551248" fg:w="3344021"/><text x="53.2975%" y="815.50"></text></g><g><title>core::num::&lt;impl i64&gt;::overflowing_mul (3,344,021 samples, 0.10%)</title><rect x="53.0475%" y="789" width="0.1049%" height="15" fill="rgb(208,226,15)" fg:x="1690551248" fg:w="3344021"/><text x="53.2975%" y="799.50"></text></g><g><title>rustix::timespec::Timespec::as_c_int_millis (6,691,050 samples, 0.21%)</title><rect x="53.0475%" y="821" width="0.2100%" height="15" fill="rgb(217,221,4)" fg:x="1690551248" fg:w="6691050"/><text x="53.2975%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (3,347,029 samples, 0.11%)</title><rect x="53.1525%" y="805" width="0.1050%" height="15" fill="rgb(212,174,34)" fg:x="1693895269" fg:w="3347029"/><text x="53.4025%" y="815.50"></text></g><g><title>rustix::timespec::Timespec::as_c_int_millis::_{{closure}} (3,347,029 samples, 0.11%)</title><rect x="53.1525%" y="789" width="0.1050%" height="15" fill="rgb(253,83,4)" fg:x="1693895269" fg:w="3347029"/><text x="53.4025%" y="799.50"></text></g><g><title>core::num::&lt;impl i64&gt;::checked_add (1,674,493 samples, 0.05%)</title><rect x="53.2050%" y="773" width="0.0525%" height="15" fill="rgb(250,195,49)" fg:x="1695567805" fg:w="1674493"/><text x="53.4550%" y="783.50"></text></g><g><title>core::num::&lt;impl i64&gt;::overflowing_add (1,674,493 samples, 0.05%)</title><rect x="53.2050%" y="757" width="0.0525%" height="15" fill="rgb(241,192,25)" fg:x="1695567805" fg:w="1674493"/><text x="53.4550%" y="767.50"></text></g><g><title>silk_engine::App::event (3,359,077 samples, 0.11%)</title><rect x="53.2575%" y="821" width="0.1054%" height="15" fill="rgb(208,124,10)" fg:x="1697242298" fg:w="3359077"/><text x="53.5075%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;winit::event::WindowEvent&gt; (3,359,077 samples, 0.11%)</title><rect x="53.2575%" y="805" width="0.1054%" height="15" fill="rgb(222,33,0)" fg:x="1697242298" fg:w="3359077"/><text x="53.5075%" y="815.50"></text></g><g><title>silk_engine::gfx::font::Font::layout (3,592,323 samples, 0.11%)</title><rect x="53.3629%" y="821" width="0.1127%" height="15" fill="rgb(234,209,28)" fg:x="1700601375" fg:w="3592323"/><text x="53.6129%" y="831.50"></text></g><g><title>silk_engine::gfx::font::Font::kerning (3,592,323 samples, 0.11%)</title><rect x="53.3629%" y="805" width="0.1127%" height="15" fill="rgb(224,11,23)" fg:x="1700601375" fg:w="3592323"/><text x="53.6129%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (609,543 samples, 0.02%)</title><rect x="53.4756%" y="597" width="0.0191%" height="15" fill="rgb(232,99,1)" fg:x="1704193698" fg:w="609543"/><text x="53.7256%" y="607.50"></text></g><g><title>core::ops::function::FnOnce::call_once (609,543 samples, 0.02%)</title><rect x="53.4756%" y="581" width="0.0191%" height="15" fill="rgb(237,95,45)" fg:x="1704193698" fg:w="609543"/><text x="53.7256%" y="591.50"></text></g><g><title>std::backtrace_rs::symbolize::gimli::Cache::new (609,543 samples, 0.02%)</title><rect x="53.4756%" y="565" width="0.0191%" height="15" fill="rgb(208,109,11)" fg:x="1704193698" fg:w="609543"/><text x="53.7256%" y="575.50"></text></g><g><title>std::backtrace_rs::symbolize::gimli::libs_dl_iterate_phdr::native_libraries (609,543 samples, 0.02%)</title><rect x="53.4756%" y="549" width="0.0191%" height="15" fill="rgb(216,190,48)" fg:x="1704193698" fg:w="609543"/><text x="53.7256%" y="559.50"></text></g><g><title>std::backtrace_rs::symbolize::gimli::parse_running_mmaps::parse_maps (609,543 samples, 0.02%)</title><rect x="53.4756%" y="533" width="0.0191%" height="15" fill="rgb(251,171,36)" fg:x="1704193698" fg:w="609543"/><text x="53.7256%" y="543.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (609,543 samples, 0.02%)</title><rect x="53.4756%" y="517" width="0.0191%" height="15" fill="rgb(230,62,22)" fg:x="1704193698" fg:w="609543"/><text x="53.7256%" y="527.50"></text></g><g><title>&lt;std::backtrace_rs::symbolize::gimli::parse_running_mmaps::MapsEntry as core::str::traits::FromStr&gt;::from_str (609,543 samples, 0.02%)</title><rect x="53.4756%" y="501" width="0.0191%" height="15" fill="rgb(225,114,35)" fg:x="1704193698" fg:w="609543"/><text x="53.7256%" y="511.50"></text></g><g><title>&lt;std::backtrace_rs::symbolize::gimli::parse_running_mmaps::MapsEntry as core::str::traits::FromStr&gt;::from_str::_{{closure}} (609,543 samples, 0.02%)</title><rect x="53.4756%" y="485" width="0.0191%" height="15" fill="rgb(215,118,42)" fg:x="1704193698" fg:w="609543"/><text x="53.7256%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::from_str_radix (609,543 samples, 0.02%)</title><rect x="53.4756%" y="469" width="0.0191%" height="15" fill="rgb(243,119,21)" fg:x="1704193698" fg:w="609543"/><text x="53.7256%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::from_ascii_radix (609,543 samples, 0.02%)</title><rect x="53.4756%" y="453" width="0.0191%" height="15" fill="rgb(252,177,53)" fg:x="1704193698" fg:w="609543"/><text x="53.7256%" y="463.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (609,543 samples, 0.02%)</title><rect x="53.4756%" y="437" width="0.0191%" height="15" fill="rgb(237,209,29)" fg:x="1704193698" fg:w="609543"/><text x="53.7256%" y="447.50"></text></g><g><title>gimli::read::line::LineInstructions&lt;R&gt;::next_instruction (2,832,299 samples, 0.09%)</title><rect x="53.5844%" y="357" width="0.0889%" height="15" fill="rgb(212,65,23)" fg:x="1707660601" fg:w="2832299"/><text x="53.8344%" y="367.50"></text></g><g><title>gimli::read::line::LineInstruction&lt;R,Offset&gt;::parse (2,832,299 samples, 0.09%)</title><rect x="53.5844%" y="341" width="0.0889%" height="15" fill="rgb(230,222,46)" fg:x="1707660601" fg:w="2832299"/><text x="53.8344%" y="351.50"></text></g><g><title>gimli::read::reader::Reader::read_sleb128 (2,832,299 samples, 0.09%)</title><rect x="53.5844%" y="325" width="0.0889%" height="15" fill="rgb(215,135,32)" fg:x="1707660601" fg:w="2832299"/><text x="53.8344%" y="335.50"></text></g><g><title>gimli::leb128::read::signed (2,832,299 samples, 0.09%)</title><rect x="53.5844%" y="309" width="0.0889%" height="15" fill="rgb(246,101,22)" fg:x="1707660601" fg:w="2832299"/><text x="53.8344%" y="319.50"></text></g><g><title>addr2line::line::LazyLines::borrow (8,380,865 samples, 0.26%)</title><rect x="53.4947%" y="437" width="0.2630%" height="15" fill="rgb(206,107,13)" fg:x="1704803241" fg:w="8380865"/><text x="53.7447%" y="447.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (8,380,865 samples, 0.26%)</title><rect x="53.4947%" y="421" width="0.2630%" height="15" fill="rgb(250,100,44)" fg:x="1704803241" fg:w="8380865"/><text x="53.7447%" y="431.50"></text></g><g><title>addr2line::line::LazyLines::borrow::_{{closure}} (8,380,865 samples, 0.26%)</title><rect x="53.4947%" y="405" width="0.2630%" height="15" fill="rgb(231,147,38)" fg:x="1704803241" fg:w="8380865"/><text x="53.7447%" y="415.50"></text></g><g><title>addr2line::line::Lines::parse (8,380,865 samples, 0.26%)</title><rect x="53.4947%" y="389" width="0.2630%" height="15" fill="rgb(229,8,40)" fg:x="1704803241" fg:w="8380865"/><text x="53.7447%" y="399.50"></text></g><g><title>gimli::read::line::LineRows&lt;R,Program,Offset&gt;::next_row (5,523,505 samples, 0.17%)</title><rect x="53.5844%" y="373" width="0.1733%" height="15" fill="rgb(221,135,30)" fg:x="1707660601" fg:w="5523505"/><text x="53.8344%" y="383.50"></text></g><g><title>gimli::read::line::LineRow::execute (2,691,206 samples, 0.08%)</title><rect x="53.6733%" y="357" width="0.0844%" height="15" fill="rgb(249,193,18)" fg:x="1710492900" fg:w="2691206"/><text x="53.9233%" y="367.50"></text></g><g><title>[unknown] (5,580,017 samples, 0.18%)</title><rect x="53.7577%" y="421" width="0.1751%" height="15" fill="rgb(209,133,39)" fg:x="1713184106" fg:w="5580017"/><text x="54.0077%" y="431.50"></text></g><g><title>gimli::read::dwarf::Unit&lt;R&gt;::new (5,580,017 samples, 0.18%)</title><rect x="53.7577%" y="405" width="0.1751%" height="15" fill="rgb(232,100,14)" fg:x="1713184106" fg:w="5580017"/><text x="54.0077%" y="415.50"></text></g><g><title>gimli::read::dwarf::Dwarf&lt;R&gt;::abbreviations (5,580,017 samples, 0.18%)</title><rect x="53.7577%" y="389" width="0.1751%" height="15" fill="rgb(224,185,1)" fg:x="1713184106" fg:w="5580017"/><text x="54.0077%" y="399.50"></text></g><g><title>gimli::read::abbrev::AbbreviationsCache::get (5,580,017 samples, 0.18%)</title><rect x="53.7577%" y="373" width="0.1751%" height="15" fill="rgb(223,139,8)" fg:x="1713184106" fg:w="5580017"/><text x="54.0077%" y="383.50"></text></g><g><title>gimli::read::abbrev::DebugAbbrev&lt;R&gt;::abbreviations (5,580,017 samples, 0.18%)</title><rect x="53.7577%" y="357" width="0.1751%" height="15" fill="rgb(232,213,38)" fg:x="1713184106" fg:w="5580017"/><text x="54.0077%" y="367.50"></text></g><g><title>gimli::read::abbrev::Abbreviations::parse (5,580,017 samples, 0.18%)</title><rect x="53.7577%" y="341" width="0.1751%" height="15" fill="rgb(207,94,22)" fg:x="1713184106" fg:w="5580017"/><text x="54.0077%" y="351.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::parse (5,580,017 samples, 0.18%)</title><rect x="53.7577%" y="325" width="0.1751%" height="15" fill="rgb(219,183,54)" fg:x="1713184106" fg:w="5580017"/><text x="54.0077%" y="335.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::parse_attributes (5,580,017 samples, 0.18%)</title><rect x="53.7577%" y="309" width="0.1751%" height="15" fill="rgb(216,185,54)" fg:x="1713184106" fg:w="5580017"/><text x="54.0077%" y="319.50"></text></g><g><title>gimli::read::abbrev::AttributeSpecification::parse (5,580,017 samples, 0.18%)</title><rect x="53.7577%" y="293" width="0.1751%" height="15" fill="rgb(254,217,39)" fg:x="1713184106" fg:w="5580017"/><text x="54.0077%" y="303.50"></text></g><g><title>gimli::read::abbrev::Attributes::push (2,767,954 samples, 0.09%)</title><rect x="53.9328%" y="421" width="0.0869%" height="15" fill="rgb(240,178,23)" fg:x="1718764123" fg:w="2767954"/><text x="54.1828%" y="431.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::parse_attributes (5,689,365 samples, 0.18%)</title><rect x="54.0197%" y="325" width="0.1785%" height="15" fill="rgb(218,11,47)" fg:x="1721532077" fg:w="5689365"/><text x="54.2697%" y="335.50"></text></g><g><title>gimli::read::abbrev::AttributeSpecification::parse (5,689,365 samples, 0.18%)</title><rect x="54.0197%" y="309" width="0.1785%" height="15" fill="rgb(218,51,51)" fg:x="1721532077" fg:w="5689365"/><text x="54.2697%" y="319.50"></text></g><g><title>gimli::read::reader::Reader::read_uleb128_u16 (5,689,365 samples, 0.18%)</title><rect x="54.0197%" y="293" width="0.1785%" height="15" fill="rgb(238,126,27)" fg:x="1721532077" fg:w="5689365"/><text x="54.2697%" y="303.50"></text></g><g><title>gimli::leb128::read::u16 (5,689,365 samples, 0.18%)</title><rect x="54.0197%" y="277" width="0.1785%" height="15" fill="rgb(249,202,22)" fg:x="1721532077" fg:w="5689365"/><text x="54.2697%" y="287.50"></text></g><g><title>gimli::read::reader::Reader::read_u8 (807,344 samples, 0.03%)</title><rect x="54.1729%" y="261" width="0.0253%" height="15" fill="rgb(254,195,49)" fg:x="1726414098" fg:w="807344"/><text x="54.4229%" y="271.50"></text></g><g><title>gimli::read::reader::Reader::read_u8_array (807,344 samples, 0.03%)</title><rect x="54.1729%" y="245" width="0.0253%" height="15" fill="rgb(208,123,14)" fg:x="1726414098" fg:w="807344"/><text x="54.4229%" y="255.50"></text></g><g><title>&lt;gimli::read::endian_slice::EndianSlice&lt;Endian&gt; as gimli::read::reader::Reader&gt;::read_slice (807,344 samples, 0.03%)</title><rect x="54.1729%" y="229" width="0.0253%" height="15" fill="rgb(224,200,8)" fg:x="1726414098" fg:w="807344"/><text x="54.4229%" y="239.50"></text></g><g><title>gimli::read::endian_slice::EndianSlice&lt;Endian&gt;::read_slice (807,344 samples, 0.03%)</title><rect x="54.1729%" y="213" width="0.0253%" height="15" fill="rgb(217,61,36)" fg:x="1726414098" fg:w="807344"/><text x="54.4229%" y="223.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (807,344 samples, 0.03%)</title><rect x="54.1729%" y="197" width="0.0253%" height="15" fill="rgb(206,35,45)" fg:x="1726414098" fg:w="807344"/><text x="54.4229%" y="207.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (807,344 samples, 0.03%)</title><rect x="54.1729%" y="181" width="0.0253%" height="15" fill="rgb(217,65,33)" fg:x="1726414098" fg:w="807344"/><text x="54.4229%" y="191.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (807,344 samples, 0.03%)</title><rect x="54.1729%" y="165" width="0.0253%" height="15" fill="rgb(222,158,48)" fg:x="1726414098" fg:w="807344"/><text x="54.4229%" y="175.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (807,344 samples, 0.03%)</title><rect x="54.1729%" y="149" width="0.0253%" height="15" fill="rgb(254,2,54)" fg:x="1726414098" fg:w="807344"/><text x="54.4229%" y="159.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (807,344 samples, 0.03%)</title><rect x="54.1729%" y="133" width="0.0253%" height="15" fill="rgb(250,143,38)" fg:x="1726414098" fg:w="807344"/><text x="54.4229%" y="143.50"></text></g><g><title>gimli::read::dwarf::Dwarf&lt;R&gt;::abbreviations (16,798,693 samples, 0.53%)</title><rect x="54.0197%" y="405" width="0.5271%" height="15" fill="rgb(248,25,0)" fg:x="1721532077" fg:w="16798693"/><text x="54.2697%" y="415.50"></text></g><g><title>gimli::read::abbrev::AbbreviationsCache::get (16,798,693 samples, 0.53%)</title><rect x="54.0197%" y="389" width="0.5271%" height="15" fill="rgb(206,152,27)" fg:x="1721532077" fg:w="16798693"/><text x="54.2697%" y="399.50"></text></g><g><title>gimli::read::abbrev::DebugAbbrev&lt;R&gt;::abbreviations (16,798,693 samples, 0.53%)</title><rect x="54.0197%" y="373" width="0.5271%" height="15" fill="rgb(240,77,30)" fg:x="1721532077" fg:w="16798693"/><text x="54.2697%" y="383.50"></text></g><g><title>gimli::read::abbrev::Abbreviations::parse (16,798,693 samples, 0.53%)</title><rect x="54.0197%" y="357" width="0.5271%" height="15" fill="rgb(231,5,3)" fg:x="1721532077" fg:w="16798693"/><text x="54.2697%" y="367.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::parse (16,798,693 samples, 0.53%)</title><rect x="54.0197%" y="341" width="0.5271%" height="15" fill="rgb(207,226,32)" fg:x="1721532077" fg:w="16798693"/><text x="54.2697%" y="351.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::parse_tag (11,109,328 samples, 0.35%)</title><rect x="54.1982%" y="325" width="0.3486%" height="15" fill="rgb(222,207,47)" fg:x="1727221442" fg:w="11109328"/><text x="54.4482%" y="335.50"></text></g><g><title>gimli::read::reader::Reader::read_uleb128_u16 (5,543,291 samples, 0.17%)</title><rect x="54.3729%" y="309" width="0.1739%" height="15" fill="rgb(229,115,45)" fg:x="1732787479" fg:w="5543291"/><text x="54.6229%" y="319.50"></text></g><g><title>gimli::leb128::read::u16 (5,543,291 samples, 0.17%)</title><rect x="54.3729%" y="293" width="0.1739%" height="15" fill="rgb(224,191,6)" fg:x="1732787479" fg:w="5543291"/><text x="54.6229%" y="303.50"></text></g><g><title>gimli::read::dwarf::Unit&lt;R&gt;::new (25,176,241 samples, 0.79%)</title><rect x="54.0197%" y="421" width="0.7900%" height="15" fill="rgb(230,227,24)" fg:x="1721532077" fg:w="25176241"/><text x="54.2697%" y="431.50"></text></g><g><title>gimli::read::dwarf::Unit&lt;R&gt;::new_with_abbreviations (8,377,548 samples, 0.26%)</title><rect x="54.5468%" y="405" width="0.2629%" height="15" fill="rgb(228,80,19)" fg:x="1738330770" fg:w="8377548"/><text x="54.7968%" y="415.50"></text></g><g><title>gimli::read::line::DebugLine&lt;R&gt;::program (8,377,548 samples, 0.26%)</title><rect x="54.5468%" y="389" width="0.2629%" height="15" fill="rgb(247,229,0)" fg:x="1738330770" fg:w="8377548"/><text x="54.7968%" y="399.50"></text></g><g><title>gimli::read::line::LineProgramHeader&lt;R,Offset&gt;::parse (8,377,548 samples, 0.26%)</title><rect x="54.5468%" y="373" width="0.2629%" height="15" fill="rgb(237,194,15)" fg:x="1738330770" fg:w="8377548"/><text x="54.7968%" y="383.50"></text></g><g><title>gimli::read::reader::Reader::read_null_terminated_slice (8,377,548 samples, 0.26%)</title><rect x="54.5468%" y="357" width="0.2629%" height="15" fill="rgb(219,203,20)" fg:x="1738330770" fg:w="8377548"/><text x="54.7968%" y="367.50"></text></g><g><title>&lt;gimli::read::endian_slice::EndianSlice&lt;Endian&gt; as gimli::read::reader::Reader&gt;::find (8,377,548 samples, 0.26%)</title><rect x="54.5468%" y="341" width="0.2629%" height="15" fill="rgb(234,128,8)" fg:x="1738330770" fg:w="8377548"/><text x="54.7968%" y="351.50"></text></g><g><title>gimli::read::endian_slice::EndianSlice&lt;Endian&gt;::find (8,377,548 samples, 0.26%)</title><rect x="54.5468%" y="325" width="0.2629%" height="15" fill="rgb(248,202,8)" fg:x="1738330770" fg:w="8377548"/><text x="54.7968%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (8,377,548 samples, 0.26%)</title><rect x="54.5468%" y="309" width="0.2629%" height="15" fill="rgb(206,104,37)" fg:x="1738330770" fg:w="8377548"/><text x="54.7968%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,316,681 samples, 0.14%)</title><rect x="54.6742%" y="293" width="0.1355%" height="15" fill="rgb(223,8,27)" fg:x="1742391637" fg:w="4316681"/><text x="54.9242%" y="303.50"></text></g><g><title>std::backtrace_rs::symbolize::gimli::Context::new (44,005,524 samples, 1.38%)</title><rect x="53.4947%" y="501" width="1.3808%" height="15" fill="rgb(216,217,28)" fg:x="1704803241" fg:w="44005524"/><text x="53.7447%" y="511.50"></text></g><g><title>addr2line::Context&lt;R&gt;::from_dwarf (44,005,524 samples, 1.38%)</title><rect x="53.4947%" y="485" width="1.3808%" height="15" fill="rgb(249,199,1)" fg:x="1704803241" fg:w="44005524"/><text x="53.7447%" y="495.50"></text></g><g><title>addr2line::Context&lt;R&gt;::from_arc_dwarf (44,005,524 samples, 1.38%)</title><rect x="53.4947%" y="469" width="1.3808%" height="15" fill="rgb(240,85,17)" fg:x="1704803241" fg:w="44005524"/><text x="53.7447%" y="479.50"></text></g><g><title>addr2line::unit::ResUnits&lt;R&gt;::parse (44,005,524 samples, 1.38%)</title><rect x="53.4947%" y="453" width="1.3808%" height="15" fill="rgb(206,108,45)" fg:x="1704803241" fg:w="44005524"/><text x="53.7447%" y="463.50"></text></g><g><title>gimli::read::dwarf::Dwarf&lt;R&gt;::unit (35,624,659 samples, 1.12%)</title><rect x="53.7577%" y="437" width="1.1179%" height="15" fill="rgb(245,210,41)" fg:x="1713184106" fg:w="35624659"/><text x="54.0077%" y="447.50"></text></g><g><title>gimli::read::line::FileEntry&lt;R,Offset&gt;::parse (2,100,447 samples, 0.07%)</title><rect x="54.8097%" y="421" width="0.0659%" height="15" fill="rgb(206,13,37)" fg:x="1746708318" fg:w="2100447"/><text x="55.0597%" y="431.50"></text></g><g><title>gimli::read::reader::Reader::read_uleb128 (2,100,447 samples, 0.07%)</title><rect x="54.8097%" y="405" width="0.0659%" height="15" fill="rgb(250,61,18)" fg:x="1746708318" fg:w="2100447"/><text x="55.0597%" y="415.50"></text></g><g><title>gimli::leb128::read::unsigned (2,100,447 samples, 0.07%)</title><rect x="54.8097%" y="389" width="0.0659%" height="15" fill="rgb(235,172,48)" fg:x="1746708318" fg:w="2100447"/><text x="55.0597%" y="399.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general (3,733,286 samples, 0.12%)</title><rect x="54.8756%" y="389" width="0.1171%" height="15" fill="rgb(249,201,17)" fg:x="1748808765" fg:w="3733286"/><text x="55.1256%" y="399.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (3,733,286 samples, 0.12%)</title><rect x="54.8756%" y="373" width="0.1171%" height="15" fill="rgb(219,208,6)" fg:x="1748808765" fg:w="3733286"/><text x="55.1256%" y="383.50"></text></g><g><title>core::slice::sort::shared::smallsort::bidirectional_merge (3,733,286 samples, 0.12%)</title><rect x="54.8756%" y="357" width="0.1171%" height="15" fill="rgb(248,31,23)" fg:x="1748808765" fg:w="3733286"/><text x="55.1256%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_add (3,733,286 samples, 0.12%)</title><rect x="54.8756%" y="341" width="0.1171%" height="15" fill="rgb(245,15,42)" fg:x="1748808765" fg:w="3733286"/><text x="55.1256%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::wrapping_offset (3,733,286 samples, 0.12%)</title><rect x="54.8756%" y="325" width="0.1171%" height="15" fill="rgb(222,217,39)" fg:x="1748808765" fg:w="3733286"/><text x="55.1256%" y="335.50"></text></g><g><title>std::backtrace_rs::symbolize::gimli::Cache::mapping_for_lib (48,512,033 samples, 1.52%)</title><rect x="53.4947%" y="581" width="1.5223%" height="15" fill="rgb(210,219,27)" fg:x="1704803241" fg:w="48512033"/><text x="53.7447%" y="591.50"></text></g><g><title>std::backtrace_rs::symbolize::gimli::create_mapping (48,512,033 samples, 1.52%)</title><rect x="53.4947%" y="565" width="1.5223%" height="15" fill="rgb(252,166,36)" fg:x="1704803241" fg:w="48512033"/><text x="53.7447%" y="575.50"></text></g><g><title>std::backtrace_rs::symbolize::gimli::elf::&lt;impl std::backtrace_rs::symbolize::gimli::Mapping&gt;::new (48,512,033 samples, 1.52%)</title><rect x="53.4947%" y="549" width="1.5223%" height="15" fill="rgb(245,132,34)" fg:x="1704803241" fg:w="48512033"/><text x="53.7447%" y="559.50"></text></g><g><title>std::backtrace_rs::symbolize::gimli::Mapping::mk_or_other (48,512,033 samples, 1.52%)</title><rect x="53.4947%" y="533" width="1.5223%" height="15" fill="rgb(236,54,3)" fg:x="1704803241" fg:w="48512033"/><text x="53.7447%" y="543.50"></text></g><g><title>std::backtrace_rs::symbolize::gimli::elf::_&lt;impl std::backtrace_rs::symbolize::gimli::Mapping&gt;::new::_{{closure}} (48,512,033 samples, 1.52%)</title><rect x="53.4947%" y="517" width="1.5223%" height="15" fill="rgb(241,173,43)" fg:x="1704803241" fg:w="48512033"/><text x="53.7447%" y="527.50"></text></g><g><title>std::backtrace_rs::symbolize::gimli::elf::Object::parse (4,506,509 samples, 0.14%)</title><rect x="54.8756%" y="501" width="0.1414%" height="15" fill="rgb(215,190,9)" fg:x="1748808765" fg:w="4506509"/><text x="55.1256%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key (4,506,509 samples, 0.14%)</title><rect x="54.8756%" y="485" width="0.1414%" height="15" fill="rgb(242,101,16)" fg:x="1748808765" fg:w="4506509"/><text x="55.1256%" y="495.50"></text></g><g><title>core::slice::sort::unstable::sort (4,506,509 samples, 0.14%)</title><rect x="54.8756%" y="469" width="0.1414%" height="15" fill="rgb(223,190,21)" fg:x="1748808765" fg:w="4506509"/><text x="55.1256%" y="479.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (4,506,509 samples, 0.14%)</title><rect x="54.8756%" y="453" width="0.1414%" height="15" fill="rgb(215,228,25)" fg:x="1748808765" fg:w="4506509"/><text x="55.1256%" y="463.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (4,506,509 samples, 0.14%)</title><rect x="54.8756%" y="437" width="0.1414%" height="15" fill="rgb(225,36,22)" fg:x="1748808765" fg:w="4506509"/><text x="55.1256%" y="447.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (4,506,509 samples, 0.14%)</title><rect x="54.8756%" y="421" width="0.1414%" height="15" fill="rgb(251,106,46)" fg:x="1748808765" fg:w="4506509"/><text x="55.1256%" y="431.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (4,506,509 samples, 0.14%)</title><rect x="54.8756%" y="405" width="0.1414%" height="15" fill="rgb(208,90,1)" fg:x="1748808765" fg:w="4506509"/><text x="55.1256%" y="415.50"></text></g><g><title>core::slice::sort::unstable::quicksort::quicksort (773,223 samples, 0.02%)</title><rect x="54.9927%" y="389" width="0.0243%" height="15" fill="rgb(243,10,4)" fg:x="1752542051" fg:w="773223"/><text x="55.2427%" y="399.50"></text></g><g><title>[unknown] (773,223 samples, 0.02%)</title><rect x="54.9927%" y="373" width="0.0243%" height="15" fill="rgb(212,137,27)" fg:x="1752542051" fg:w="773223"/><text x="55.2427%" y="383.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general (773,223 samples, 0.02%)</title><rect x="54.9927%" y="357" width="0.0243%" height="15" fill="rgb(231,220,49)" fg:x="1752542051" fg:w="773223"/><text x="55.2427%" y="367.50"></text></g><g><title>core::slice::sort::shared::smallsort::small_sort_general_with_scratch (773,223 samples, 0.02%)</title><rect x="54.9927%" y="341" width="0.0243%" height="15" fill="rgb(237,96,20)" fg:x="1752542051" fg:w="773223"/><text x="55.2427%" y="351.50"></text></g><g><title>core::slice::sort::shared::smallsort::bidirectional_merge (773,223 samples, 0.02%)</title><rect x="54.9927%" y="325" width="0.0243%" height="15" fill="rgb(239,229,30)" fg:x="1752542051" fg:w="773223"/><text x="55.2427%" y="335.50"></text></g><g><title>core::slice::sort::shared::smallsort::merge_up (773,223 samples, 0.02%)</title><rect x="54.9927%" y="309" width="0.0243%" height="15" fill="rgb(219,65,33)" fg:x="1752542051" fg:w="773223"/><text x="55.2427%" y="319.50"></text></g><g><title>core::ptr::copy_nonoverlapping (773,223 samples, 0.02%)</title><rect x="54.9927%" y="293" width="0.0243%" height="15" fill="rgb(243,134,7)" fg:x="1752542051" fg:w="773223"/><text x="55.2427%" y="303.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (3,689,528 samples, 0.12%)</title><rect x="55.0170%" y="309" width="0.1158%" height="15" fill="rgb(216,177,54)" fg:x="1753315274" fg:w="3689528"/><text x="55.2670%" y="319.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (3,689,528 samples, 0.12%)</title><rect x="55.0170%" y="293" width="0.1158%" height="15" fill="rgb(211,160,20)" fg:x="1753315274" fg:w="3689528"/><text x="55.2670%" y="303.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (3,689,528 samples, 0.12%)</title><rect x="55.0170%" y="277" width="0.1158%" height="15" fill="rgb(239,85,39)" fg:x="1753315274" fg:w="3689528"/><text x="55.2670%" y="287.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (3,689,528 samples, 0.12%)</title><rect x="55.0170%" y="261" width="0.1158%" height="15" fill="rgb(232,125,22)" fg:x="1753315274" fg:w="3689528"/><text x="55.2670%" y="271.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (3,689,528 samples, 0.12%)</title><rect x="55.0170%" y="245" width="0.1158%" height="15" fill="rgb(244,57,34)" fg:x="1753315274" fg:w="3689528"/><text x="55.2670%" y="255.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (3,689,528 samples, 0.12%)</title><rect x="55.0170%" y="229" width="0.1158%" height="15" fill="rgb(214,203,32)" fg:x="1753315274" fg:w="3689528"/><text x="55.2670%" y="239.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (3,689,528 samples, 0.12%)</title><rect x="55.0170%" y="213" width="0.1158%" height="15" fill="rgb(207,58,43)" fg:x="1753315274" fg:w="3689528"/><text x="55.2670%" y="223.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (3,689,528 samples, 0.12%)</title><rect x="55.0170%" y="197" width="0.1158%" height="15" fill="rgb(215,193,15)" fg:x="1753315274" fg:w="3689528"/><text x="55.2670%" y="207.50"></text></g><g><title>addr2line::function::name_attr (3,689,528 samples, 0.12%)</title><rect x="55.0170%" y="181" width="0.1158%" height="15" fill="rgb(232,15,44)" fg:x="1753315274" fg:w="3689528"/><text x="55.2670%" y="191.50"></text></g><g><title>addr2line::function::name_entry (3,689,528 samples, 0.12%)</title><rect x="55.0170%" y="165" width="0.1158%" height="15" fill="rgb(212,3,48)" fg:x="1753315274" fg:w="3689528"/><text x="55.2670%" y="175.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::read_abbreviation (3,689,528 samples, 0.12%)</title><rect x="55.0170%" y="149" width="0.1158%" height="15" fill="rgb(218,128,7)" fg:x="1753315274" fg:w="3689528"/><text x="55.2670%" y="159.50"></text></g><g><title>gimli::read::reader::Reader::read_uleb128 (3,689,528 samples, 0.12%)</title><rect x="55.0170%" y="133" width="0.1158%" height="15" fill="rgb(226,216,39)" fg:x="1753315274" fg:w="3689528"/><text x="55.2670%" y="143.50"></text></g><g><title>gimli::leb128::read::unsigned (3,689,528 samples, 0.12%)</title><rect x="55.0170%" y="117" width="0.1158%" height="15" fill="rgb(243,47,51)" fg:x="1753315274" fg:w="3689528"/><text x="55.2670%" y="127.50"></text></g><g><title>gimli::read::reader::Reader::read_u8 (3,689,528 samples, 0.12%)</title><rect x="55.0170%" y="101" width="0.1158%" height="15" fill="rgb(241,183,40)" fg:x="1753315274" fg:w="3689528"/><text x="55.2670%" y="111.50"></text></g><g><title>gimli::read::reader::Reader::read_u8_array (3,689,528 samples, 0.12%)</title><rect x="55.0170%" y="85" width="0.1158%" height="15" fill="rgb(231,217,32)" fg:x="1753315274" fg:w="3689528"/><text x="55.2670%" y="95.50"></text></g><g><title>&lt;gimli::read::endian_slice::EndianSlice&lt;Endian&gt; as gimli::read::reader::Reader&gt;::read_slice (3,689,528 samples, 0.12%)</title><rect x="55.0170%" y="69" width="0.1158%" height="15" fill="rgb(229,61,38)" fg:x="1753315274" fg:w="3689528"/><text x="55.2670%" y="79.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (3,689,528 samples, 0.12%)</title><rect x="55.0170%" y="53" width="0.1158%" height="15" fill="rgb(225,210,5)" fg:x="1753315274" fg:w="3689528"/><text x="55.2670%" y="63.50"></text></g><g><title>core::ptr::copy_nonoverlapping (3,689,528 samples, 0.12%)</title><rect x="55.0170%" y="37" width="0.1158%" height="15" fill="rgb(231,79,45)" fg:x="1753315274" fg:w="3689528"/><text x="55.2670%" y="47.50"></text></g><g><title>addr2line::function::LazyFunction&lt;R&gt;::borrow (7,082,844 samples, 0.22%)</title><rect x="55.0170%" y="501" width="0.2223%" height="15" fill="rgb(224,100,7)" fg:x="1753315274" fg:w="7082844"/><text x="55.2670%" y="511.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (7,082,844 samples, 0.22%)</title><rect x="55.0170%" y="485" width="0.2223%" height="15" fill="rgb(241,198,18)" fg:x="1753315274" fg:w="7082844"/><text x="55.2670%" y="495.50"></text></g><g><title>addr2line::function::LazyFunction&lt;R&gt;::borrow::_{{closure}} (7,082,844 samples, 0.22%)</title><rect x="55.0170%" y="469" width="0.2223%" height="15" fill="rgb(252,97,53)" fg:x="1753315274" fg:w="7082844"/><text x="55.2670%" y="479.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse (7,082,844 samples, 0.22%)</title><rect x="55.0170%" y="453" width="0.2223%" height="15" fill="rgb(220,88,7)" fg:x="1753315274" fg:w="7082844"/><text x="55.2670%" y="463.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (7,082,844 samples, 0.22%)</title><rect x="55.0170%" y="437" width="0.2223%" height="15" fill="rgb(213,176,14)" fg:x="1753315274" fg:w="7082844"/><text x="55.2670%" y="447.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (7,082,844 samples, 0.22%)</title><rect x="55.0170%" y="421" width="0.2223%" height="15" fill="rgb(246,73,7)" fg:x="1753315274" fg:w="7082844"/><text x="55.2670%" y="431.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (7,082,844 samples, 0.22%)</title><rect x="55.0170%" y="405" width="0.2223%" height="15" fill="rgb(245,64,36)" fg:x="1753315274" fg:w="7082844"/><text x="55.2670%" y="415.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (7,082,844 samples, 0.22%)</title><rect x="55.0170%" y="389" width="0.2223%" height="15" fill="rgb(245,80,10)" fg:x="1753315274" fg:w="7082844"/><text x="55.2670%" y="399.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (7,082,844 samples, 0.22%)</title><rect x="55.0170%" y="373" width="0.2223%" height="15" fill="rgb(232,107,50)" fg:x="1753315274" fg:w="7082844"/><text x="55.2670%" y="383.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (7,082,844 samples, 0.22%)</title><rect x="55.0170%" y="357" width="0.2223%" height="15" fill="rgb(253,3,0)" fg:x="1753315274" fg:w="7082844"/><text x="55.2670%" y="367.50"></text></g><g><title>addr2line::function::Function&lt;R&gt;::parse_children (7,082,844 samples, 0.22%)</title><rect x="55.0170%" y="341" width="0.2223%" height="15" fill="rgb(212,99,53)" fg:x="1753315274" fg:w="7082844"/><text x="55.2670%" y="351.50"></text></g><g><title>addr2line::function::InlinedFunction&lt;R&gt;::parse (7,082,844 samples, 0.22%)</title><rect x="55.0170%" y="325" width="0.2223%" height="15" fill="rgb(249,111,54)" fg:x="1753315274" fg:w="7082844"/><text x="55.2670%" y="335.50"></text></g><g><title>addr2line::function::name_attr (3,393,316 samples, 0.11%)</title><rect x="55.1328%" y="309" width="0.1065%" height="15" fill="rgb(249,55,30)" fg:x="1757004802" fg:w="3393316"/><text x="55.3828%" y="319.50"></text></g><g><title>addr2line::function::name_entry (3,393,316 samples, 0.11%)</title><rect x="55.1328%" y="293" width="0.1065%" height="15" fill="rgb(237,47,42)" fg:x="1757004802" fg:w="3393316"/><text x="55.3828%" y="303.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::read_abbreviation (3,393,316 samples, 0.11%)</title><rect x="55.1328%" y="277" width="0.1065%" height="15" fill="rgb(211,20,18)" fg:x="1757004802" fg:w="3393316"/><text x="55.3828%" y="287.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::next_offset (3,365,021 samples, 0.11%)</title><rect x="55.3400%" y="437" width="0.1056%" height="15" fill="rgb(231,203,46)" fg:x="1763607554" fg:w="3365021"/><text x="55.5900%" y="447.50"></text></g><g><title>gimli::read::unit::UnitHeader&lt;R,Offset&gt;::header_size (3,365,021 samples, 0.11%)</title><rect x="55.3400%" y="421" width="0.1056%" height="15" fill="rgb(237,142,3)" fg:x="1763607554" fg:w="3365021"/><text x="55.5900%" y="431.50"></text></g><g><title>gimli::read::unit::UnitHeader&lt;R,Offset&gt;::length_including_self (3,365,021 samples, 0.11%)</title><rect x="55.3400%" y="405" width="0.1056%" height="15" fill="rgb(241,107,1)" fg:x="1763607554" fg:w="3365021"/><text x="55.5900%" y="415.50"></text></g><g><title>gimli::common::Format::initial_length_size (3,365,021 samples, 0.11%)</title><rect x="55.3400%" y="389" width="0.1056%" height="15" fill="rgb(229,83,13)" fg:x="1763607554" fg:w="3365021"/><text x="55.5900%" y="399.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::read_abbreviation (10,347,743 samples, 0.32%)</title><rect x="55.4456%" y="437" width="0.3247%" height="15" fill="rgb(241,91,40)" fg:x="1766972575" fg:w="10347743"/><text x="55.6956%" y="447.50"></text></g><g><title>gimli::read::abbrev::Abbreviations::get (2,959,311 samples, 0.09%)</title><rect x="55.6774%" y="421" width="0.0929%" height="15" fill="rgb(225,3,45)" fg:x="1774361007" fg:w="2959311"/><text x="55.9274%" y="431.50"></text></g><g><title>addr2line::function::LazyFunctions&lt;R&gt;::borrow (18,983,249 samples, 0.60%)</title><rect x="55.2393%" y="501" width="0.5957%" height="15" fill="rgb(244,223,14)" fg:x="1760398118" fg:w="18983249"/><text x="55.4893%" y="511.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (18,983,249 samples, 0.60%)</title><rect x="55.2393%" y="485" width="0.5957%" height="15" fill="rgb(224,124,37)" fg:x="1760398118" fg:w="18983249"/><text x="55.4893%" y="495.50"></text></g><g><title>addr2line::function::LazyFunctions&lt;R&gt;::borrow::_{{closure}} (18,983,249 samples, 0.60%)</title><rect x="55.2393%" y="469" width="0.5957%" height="15" fill="rgb(251,171,30)" fg:x="1760398118" fg:w="18983249"/><text x="55.4893%" y="479.50"></text></g><g><title>addr2line::function::Functions&lt;R&gt;::parse (18,983,249 samples, 0.60%)</title><rect x="55.2393%" y="453" width="0.5957%" height="15" fill="rgb(236,46,54)" fg:x="1760398118" fg:w="18983249"/><text x="55.4893%" y="463.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::read_attribute (2,061,049 samples, 0.06%)</title><rect x="55.7703%" y="437" width="0.0647%" height="15" fill="rgb(245,213,5)" fg:x="1777320318" fg:w="2061049"/><text x="56.0203%" y="447.50"></text></g><g><title>gimli::read::unit::parse_attribute (2,061,049 samples, 0.06%)</title><rect x="55.7703%" y="421" width="0.0647%" height="15" fill="rgb(230,144,27)" fg:x="1777320318" fg:w="2061049"/><text x="56.0203%" y="431.50"></text></g><g><title>gimli::read::line::LineInstructions&lt;R&gt;::next_instruction (2,804,480 samples, 0.09%)</title><rect x="55.8349%" y="389" width="0.0880%" height="15" fill="rgb(220,86,6)" fg:x="1779381367" fg:w="2804480"/><text x="56.0849%" y="399.50"></text></g><g><title>gimli::read::line::LineInstruction&lt;R,Offset&gt;::parse (2,804,480 samples, 0.09%)</title><rect x="55.8349%" y="373" width="0.0880%" height="15" fill="rgb(240,20,13)" fg:x="1779381367" fg:w="2804480"/><text x="56.0849%" y="383.50"></text></g><g><title>gimli::read::reader::Reader::read_u8 (2,804,480 samples, 0.09%)</title><rect x="55.8349%" y="357" width="0.0880%" height="15" fill="rgb(217,89,34)" fg:x="1779381367" fg:w="2804480"/><text x="56.0849%" y="367.50"></text></g><g><title>gimli::read::reader::Reader::read_u8_array (2,804,480 samples, 0.09%)</title><rect x="55.8349%" y="341" width="0.0880%" height="15" fill="rgb(229,13,5)" fg:x="1779381367" fg:w="2804480"/><text x="56.0849%" y="351.50"></text></g><g><title>&lt;gimli::read::endian_slice::EndianSlice&lt;Endian&gt; as gimli::read::reader::Reader&gt;::read_slice (2,804,480 samples, 0.09%)</title><rect x="55.8349%" y="325" width="0.0880%" height="15" fill="rgb(244,67,35)" fg:x="1779381367" fg:w="2804480"/><text x="56.0849%" y="335.50"></text></g><g><title>gimli::read::endian_slice::EndianSlice&lt;Endian&gt;::read_slice (2,804,480 samples, 0.09%)</title><rect x="55.8349%" y="309" width="0.0880%" height="15" fill="rgb(221,40,2)" fg:x="1779381367" fg:w="2804480"/><text x="56.0849%" y="319.50"></text></g><g><title>&lt;std::sync::lazy_lock::LazyLock&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (80,453,474 samples, 2.52%)</title><rect x="53.4756%" y="757" width="2.5245%" height="15" fill="rgb(237,157,21)" fg:x="1704193698" fg:w="80453474"/><text x="53.7256%" y="767.50">&lt;s..</text></g><g><title>std::sync::lazy_lock::LazyLock&lt;T,F&gt;::force (80,453,474 samples, 2.52%)</title><rect x="53.4756%" y="741" width="2.5245%" height="15" fill="rgb(222,94,11)" fg:x="1704193698" fg:w="80453474"/><text x="53.7256%" y="751.50">st..</text></g><g><title>std::sync::poison::once::Once::call_once (80,453,474 samples, 2.52%)</title><rect x="53.4756%" y="725" width="2.5245%" height="15" fill="rgb(249,113,6)" fg:x="1704193698" fg:w="80453474"/><text x="53.7256%" y="735.50">st..</text></g><g><title>std::sys::sync::once::futex::Once::call (80,453,474 samples, 2.52%)</title><rect x="53.4756%" y="709" width="2.5245%" height="15" fill="rgb(238,137,36)" fg:x="1704193698" fg:w="80453474"/><text x="53.7256%" y="719.50">st..</text></g><g><title>std::sync::poison::once::Once::call_once::_{{closure}} (80,453,474 samples, 2.52%)</title><rect x="53.4756%" y="693" width="2.5245%" height="15" fill="rgb(210,102,26)" fg:x="1704193698" fg:w="80453474"/><text x="53.7256%" y="703.50">st..</text></g><g><title>std::sync::lazy_lock::LazyLock&lt;T,F&gt;::force::_{{closure}} (80,453,474 samples, 2.52%)</title><rect x="53.4756%" y="677" width="2.5245%" height="15" fill="rgb(218,30,30)" fg:x="1704193698" fg:w="80453474"/><text x="53.7256%" y="687.50">st..</text></g><g><title>std::backtrace::helper::lazy_resolve::_{{closure}} (80,453,474 samples, 2.52%)</title><rect x="53.4756%" y="661" width="2.5245%" height="15" fill="rgb(214,67,26)" fg:x="1704193698" fg:w="80453474"/><text x="53.7256%" y="671.50">st..</text></g><g><title>std::backtrace_rs::symbolize::resolve_frame_unsynchronized (80,453,474 samples, 2.52%)</title><rect x="53.4756%" y="645" width="2.5245%" height="15" fill="rgb(251,9,53)" fg:x="1704193698" fg:w="80453474"/><text x="53.7256%" y="655.50">st..</text></g><g><title>std::backtrace_rs::symbolize::gimli::resolve (80,453,474 samples, 2.52%)</title><rect x="53.4756%" y="629" width="2.5245%" height="15" fill="rgb(228,204,25)" fg:x="1704193698" fg:w="80453474"/><text x="53.7256%" y="639.50">st..</text></g><g><title>std::backtrace_rs::symbolize::gimli::Cache::with_global (80,453,474 samples, 2.52%)</title><rect x="53.4756%" y="613" width="2.5245%" height="15" fill="rgb(207,153,8)" fg:x="1704193698" fg:w="80453474"/><text x="53.7256%" y="623.50">st..</text></g><g><title>std::backtrace_rs::symbolize::gimli::resolve::_{{closure}} (79,843,931 samples, 2.51%)</title><rect x="53.4947%" y="597" width="2.5054%" height="15" fill="rgb(242,9,16)" fg:x="1704803241" fg:w="79843931"/><text x="53.7447%" y="607.50">st..</text></g><g><title>std::backtrace_rs::symbolize::gimli::Context::find_frames (31,331,898 samples, 0.98%)</title><rect x="55.0170%" y="581" width="0.9832%" height="15" fill="rgb(217,211,10)" fg:x="1753315274" fg:w="31331898"/><text x="55.2670%" y="591.50"></text></g><g><title>addr2line::Context&lt;R&gt;::find_frames (31,331,898 samples, 0.98%)</title><rect x="55.0170%" y="565" width="0.9832%" height="15" fill="rgb(219,228,52)" fg:x="1753315274" fg:w="31331898"/><text x="55.2670%" y="575.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_function_or_location (31,331,898 samples, 0.98%)</title><rect x="55.0170%" y="549" width="0.9832%" height="15" fill="rgb(231,92,29)" fg:x="1753315274" fg:w="31331898"/><text x="55.2670%" y="559.50"></text></g><g><title>addr2line::lookup::LookupResult&lt;L&gt;::map (31,331,898 samples, 0.98%)</title><rect x="55.0170%" y="533" width="0.9832%" height="15" fill="rgb(232,8,23)" fg:x="1753315274" fg:w="31331898"/><text x="55.2670%" y="543.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_function_or_location::_{{closure}} (31,331,898 samples, 0.98%)</title><rect x="55.0170%" y="517" width="0.9832%" height="15" fill="rgb(216,211,34)" fg:x="1753315274" fg:w="31331898"/><text x="55.2670%" y="527.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::find_location (5,265,805 samples, 0.17%)</title><rect x="55.8349%" y="501" width="0.1652%" height="15" fill="rgb(236,151,0)" fg:x="1779381367" fg:w="5265805"/><text x="56.0849%" y="511.50"></text></g><g><title>addr2line::unit::ResUnit&lt;R&gt;::parse_lines (5,265,805 samples, 0.17%)</title><rect x="55.8349%" y="485" width="0.1652%" height="15" fill="rgb(209,168,3)" fg:x="1779381367" fg:w="5265805"/><text x="56.0849%" y="495.50"></text></g><g><title>addr2line::line::LazyLines::borrow (5,265,805 samples, 0.17%)</title><rect x="55.8349%" y="469" width="0.1652%" height="15" fill="rgb(208,129,28)" fg:x="1779381367" fg:w="5265805"/><text x="56.0849%" y="479.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (5,265,805 samples, 0.17%)</title><rect x="55.8349%" y="453" width="0.1652%" height="15" fill="rgb(229,78,22)" fg:x="1779381367" fg:w="5265805"/><text x="56.0849%" y="463.50"></text></g><g><title>addr2line::line::LazyLines::borrow::_{{closure}} (5,265,805 samples, 0.17%)</title><rect x="55.8349%" y="437" width="0.1652%" height="15" fill="rgb(228,187,13)" fg:x="1779381367" fg:w="5265805"/><text x="56.0849%" y="447.50"></text></g><g><title>addr2line::line::Lines::parse (5,265,805 samples, 0.17%)</title><rect x="55.8349%" y="421" width="0.1652%" height="15" fill="rgb(240,119,24)" fg:x="1779381367" fg:w="5265805"/><text x="56.0849%" y="431.50"></text></g><g><title>gimli::read::line::LineRows&lt;R,Program,Offset&gt;::next_row (5,265,805 samples, 0.17%)</title><rect x="55.8349%" y="405" width="0.1652%" height="15" fill="rgb(209,194,42)" fg:x="1779381367" fg:w="5265805"/><text x="56.0849%" y="415.50"></text></g><g><title>gimli::read::line::LineRow::execute (2,461,325 samples, 0.08%)</title><rect x="55.9229%" y="389" width="0.0772%" height="15" fill="rgb(247,200,46)" fg:x="1782185847" fg:w="2461325"/><text x="56.1729%" y="399.50"></text></g><g><title>gimli::read::line::LineRow::exec_special_opcode (2,461,325 samples, 0.08%)</title><rect x="55.9229%" y="373" width="0.0772%" height="15" fill="rgb(218,76,16)" fg:x="1782185847" fg:w="2461325"/><text x="56.1729%" y="383.50"></text></g><g><title>gimli::read::line::LineRow::adjust_opcode (2,461,325 samples, 0.08%)</title><rect x="55.9229%" y="357" width="0.0772%" height="15" fill="rgb(225,21,48)" fg:x="1782185847" fg:w="2461325"/><text x="56.1729%" y="367.50"></text></g><g><title>silk_engine::util::print::backtrace_callers (84,258,084 samples, 2.64%)</title><rect x="53.4756%" y="821" width="2.6439%" height="15" fill="rgb(239,223,50)" fg:x="1704193698" fg:w="84258084"/><text x="53.7256%" y="831.50">si..</text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (84,258,084 samples, 2.64%)</title><rect x="53.4756%" y="805" width="2.6439%" height="15" fill="rgb(244,45,21)" fg:x="1704193698" fg:w="84258084"/><text x="53.7256%" y="815.50">&lt;T..</text></g><g><title>&lt;T as alloc::string::SpecToString&gt;::spec_to_string (84,258,084 samples, 2.64%)</title><rect x="53.4756%" y="789" width="2.6439%" height="15" fill="rgb(232,33,43)" fg:x="1704193698" fg:w="84258084"/><text x="53.7256%" y="799.50">&lt;T..</text></g><g><title>&lt;std::backtrace::Backtrace as core::fmt::Display&gt;::fmt (84,258,084 samples, 2.64%)</title><rect x="53.4756%" y="773" width="2.6439%" height="15" fill="rgb(209,8,3)" fg:x="1704193698" fg:w="84258084"/><text x="53.7256%" y="783.50">&lt;s..</text></g><g><title>core::option::Option&lt;T&gt;::map (3,804,610 samples, 0.12%)</title><rect x="56.0002%" y="757" width="0.1194%" height="15" fill="rgb(214,25,53)" fg:x="1784647172" fg:w="3804610"/><text x="56.2502%" y="767.50"></text></g><g><title>&lt;std::backtrace::Backtrace as core::fmt::Display&gt;::fmt::_{{closure}} (3,804,610 samples, 0.12%)</title><rect x="56.0002%" y="741" width="0.1194%" height="15" fill="rgb(254,186,54)" fg:x="1784647172" fg:w="3804610"/><text x="56.2502%" y="751.50"></text></g><g><title>std::backtrace_rs::symbolize::SymbolName::new (3,804,610 samples, 0.12%)</title><rect x="56.0002%" y="725" width="0.1194%" height="15" fill="rgb(208,174,49)" fg:x="1784647172" fg:w="3804610"/><text x="56.2502%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (3,804,610 samples, 0.12%)</title><rect x="56.0002%" y="709" width="0.1194%" height="15" fill="rgb(233,191,51)" fg:x="1784647172" fg:w="3804610"/><text x="56.2502%" y="719.50"></text></g><g><title>std::backtrace_rs::symbolize::SymbolName::new::_{{closure}} (3,804,610 samples, 0.12%)</title><rect x="56.0002%" y="693" width="0.1194%" height="15" fill="rgb(222,134,10)" fg:x="1784647172" fg:w="3804610"/><text x="56.2502%" y="703.50"></text></g><g><title>rustc_demangle::try_demangle (3,804,610 samples, 0.12%)</title><rect x="56.0002%" y="677" width="0.1194%" height="15" fill="rgb(230,226,20)" fg:x="1784647172" fg:w="3804610"/><text x="56.2502%" y="687.50"></text></g><g><title>rustc_demangle::demangle (3,804,610 samples, 0.12%)</title><rect x="56.0002%" y="661" width="0.1194%" height="15" fill="rgb(251,111,25)" fg:x="1784647172" fg:w="3804610"/><text x="56.2502%" y="671.50"></text></g><g><title>silk_engine::util::ttf::Ttf::read_glyph (1,047,204 samples, 0.03%)</title><rect x="56.1195%" y="821" width="0.0329%" height="15" fill="rgb(224,40,46)" fg:x="1788451782" fg:w="1047204"/><text x="56.3695%" y="831.50"></text></g><g><title>silk_engine::util::ttf::Ttf::read_simple_glyph (1,047,204 samples, 0.03%)</title><rect x="56.1195%" y="805" width="0.0329%" height="15" fill="rgb(236,108,47)" fg:x="1788451782" fg:w="1047204"/><text x="56.3695%" y="815.50"></text></g><g><title>silk_engine::util::reader::ReaderBe::read16 (1,047,204 samples, 0.03%)</title><rect x="56.1195%" y="789" width="0.0329%" height="15" fill="rgb(234,93,0)" fg:x="1788451782" fg:w="1047204"/><text x="56.3695%" y="799.50"></text></g><g><title>silk_engine::util::reader::ReaderBe::read_arr (1,047,204 samples, 0.03%)</title><rect x="56.1195%" y="773" width="0.0329%" height="15" fill="rgb(224,213,32)" fg:x="1788451782" fg:w="1047204"/><text x="56.3695%" y="783.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerBackend::flush (3,346,012 samples, 0.10%)</title><rect x="56.1524%" y="821" width="0.1050%" height="15" fill="rgb(251,11,48)" fg:x="1789498986" fg:w="3346012"/><text x="56.4024%" y="831.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerBackend::lock_state (1,673,245 samples, 0.05%)</title><rect x="56.2049%" y="805" width="0.0525%" height="15" fill="rgb(236,173,5)" fg:x="1791171753" fg:w="1673245"/><text x="56.4549%" y="815.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (1,673,245 samples, 0.05%)</title><rect x="56.2049%" y="789" width="0.0525%" height="15" fill="rgb(230,95,12)" fg:x="1791171753" fg:w="1673245"/><text x="56.4549%" y="799.50"></text></g><g><title>std::sync::poison::mutex::MutexGuard&lt;T&gt;::new (1,673,245 samples, 0.05%)</title><rect x="56.2049%" y="773" width="0.0525%" height="15" fill="rgb(232,209,1)" fg:x="1791171753" fg:w="1673245"/><text x="56.4549%" y="783.50"></text></g><g><title>std::sync::poison::Flag::guard (1,673,245 samples, 0.05%)</title><rect x="56.2049%" y="757" width="0.0525%" height="15" fill="rgb(232,6,1)" fg:x="1791171753" fg:w="1673245"/><text x="56.4549%" y="767.50"></text></g><g><title>std::thread::panicking (1,673,245 samples, 0.05%)</title><rect x="56.2049%" y="741" width="0.0525%" height="15" fill="rgb(210,224,50)" fg:x="1791171753" fg:w="1673245"/><text x="56.4549%" y="751.50"></text></g><g><title>std::panicking::panicking (1,673,245 samples, 0.05%)</title><rect x="56.2049%" y="725" width="0.0525%" height="15" fill="rgb(228,127,35)" fg:x="1791171753" fg:w="1673245"/><text x="56.4549%" y="735.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1,673,245 samples, 0.05%)</title><rect x="56.2049%" y="709" width="0.0525%" height="15" fill="rgb(245,102,45)" fg:x="1791171753" fg:w="1673245"/><text x="56.4549%" y="719.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerBackend::manage_object_internal (1,125,572 samples, 0.04%)</title><rect x="56.2574%" y="821" width="0.0353%" height="15" fill="rgb(214,1,49)" fg:x="1792844998" fg:w="1125572"/><text x="56.5074%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,125,572 samples, 0.04%)</title><rect x="56.2574%" y="805" width="0.0353%" height="15" fill="rgb(226,163,40)" fg:x="1792844998" fg:w="1125572"/><text x="56.5074%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,125,572 samples, 0.04%)</title><rect x="56.2574%" y="789" width="0.0353%" height="15" fill="rgb(239,212,28)" fg:x="1792844998" fg:w="1125572"/><text x="56.5074%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,125,572 samples, 0.04%)</title><rect x="56.2574%" y="773" width="0.0353%" height="15" fill="rgb(220,20,13)" fg:x="1792844998" fg:w="1125572"/><text x="56.5074%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,125,572 samples, 0.04%)</title><rect x="56.2574%" y="757" width="0.0353%" height="15" fill="rgb(210,164,35)" fg:x="1792844998" fg:w="1125572"/><text x="56.5074%" y="767.50"></text></g><g><title>alloc::alloc::alloc (1,125,572 samples, 0.04%)</title><rect x="56.2574%" y="741" width="0.0353%" height="15" fill="rgb(248,109,41)" fg:x="1792844998" fg:w="1125572"/><text x="56.5074%" y="751.50"></text></g><g><title>malloc (1,125,572 samples, 0.04%)</title><rect x="56.2574%" y="725" width="0.0353%" height="15" fill="rgb(238,23,50)" fg:x="1792844998" fg:w="1125572"/><text x="56.5074%" y="735.50"></text></g><g><title>[libc.so.6] (1,125,572 samples, 0.04%)</title><rect x="56.2574%" y="709" width="0.0353%" height="15" fill="rgb(211,48,49)" fg:x="1792844998" fg:w="1125572"/><text x="56.5074%" y="719.50"></text></g><g><title>wayland_client::conn::Connection::prepare_read (1,670,648 samples, 0.05%)</title><rect x="56.2927%" y="821" width="0.0524%" height="15" fill="rgb(223,36,21)" fg:x="1793970570" fg:w="1670648"/><text x="56.5427%" y="831.50"></text></g><g><title>wayland_backend::sys::client::Backend::prepare_read (1,670,648 samples, 0.05%)</title><rect x="56.2927%" y="805" width="0.0524%" height="15" fill="rgb(207,123,46)" fg:x="1793970570" fg:w="1670648"/><text x="56.5427%" y="815.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::pump_events (1,672,526 samples, 0.05%)</title><rect x="56.3451%" y="821" width="0.0525%" height="15" fill="rgb(240,218,32)" fg:x="1795641218" fg:w="1672526"/><text x="56.5951%" y="831.50"></text></g><g><title>winit::platform_impl::linux::wayland::window::WindowRequests::take_closed (28,429,569 samples, 0.89%)</title><rect x="56.3976%" y="821" width="0.8921%" height="15" fill="rgb(252,5,43)" fg:x="1797313744" fg:w="28429569"/><text x="56.6476%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (28,429,569 samples, 0.89%)</title><rect x="56.3976%" y="805" width="0.8921%" height="15" fill="rgb(252,84,19)" fg:x="1797313744" fg:w="28429569"/><text x="56.6476%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_swap (28,429,569 samples, 0.89%)</title><rect x="56.3976%" y="789" width="0.8921%" height="15" fill="rgb(243,152,39)" fg:x="1797313744" fg:w="28429569"/><text x="56.6476%" y="799.50"></text></g><g><title>winit::platform_impl::linux::wayland::window::WindowRequests::take_redraw_requested (11,722,742 samples, 0.37%)</title><rect x="57.2897%" y="821" width="0.3678%" height="15" fill="rgb(234,160,15)" fg:x="1825743313" fg:w="11722742"/><text x="57.5397%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (11,722,742 samples, 0.37%)</title><rect x="57.2897%" y="805" width="0.3678%" height="15" fill="rgb(237,34,20)" fg:x="1825743313" fg:w="11722742"/><text x="57.5397%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_swap (11,722,742 samples, 0.37%)</title><rect x="57.2897%" y="789" width="0.3678%" height="15" fill="rgb(229,97,13)" fg:x="1825743313" fg:w="11722742"/><text x="57.5397%" y="799.50"></text></g><g><title>[unknown] (1,474,738,251 samples, 46.28%)</title><rect x="11.4345%" y="837" width="46.2756%" height="15" fill="rgb(234,71,50)" fg:x="364400825" fg:w="1474738251"/><text x="11.6845%" y="847.50">[unknown]</text></g><g><title>wl_display_flush (1,673,021 samples, 0.05%)</title><rect x="57.6576%" y="821" width="0.0525%" height="15" fill="rgb(253,155,4)" fg:x="1837466055" fg:w="1673021"/><text x="57.9076%" y="831.50"></text></g><g><title>__vdso_clock_gettime (10,036,424 samples, 0.31%)</title><rect x="57.7101%" y="837" width="0.3149%" height="15" fill="rgb(222,185,37)" fg:x="1839139076" fg:w="10036424"/><text x="57.9601%" y="847.50"></text></g><g><title>addr2line::Context&lt;R&gt;::find_unit (3,589,878 samples, 0.11%)</title><rect x="58.0250%" y="837" width="0.1126%" height="15" fill="rgb(251,177,13)" fg:x="1849175500" fg:w="3589878"/><text x="58.2750%" y="847.50"></text></g><g><title>addr2line::unit::ResUnits&lt;R&gt;::find_offset (3,589,878 samples, 0.11%)</title><rect x="58.0250%" y="821" width="0.1126%" height="15" fill="rgb(250,179,40)" fg:x="1849175500" fg:w="3589878"/><text x="58.2750%" y="831.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (3,589,878 samples, 0.11%)</title><rect x="58.0250%" y="805" width="0.1126%" height="15" fill="rgb(242,44,2)" fg:x="1849175500" fg:w="3589878"/><text x="58.2750%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (3,589,878 samples, 0.11%)</title><rect x="58.0250%" y="789" width="0.1126%" height="15" fill="rgb(216,177,13)" fg:x="1849175500" fg:w="3589878"/><text x="58.2750%" y="799.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (3,589,878 samples, 0.11%)</title><rect x="58.0250%" y="773" width="0.1126%" height="15" fill="rgb(216,106,43)" fg:x="1849175500" fg:w="3589878"/><text x="58.2750%" y="783.50"></text></g><g><title>&lt;gimli::read::endian_slice::EndianSlice&lt;Endian&gt; as gimli::read::reader::Reader&gt;::to_string_lossy (2,471,841 samples, 0.08%)</title><rect x="58.1376%" y="821" width="0.0776%" height="15" fill="rgb(216,183,2)" fg:x="1852765378" fg:w="2471841"/><text x="58.3876%" y="831.50"></text></g><g><title>[unknown] (2,471,841 samples, 0.08%)</title><rect x="58.1376%" y="805" width="0.0776%" height="15" fill="rgb(249,75,3)" fg:x="1852765378" fg:w="2471841"/><text x="58.3876%" y="815.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (2,471,841 samples, 0.08%)</title><rect x="58.1376%" y="789" width="0.0776%" height="15" fill="rgb(219,67,39)" fg:x="1852765378" fg:w="2471841"/><text x="58.3876%" y="799.50"></text></g><g><title>addr2line::line::render_file (7,879,727 samples, 0.25%)</title><rect x="58.1376%" y="837" width="0.2473%" height="15" fill="rgb(253,228,2)" fg:x="1852765378" fg:w="7879727"/><text x="58.3876%" y="847.50"></text></g><g><title>addr2line::line::path_push (5,407,886 samples, 0.17%)</title><rect x="58.2152%" y="821" width="0.1697%" height="15" fill="rgb(235,138,27)" fg:x="1855237219" fg:w="5407886"/><text x="58.4652%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (5,407,886 samples, 0.17%)</title><rect x="58.2152%" y="805" width="0.1697%" height="15" fill="rgb(236,97,51)" fg:x="1855237219" fg:w="5407886"/><text x="58.4652%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (5,407,886 samples, 0.17%)</title><rect x="58.2152%" y="789" width="0.1697%" height="15" fill="rgb(240,80,30)" fg:x="1855237219" fg:w="5407886"/><text x="58.4652%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (5,407,886 samples, 0.17%)</title><rect x="58.2152%" y="773" width="0.1697%" height="15" fill="rgb(230,178,19)" fg:x="1855237219" fg:w="5407886"/><text x="58.4652%" y="783.50"></text></g><g><title>realloc (5,407,886 samples, 0.17%)</title><rect x="58.2152%" y="757" width="0.1697%" height="15" fill="rgb(210,190,27)" fg:x="1855237219" fg:w="5407886"/><text x="58.4652%" y="767.50"></text></g><g><title>[libc.so.6] (2,734,721 samples, 0.09%)</title><rect x="58.2991%" y="741" width="0.0858%" height="15" fill="rgb(222,107,31)" fg:x="1857910384" fg:w="2734721"/><text x="58.5491%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (44,921,444 samples, 1.41%)</title><rect x="58.3849%" y="837" width="1.4096%" height="15" fill="rgb(216,127,34)" fg:x="1860645105" fg:w="44921444"/><text x="58.6349%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (19,822,962 samples, 0.62%)</title><rect x="59.1724%" y="821" width="0.6220%" height="15" fill="rgb(234,116,52)" fg:x="1885743587" fg:w="19822962"/><text x="59.4224%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (1,402,356 samples, 0.04%)</title><rect x="59.7505%" y="805" width="0.0440%" height="15" fill="rgb(222,124,15)" fg:x="1904164193" fg:w="1402356"/><text x="60.0005%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul::precondition_check (1,402,356 samples, 0.04%)</title><rect x="59.7505%" y="789" width="0.0440%" height="15" fill="rgb(231,179,28)" fg:x="1904164193" fg:w="1402356"/><text x="60.0005%" y="799.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1,402,356 samples, 0.04%)</title><rect x="59.7505%" y="773" width="0.0440%" height="15" fill="rgb(226,93,45)" fg:x="1904164193" fg:w="1402356"/><text x="60.0005%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,541,501 samples, 0.08%)</title><rect x="59.7945%" y="837" width="0.0797%" height="15" fill="rgb(215,8,51)" fg:x="1905566549" fg:w="2541501"/><text x="60.0445%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,870,330 samples, 0.09%)</title><rect x="59.8742%" y="837" width="0.0901%" height="15" fill="rgb(223,106,5)" fg:x="1908108050" fg:w="2870330"/><text x="60.1242%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,870,330 samples, 0.09%)</title><rect x="59.8742%" y="821" width="0.0901%" height="15" fill="rgb(250,191,5)" fg:x="1908108050" fg:w="2870330"/><text x="60.1242%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2,870,330 samples, 0.09%)</title><rect x="59.8742%" y="805" width="0.0901%" height="15" fill="rgb(242,132,44)" fg:x="1908108050" fg:w="2870330"/><text x="60.1242%" y="815.50"></text></g><g><title>alloc::alloc::realloc (2,870,330 samples, 0.09%)</title><rect x="59.8742%" y="789" width="0.0901%" height="15" fill="rgb(251,152,29)" fg:x="1908108050" fg:w="2870330"/><text x="60.1242%" y="799.50"></text></g><g><title>realloc (2,870,330 samples, 0.09%)</title><rect x="59.8742%" y="773" width="0.0901%" height="15" fill="rgb(218,179,5)" fg:x="1908108050" fg:w="2870330"/><text x="60.1242%" y="783.50"></text></g><g><title>[libc.so.6] (2,870,330 samples, 0.09%)</title><rect x="59.8742%" y="757" width="0.0901%" height="15" fill="rgb(227,67,19)" fg:x="1908108050" fg:w="2870330"/><text x="60.1242%" y="767.50"></text></g><g><title>[libc.so.6] (2,870,330 samples, 0.09%)</title><rect x="59.8742%" y="741" width="0.0901%" height="15" fill="rgb(233,119,31)" fg:x="1908108050" fg:w="2870330"/><text x="60.1242%" y="751.50"></text></g><g><title>alsa::pcm::PCM::hw_params (717,390 samples, 0.02%)</title><rect x="59.9643%" y="837" width="0.0225%" height="15" fill="rgb(241,120,22)" fg:x="1910978380" fg:w="717390"/><text x="60.2143%" y="847.50"></text></g><g><title>snd_pcm_prepare (717,390 samples, 0.02%)</title><rect x="59.9643%" y="821" width="0.0225%" height="15" fill="rgb(224,102,30)" fg:x="1910978380" fg:w="717390"/><text x="60.2143%" y="831.50"></text></g><g><title>[libasound.so.2.0.0] (717,390 samples, 0.02%)</title><rect x="59.9643%" y="805" width="0.0225%" height="15" fill="rgb(210,164,37)" fg:x="1910978380" fg:w="717390"/><text x="60.2143%" y="815.50"></text></g><g><title>[libasound_module_pcm_pipewire.so] (717,390 samples, 0.02%)</title><rect x="59.9643%" y="789" width="0.0225%" height="15" fill="rgb(226,191,16)" fg:x="1910978380" fg:w="717390"/><text x="60.2143%" y="799.50"></text></g><g><title>[libasound_module_pcm_pipewire.so] (717,390 samples, 0.02%)</title><rect x="59.9643%" y="773" width="0.0225%" height="15" fill="rgb(214,40,45)" fg:x="1910978380" fg:w="717390"/><text x="60.2143%" y="783.50"></text></g><g><title>[libasound.so.2.0.0] (501,504 samples, 0.02%)</title><rect x="59.9868%" y="789" width="0.0157%" height="15" fill="rgb(244,29,26)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="799.50"></text></g><g><title>[libasound.so.2.0.0] (501,504 samples, 0.02%)</title><rect x="59.9868%" y="773" width="0.0157%" height="15" fill="rgb(216,16,5)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="783.50"></text></g><g><title>_snd_pcm_pipewire_open (501,504 samples, 0.02%)</title><rect x="59.9868%" y="757" width="0.0157%" height="15" fill="rgb(249,76,35)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="767.50"></text></g><g><title>pw_context_new (501,504 samples, 0.02%)</title><rect x="59.9868%" y="741" width="0.0157%" height="15" fill="rgb(207,11,44)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="751.50"></text></g><g><title>pw_context_parse_conf_section (501,504 samples, 0.02%)</title><rect x="59.9868%" y="725" width="0.0157%" height="15" fill="rgb(228,190,49)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="735.50"></text></g><g><title>pw_conf_section_for_each (501,504 samples, 0.02%)</title><rect x="59.9868%" y="709" width="0.0157%" height="15" fill="rgb(214,173,12)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="719.50"></text></g><g><title>[libpipewire-0.3.so.0.1405.0] (501,504 samples, 0.02%)</title><rect x="59.9868%" y="693" width="0.0157%" height="15" fill="rgb(218,26,35)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="703.50"></text></g><g><title>pw_context_load_module (501,504 samples, 0.02%)</title><rect x="59.9868%" y="677" width="0.0157%" height="15" fill="rgb(220,200,19)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="687.50"></text></g><g><title>dlopen (501,504 samples, 0.02%)</title><rect x="59.9868%" y="661" width="0.0157%" height="15" fill="rgb(239,95,49)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="671.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.02%)</title><rect x="59.9868%" y="645" width="0.0157%" height="15" fill="rgb(235,85,53)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="655.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.02%)</title><rect x="59.9868%" y="629" width="0.0157%" height="15" fill="rgb(233,133,31)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="639.50"></text></g><g><title>_dl_catch_exception (501,504 samples, 0.02%)</title><rect x="59.9868%" y="613" width="0.0157%" height="15" fill="rgb(218,25,20)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="623.50"></text></g><g><title>[libc.so.6] (501,504 samples, 0.02%)</title><rect x="59.9868%" y="597" width="0.0157%" height="15" fill="rgb(252,210,38)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.02%)</title><rect x="59.9868%" y="581" width="0.0157%" height="15" fill="rgb(242,134,21)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="591.50"></text></g><g><title>_dl_catch_exception (501,504 samples, 0.02%)</title><rect x="59.9868%" y="565" width="0.0157%" height="15" fill="rgb(213,28,48)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="575.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.02%)</title><rect x="59.9868%" y="549" width="0.0157%" height="15" fill="rgb(250,196,2)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="559.50"></text></g><g><title>_dl_catch_exception (501,504 samples, 0.02%)</title><rect x="59.9868%" y="533" width="0.0157%" height="15" fill="rgb(227,5,17)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.02%)</title><rect x="59.9868%" y="517" width="0.0157%" height="15" fill="rgb(221,226,24)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.02%)</title><rect x="59.9868%" y="501" width="0.0157%" height="15" fill="rgb(211,5,48)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="511.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.02%)</title><rect x="59.9868%" y="485" width="0.0157%" height="15" fill="rgb(219,150,6)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.02%)</title><rect x="59.9868%" y="469" width="0.0157%" height="15" fill="rgb(251,46,16)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="479.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.02%)</title><rect x="59.9868%" y="453" width="0.0157%" height="15" fill="rgb(220,204,40)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (501,504 samples, 0.02%)</title><rect x="59.9868%" y="437" width="0.0157%" height="15" fill="rgb(211,85,2)" fg:x="1911695770" fg:w="501504"/><text x="60.2368%" y="447.50"></text></g><g><title>alsa::pcm::PCM::new (3,857,864 samples, 0.12%)</title><rect x="59.9868%" y="837" width="0.1211%" height="15" fill="rgb(229,17,7)" fg:x="1911695770" fg:w="3857864"/><text x="60.2368%" y="847.50"></text></g><g><title>alsa::pcm::PCM::open (3,857,864 samples, 0.12%)</title><rect x="59.9868%" y="821" width="0.1211%" height="15" fill="rgb(239,72,28)" fg:x="1911695770" fg:w="3857864"/><text x="60.2368%" y="831.50"></text></g><g><title>snd_pcm_open (3,857,864 samples, 0.12%)</title><rect x="59.9868%" y="805" width="0.1211%" height="15" fill="rgb(230,47,54)" fg:x="1911695770" fg:w="3857864"/><text x="60.2368%" y="815.50"></text></g><g><title>snd_config_update_ref (3,356,360 samples, 0.11%)</title><rect x="60.0025%" y="789" width="0.1053%" height="15" fill="rgb(214,50,8)" fg:x="1912197274" fg:w="3356360"/><text x="60.2525%" y="799.50"></text></g><g><title>snd_config_update_r (3,356,360 samples, 0.11%)</title><rect x="60.0025%" y="773" width="0.1053%" height="15" fill="rgb(216,198,43)" fg:x="1912197274" fg:w="3356360"/><text x="60.2525%" y="783.50"></text></g><g><title>[libasound.so.2.0.0] (3,356,360 samples, 0.11%)</title><rect x="60.0025%" y="757" width="0.1053%" height="15" fill="rgb(234,20,35)" fg:x="1912197274" fg:w="3356360"/><text x="60.2525%" y="767.50"></text></g><g><title>[libasound.so.2.0.0] (3,356,360 samples, 0.11%)</title><rect x="60.0025%" y="741" width="0.1053%" height="15" fill="rgb(254,45,19)" fg:x="1912197274" fg:w="3356360"/><text x="60.2525%" y="751.50"></text></g><g><title>[libasound.so.2.0.0] (3,356,360 samples, 0.11%)</title><rect x="60.0025%" y="725" width="0.1053%" height="15" fill="rgb(219,14,44)" fg:x="1912197274" fg:w="3356360"/><text x="60.2525%" y="735.50"></text></g><g><title>[libasound.so.2.0.0] (3,356,360 samples, 0.11%)</title><rect x="60.0025%" y="709" width="0.1053%" height="15" fill="rgb(217,220,26)" fg:x="1912197274" fg:w="3356360"/><text x="60.2525%" y="719.50"></text></g><g><title>[libasound.so.2.0.0] (3,356,360 samples, 0.11%)</title><rect x="60.0025%" y="693" width="0.1053%" height="15" fill="rgb(213,158,28)" fg:x="1912197274" fg:w="3356360"/><text x="60.2525%" y="703.50"></text></g><g><title>[libasound.so.2.0.0] (3,356,360 samples, 0.11%)</title><rect x="60.0025%" y="677" width="0.1053%" height="15" fill="rgb(252,51,52)" fg:x="1912197274" fg:w="3356360"/><text x="60.2525%" y="687.50"></text></g><g><title>_IO_getc (3,356,360 samples, 0.11%)</title><rect x="60.0025%" y="661" width="0.1053%" height="15" fill="rgb(246,89,16)" fg:x="1912197274" fg:w="3356360"/><text x="60.2525%" y="671.50"></text></g><g><title>[libVkLayer_khronos_validation.so] (3,200,907 samples, 0.10%)</title><rect x="60.1079%" y="741" width="0.1004%" height="15" fill="rgb(216,158,49)" fg:x="1915553634" fg:w="3200907"/><text x="60.3579%" y="751.50"></text></g><g><title>[libVkLayer_khronos_validation.so] (3,200,907 samples, 0.10%)</title><rect x="60.1079%" y="725" width="0.1004%" height="15" fill="rgb(236,107,19)" fg:x="1915553634" fg:w="3200907"/><text x="60.3579%" y="735.50"></text></g><g><title>[libSPIRV-Tools.so] (3,072,136 samples, 0.10%)</title><rect x="60.2083%" y="725" width="0.0964%" height="15" fill="rgb(228,185,30)" fg:x="1918754541" fg:w="3072136"/><text x="60.4583%" y="735.50"></text></g><g><title>spvtools::val::AnnotationPass (3,072,136 samples, 0.10%)</title><rect x="60.2083%" y="709" width="0.0964%" height="15" fill="rgb(246,134,8)" fg:x="1918754541" fg:w="3072136"/><text x="60.4583%" y="719.50"></text></g><g><title>[libSPIRV-Tools.so] (3,072,136 samples, 0.10%)</title><rect x="60.2083%" y="693" width="0.0964%" height="15" fill="rgb(214,143,50)" fg:x="1918754541" fg:w="3072136"/><text x="60.4583%" y="703.50"></text></g><g><title>[libSPIRV-Tools.so] (3,072,136 samples, 0.10%)</title><rect x="60.2083%" y="677" width="0.0964%" height="15" fill="rgb(228,75,8)" fg:x="1918754541" fg:w="3072136"/><text x="60.4583%" y="687.50"></text></g><g><title>anon.1ff91c95056878e1dd51e5db917c93b3.373.llvm.17527724865478079214 (9,242,658 samples, 0.29%)</title><rect x="60.1079%" y="837" width="0.2900%" height="15" fill="rgb(207,175,4)" fg:x="1915553634" fg:w="9242658"/><text x="60.3579%" y="847.50"></text></g><g><title>silk_engine::gfx::shader::Shader::create_module (9,242,658 samples, 0.29%)</title><rect x="60.1079%" y="821" width="0.2900%" height="15" fill="rgb(205,108,24)" fg:x="1915553634" fg:w="9242658"/><text x="60.3579%" y="831.50"></text></g><g><title>ash::device::Device::create_shader_module (9,242,658 samples, 0.29%)</title><rect x="60.1079%" y="805" width="0.2900%" height="15" fill="rgb(244,120,49)" fg:x="1915553634" fg:w="9242658"/><text x="60.3579%" y="815.50"></text></g><g><title>[libVkLayer_khronos_validation.so] (9,242,658 samples, 0.29%)</title><rect x="60.1079%" y="789" width="0.2900%" height="15" fill="rgb(223,47,38)" fg:x="1915553634" fg:w="9242658"/><text x="60.3579%" y="799.50"></text></g><g><title>[libVkLayer_khronos_validation.so] (9,242,658 samples, 0.29%)</title><rect x="60.1079%" y="773" width="0.2900%" height="15" fill="rgb(229,179,11)" fg:x="1915553634" fg:w="9242658"/><text x="60.3579%" y="783.50"></text></g><g><title>[libVkLayer_khronos_validation.so] (9,242,658 samples, 0.29%)</title><rect x="60.1079%" y="757" width="0.2900%" height="15" fill="rgb(231,122,1)" fg:x="1915553634" fg:w="9242658"/><text x="60.3579%" y="767.50"></text></g><g><title>spvValidateWithOptions (6,041,751 samples, 0.19%)</title><rect x="60.2083%" y="741" width="0.1896%" height="15" fill="rgb(245,119,9)" fg:x="1918754541" fg:w="6041751"/><text x="60.4583%" y="751.50"></text></g><g><title>spvtools::val::ValidationState_t::ValidationState_t (2,969,615 samples, 0.09%)</title><rect x="60.3047%" y="725" width="0.0932%" height="15" fill="rgb(241,163,25)" fg:x="1921826677" fg:w="2969615"/><text x="60.5547%" y="735.50"></text></g><g><title>spvBinaryParse (2,969,615 samples, 0.09%)</title><rect x="60.3047%" y="709" width="0.0932%" height="15" fill="rgb(217,214,3)" fg:x="1921826677" fg:w="2969615"/><text x="60.5547%" y="719.50"></text></g><g><title>[libSPIRV-Tools.so] (2,969,615 samples, 0.09%)</title><rect x="60.3047%" y="693" width="0.0932%" height="15" fill="rgb(240,86,28)" fg:x="1921826677" fg:w="2969615"/><text x="60.5547%" y="703.50"></text></g><g><title>operator new (2,969,615 samples, 0.09%)</title><rect x="60.3047%" y="677" width="0.0932%" height="15" fill="rgb(215,47,9)" fg:x="1921826677" fg:w="2969615"/><text x="60.5547%" y="687.50"></text></g><g><title>malloc (2,969,615 samples, 0.09%)</title><rect x="60.3047%" y="661" width="0.0932%" height="15" fill="rgb(252,25,45)" fg:x="1921826677" fg:w="2969615"/><text x="60.5547%" y="671.50"></text></g><g><title>[libc.so.6] (2,969,615 samples, 0.09%)</title><rect x="60.3047%" y="645" width="0.0932%" height="15" fill="rgb(251,164,9)" fg:x="1921826677" fg:w="2969615"/><text x="60.5547%" y="655.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch_events (6,708,290 samples, 0.21%)</title><rect x="60.5028%" y="821" width="0.2105%" height="15" fill="rgb(233,194,0)" fg:x="1928139866" fg:w="6708290"/><text x="60.7528%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::chain::Chain&lt;alloc::vec::drain::Drain&lt;calloop::sys::PollEvent&gt;,alloc::vec::into_iter::IntoIter&lt;calloop::sys::PollEvent&gt;&gt;&gt; (1,688,885 samples, 0.05%)</title><rect x="60.6603%" y="805" width="0.0530%" height="15" fill="rgb(249,111,24)" fg:x="1933159271" fg:w="1688885"/><text x="60.9103%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;calloop::sys::PollEvent&gt;&gt;&gt; (1,688,885 samples, 0.05%)</title><rect x="60.6603%" y="789" width="0.0530%" height="15" fill="rgb(250,223,3)" fg:x="1933159271" fg:w="1688885"/><text x="60.9103%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;calloop::sys::PollEvent&gt;&gt; (1,688,885 samples, 0.05%)</title><rect x="60.6603%" y="773" width="0.0530%" height="15" fill="rgb(236,178,37)" fg:x="1933159271" fg:w="1688885"/><text x="60.9103%" y="783.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,688,885 samples, 0.05%)</title><rect x="60.6603%" y="757" width="0.0530%" height="15" fill="rgb(241,158,50)" fg:x="1933159271" fg:w="1688885"/><text x="60.9103%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;calloop::sys::PollEvent,alloc::alloc::Global&gt;&gt; (1,688,885 samples, 0.05%)</title><rect x="60.6603%" y="741" width="0.0530%" height="15" fill="rgb(213,121,41)" fg:x="1933159271" fg:w="1688885"/><text x="60.9103%" y="751.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,688,885 samples, 0.05%)</title><rect x="60.6603%" y="725" width="0.0530%" height="15" fill="rgb(240,92,3)" fg:x="1933159271" fg:w="1688885"/><text x="60.9103%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;calloop::sys::PollEvent&gt;&gt; (1,688,885 samples, 0.05%)</title><rect x="60.6603%" y="709" width="0.0530%" height="15" fill="rgb(205,123,3)" fg:x="1933159271" fg:w="1688885"/><text x="60.9103%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,688,885 samples, 0.05%)</title><rect x="60.6603%" y="693" width="0.0530%" height="15" fill="rgb(205,97,47)" fg:x="1933159271" fg:w="1688885"/><text x="60.9103%" y="703.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch (15,063,118 samples, 0.47%)</title><rect x="60.3979%" y="837" width="0.4727%" height="15" fill="rgb(247,152,14)" fg:x="1924796292" fg:w="15063118"/><text x="60.6479%" y="847.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch_idles (5,011,254 samples, 0.16%)</title><rect x="60.7133%" y="821" width="0.1572%" height="15" fill="rgb(248,195,53)" fg:x="1934848156" fg:w="5011254"/><text x="60.9633%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;dyn calloop::sources::IdleDispatcher&lt;winit::platform_impl::linux::wayland::state::WinitState&gt;&gt;&gt;&gt;&gt; (5,011,254 samples, 0.16%)</title><rect x="60.7133%" y="805" width="0.1572%" height="15" fill="rgb(226,201,16)" fg:x="1934848156" fg:w="5011254"/><text x="60.9633%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as std::os::fd::owned::AsFd&gt;::as_fd (5,012,463 samples, 0.16%)</title><rect x="61.1331%" y="821" width="0.1573%" height="15" fill="rgb(205,98,0)" fg:x="1948227094" fg:w="5012463"/><text x="61.3831%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5,012,463 samples, 0.16%)</title><rect x="61.1331%" y="805" width="0.1573%" height="15" fill="rgb(214,191,48)" fg:x="1948227094" fg:w="5012463"/><text x="61.3831%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (5,012,463 samples, 0.16%)</title><rect x="61.1331%" y="789" width="0.1573%" height="15" fill="rgb(237,112,39)" fg:x="1948227094" fg:w="5012463"/><text x="61.3831%" y="799.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5,012,463 samples, 0.16%)</title><rect x="61.1331%" y="773" width="0.1573%" height="15" fill="rgb(247,203,27)" fg:x="1948227094" fg:w="5012463"/><text x="61.3831%" y="783.50"></text></g><g><title>rustix::backend::arch::asm::syscall3_readonly (21,721,492 samples, 0.68%)</title><rect x="61.2904%" y="773" width="0.6816%" height="15" fill="rgb(235,124,28)" fg:x="1953239557" fg:w="21721492"/><text x="61.5404%" y="783.50"></text></g><g><title>[unknown] (21,721,492 samples, 0.68%)</title><rect x="61.2904%" y="757" width="0.6816%" height="15" fill="rgb(208,207,46)" fg:x="1953239557" fg:w="21721492"/><text x="61.5404%" y="767.50"></text></g><g><title>calloop::sources::ping::eventfd::Ping::ping (69,675,947 samples, 2.19%)</title><rect x="60.8705%" y="837" width="2.1864%" height="15" fill="rgb(234,176,4)" fg:x="1939859410" fg:w="69675947"/><text x="61.1205%" y="847.50">c..</text></g><g><title>calloop::sources::ping::eventfd::send_ping (56,295,800 samples, 1.77%)</title><rect x="61.2904%" y="821" width="1.7665%" height="15" fill="rgb(230,133,28)" fg:x="1953239557" fg:w="56295800"/><text x="61.5404%" y="831.50"></text></g><g><title>rustix::io::read_write::write (56,295,800 samples, 1.77%)</title><rect x="61.2904%" y="805" width="1.7665%" height="15" fill="rgb(211,137,40)" fg:x="1953239557" fg:w="56295800"/><text x="61.5404%" y="815.50"></text></g><g><title>rustix::backend::io::syscalls::write (56,295,800 samples, 1.77%)</title><rect x="61.2904%" y="789" width="1.7665%" height="15" fill="rgb(254,35,13)" fg:x="1953239557" fg:w="56295800"/><text x="61.5404%" y="799.50"></text></g><g><title>rustix::backend::conv::ret_usize (34,574,308 samples, 1.08%)</title><rect x="61.9720%" y="773" width="1.0849%" height="15" fill="rgb(225,49,51)" fg:x="1974961049" fg:w="34574308"/><text x="62.2220%" y="783.50"></text></g><g><title>rustix::backend::io::errno::try_decode_usize (34,574,308 samples, 1.08%)</title><rect x="61.9720%" y="757" width="1.0849%" height="15" fill="rgb(251,10,15)" fg:x="1974961049" fg:w="34574308"/><text x="62.2220%" y="767.50"></text></g><g><title>rustix::backend::reg::RetReg&lt;Num&gt;::is_in_range (29,555,624 samples, 0.93%)</title><rect x="62.1295%" y="741" width="0.9274%" height="15" fill="rgb(228,207,15)" fg:x="1979979733" fg:w="29555624"/><text x="62.3795%" y="751.50"></text></g><g><title>core::ops::range::Range&lt;Idx&gt;::contains (29,555,624 samples, 0.93%)</title><rect x="62.1295%" y="725" width="0.9274%" height="15" fill="rgb(241,99,19)" fg:x="1979979733" fg:w="29555624"/><text x="62.3795%" y="735.50"></text></g><g><title>core::ops::range::RangeBounds::contains (29,555,624 samples, 0.93%)</title><rect x="62.1295%" y="709" width="0.9274%" height="15" fill="rgb(207,104,49)" fg:x="1979979733" fg:w="29555624"/><text x="62.3795%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (29,555,624 samples, 0.93%)</title><rect x="62.1295%" y="693" width="0.9274%" height="15" fill="rgb(234,99,18)" fg:x="1979979733" fg:w="29555624"/><text x="62.3795%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for isize&gt;::le (29,555,624 samples, 0.93%)</title><rect x="62.1295%" y="677" width="0.9274%" height="15" fill="rgb(213,191,49)" fg:x="1979979733" fg:w="29555624"/><text x="62.3795%" y="687.50"></text></g><g><title>calloop::sources::timer::TimerWheel::next_deadline (3,345,648 samples, 0.10%)</title><rect x="63.5826%" y="821" width="0.1050%" height="15" fill="rgb(210,226,19)" fg:x="2026288612" fg:w="3345648"/><text x="63.8326%" y="831.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T,A&gt;::peek (3,345,648 samples, 0.10%)</title><rect x="63.5826%" y="805" width="0.1050%" height="15" fill="rgb(229,97,18)" fg:x="2026288612" fg:w="3345648"/><text x="63.8326%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,345,648 samples, 0.10%)</title><rect x="63.5826%" y="789" width="0.1050%" height="15" fill="rgb(211,167,15)" fg:x="2026288612" fg:w="3345648"/><text x="63.8326%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (3,345,648 samples, 0.10%)</title><rect x="63.5826%" y="773" width="0.1050%" height="15" fill="rgb(210,169,34)" fg:x="2026288612" fg:w="3345648"/><text x="63.8326%" y="783.50"></text></g><g><title>core::slice::raw::from_raw_parts (3,345,648 samples, 0.10%)</title><rect x="63.5826%" y="757" width="0.1050%" height="15" fill="rgb(241,121,31)" fg:x="2026288612" fg:w="3345648"/><text x="63.8326%" y="767.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (3,345,648 samples, 0.10%)</title><rect x="63.5826%" y="741" width="0.1050%" height="15" fill="rgb(232,40,11)" fg:x="2026288612" fg:w="3345648"/><text x="63.8326%" y="751.50"></text></g><g><title>core::ub_checks::maybe_is_aligned_and_not_null (3,345,648 samples, 0.10%)</title><rect x="63.5826%" y="725" width="0.1050%" height="15" fill="rgb(205,86,26)" fg:x="2026288612" fg:w="3345648"/><text x="63.8326%" y="735.50"></text></g><g><title>core::ub_checks::maybe_is_aligned_and_not_null::runtime (3,345,648 samples, 0.10%)</title><rect x="63.5826%" y="709" width="0.1050%" height="15" fill="rgb(231,126,28)" fg:x="2026288612" fg:w="3345648"/><text x="63.8326%" y="719.50"></text></g><g><title>calloop::sys::Poll::poll (1,672,598 samples, 0.05%)</title><rect x="63.6876%" y="821" width="0.0525%" height="15" fill="rgb(219,221,18)" fg:x="2029634260" fg:w="1672598"/><text x="63.9376%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,346,493 samples, 0.11%)</title><rect x="63.7401%" y="821" width="0.1050%" height="15" fill="rgb(211,40,0)" fg:x="2031306858" fg:w="3346493"/><text x="63.9901%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (3,346,493 samples, 0.11%)</title><rect x="63.7401%" y="805" width="0.1050%" height="15" fill="rgb(239,85,43)" fg:x="2031306858" fg:w="3346493"/><text x="63.9901%" y="815.50"></text></g><g><title>core::iter::adapters::try_process (3,346,493 samples, 0.11%)</title><rect x="63.7401%" y="789" width="0.1050%" height="15" fill="rgb(231,55,21)" fg:x="2031306858" fg:w="3346493"/><text x="63.9901%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::_{{closure}} (3,346,493 samples, 0.11%)</title><rect x="63.7401%" y="773" width="0.1050%" height="15" fill="rgb(225,184,43)" fg:x="2031306858" fg:w="3346493"/><text x="63.9901%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,346,493 samples, 0.11%)</title><rect x="63.7401%" y="757" width="0.1050%" height="15" fill="rgb(251,158,41)" fg:x="2031306858" fg:w="3346493"/><text x="63.9901%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,346,493 samples, 0.11%)</title><rect x="63.7401%" y="741" width="0.1050%" height="15" fill="rgb(234,159,37)" fg:x="2031306858" fg:w="3346493"/><text x="63.9901%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::cell::Ref&lt;std::collections::hash::map::HashMap&lt;usize,(i32,polling::Event)&gt;&gt;&gt;&gt; (1,673,938 samples, 0.05%)</title><rect x="63.8451%" y="821" width="0.0525%" height="15" fill="rgb(216,204,22)" fg:x="2034653351" fg:w="1673938"/><text x="64.0951%" y="831.50"></text></g><g><title>clock_gettime (38,403,865 samples, 1.21%)</title><rect x="63.8976%" y="805" width="1.2051%" height="15" fill="rgb(214,17,3)" fg:x="2036327289" fg:w="38403865"/><text x="64.1476%" y="815.50"></text></g><g><title>__vdso_clock_gettime (38,403,865 samples, 1.21%)</title><rect x="63.8976%" y="789" width="1.2051%" height="15" fill="rgb(212,111,17)" fg:x="2036327289" fg:w="38403865"/><text x="64.1476%" y="799.50"></text></g><g><title>calloop::sys::Poll::poll (66,867,793 samples, 2.10%)</title><rect x="63.0569%" y="837" width="2.0982%" height="15" fill="rgb(221,157,24)" fg:x="2009535357" fg:w="66867793"/><text x="63.3069%" y="847.50">c..</text></g><g><title>std::sys::pal::unix::time::Timespec::now (40,075,861 samples, 1.26%)</title><rect x="63.8976%" y="821" width="1.2575%" height="15" fill="rgb(252,16,13)" fg:x="2036327289" fg:w="40075861"/><text x="64.1476%" y="831.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1,671,996 samples, 0.05%)</title><rect x="65.1027%" y="805" width="0.0525%" height="15" fill="rgb(221,62,2)" fg:x="2074731154" fg:w="1671996"/><text x="65.3527%" y="815.50"></text></g><g><title>calloop_wayland_source::flush_queue (5,014,446 samples, 0.16%)</title><rect x="65.1551%" y="837" width="0.1573%" height="15" fill="rgb(247,87,22)" fg:x="2076403150" fg:w="5014446"/><text x="65.4051%" y="847.50"></text></g><g><title>wayland_client::event_queue::EventQueue&lt;State&gt;::flush (1,672,357 samples, 0.05%)</title><rect x="65.2600%" y="821" width="0.0525%" height="15" fill="rgb(215,73,9)" fg:x="2079745239" fg:w="1672357"/><text x="65.5100%" y="831.50"></text></g><g><title>core::alloc::layout::Layout::is_size_align_valid (5,018,878 samples, 0.16%)</title><rect x="65.3125%" y="837" width="0.1575%" height="15" fill="rgb(207,175,33)" fg:x="2081417596" fg:w="5018878"/><text x="65.5625%" y="847.50"></text></g><g><title>core::ptr::alignment::Alignment::new (5,018,878 samples, 0.16%)</title><rect x="65.3125%" y="821" width="0.1575%" height="15" fill="rgb(243,129,54)" fg:x="2081417596" fg:w="5018878"/><text x="65.5625%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,390,200 samples, 0.04%)</title><rect x="65.4700%" y="837" width="0.0436%" height="15" fill="rgb(227,119,45)" fg:x="2086436474" fg:w="1390200"/><text x="65.7200%" y="847.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (1,390,200 samples, 0.04%)</title><rect x="65.4700%" y="821" width="0.0436%" height="15" fill="rgb(205,109,36)" fg:x="2086436474" fg:w="1390200"/><text x="65.7200%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,390,200 samples, 0.04%)</title><rect x="65.4700%" y="805" width="0.0436%" height="15" fill="rgb(205,6,39)" fg:x="2086436474" fg:w="1390200"/><text x="65.7200%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,390,200 samples, 0.04%)</title><rect x="65.4700%" y="789" width="0.0436%" height="15" fill="rgb(221,32,16)" fg:x="2086436474" fg:w="1390200"/><text x="65.7200%" y="799.50"></text></g><g><title>[libVkLayer_khronos_validation.so] (584,869 samples, 0.02%)</title><rect x="65.5136%" y="725" width="0.0184%" height="15" fill="rgb(228,144,50)" fg:x="2087826674" fg:w="584869"/><text x="65.7636%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (584,869 samples, 0.02%)</title><rect x="65.5136%" y="709" width="0.0184%" height="15" fill="rgb(229,201,53)" fg:x="2087826674" fg:w="584869"/><text x="65.7636%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (584,869 samples, 0.02%)</title><rect x="65.5136%" y="693" width="0.0184%" height="15" fill="rgb(249,153,27)" fg:x="2087826674" fg:w="584869"/><text x="65.7636%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (1,630,281 samples, 0.05%)</title><rect x="65.6403%" y="581" width="0.0512%" height="15" fill="rgb(227,106,25)" fg:x="2091863752" fg:w="1630281"/><text x="65.8903%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (1,630,281 samples, 0.05%)</title><rect x="65.6403%" y="565" width="0.0512%" height="15" fill="rgb(230,65,29)" fg:x="2091863752" fg:w="1630281"/><text x="65.8903%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (1,548,255 samples, 0.05%)</title><rect x="65.6428%" y="549" width="0.0486%" height="15" fill="rgb(221,57,46)" fg:x="2091945778" fg:w="1548255"/><text x="65.8928%" y="559.50"></text></g><g><title>clock_gettime (929,430 samples, 0.03%)</title><rect x="65.6623%" y="533" width="0.0292%" height="15" fill="rgb(229,161,17)" fg:x="2092564603" fg:w="929430"/><text x="65.9123%" y="543.50"></text></g><g><title>__vdso_clock_gettime (929,430 samples, 0.03%)</title><rect x="65.6623%" y="517" width="0.0292%" height="15" fill="rgb(222,213,11)" fg:x="2092564603" fg:w="929430"/><text x="65.9123%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (3,653,923 samples, 0.11%)</title><rect x="65.5803%" y="613" width="0.1147%" height="15" fill="rgb(235,35,13)" fg:x="2089951915" fg:w="3653923"/><text x="65.8303%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (3,571,927 samples, 0.11%)</title><rect x="65.5828%" y="597" width="0.1121%" height="15" fill="rgb(233,158,34)" fg:x="2090033911" fg:w="3571927"/><text x="65.8328%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (5,011,406 samples, 0.16%)</title><rect x="65.5803%" y="629" width="0.1573%" height="15" fill="rgb(215,151,48)" fg:x="2089951915" fg:w="5011406"/><text x="65.8303%" y="639.50"></text></g><g><title>dlopen (1,357,483 samples, 0.04%)</title><rect x="65.6949%" y="613" width="0.0426%" height="15" fill="rgb(229,84,14)" fg:x="2093605838" fg:w="1357483"/><text x="65.9449%" y="623.50"></text></g><g><title>[libc.so.6] (1,357,483 samples, 0.04%)</title><rect x="65.6949%" y="597" width="0.0426%" height="15" fill="rgb(229,68,14)" fg:x="2093605838" fg:w="1357483"/><text x="65.9449%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,357,483 samples, 0.04%)</title><rect x="65.6949%" y="581" width="0.0426%" height="15" fill="rgb(243,106,26)" fg:x="2093605838" fg:w="1357483"/><text x="65.9449%" y="591.50"></text></g><g><title>_dl_catch_exception (1,357,483 samples, 0.04%)</title><rect x="65.6949%" y="565" width="0.0426%" height="15" fill="rgb(206,45,38)" fg:x="2093605838" fg:w="1357483"/><text x="65.9449%" y="575.50"></text></g><g><title>[libc.so.6] (1,357,483 samples, 0.04%)</title><rect x="65.6949%" y="549" width="0.0426%" height="15" fill="rgb(226,6,15)" fg:x="2093605838" fg:w="1357483"/><text x="65.9449%" y="559.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,357,483 samples, 0.04%)</title><rect x="65.6949%" y="533" width="0.0426%" height="15" fill="rgb(232,22,54)" fg:x="2093605838" fg:w="1357483"/><text x="65.9449%" y="543.50"></text></g><g><title>_dl_catch_exception (1,357,483 samples, 0.04%)</title><rect x="65.6949%" y="517" width="0.0426%" height="15" fill="rgb(229,222,32)" fg:x="2093605838" fg:w="1357483"/><text x="65.9449%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,357,483 samples, 0.04%)</title><rect x="65.6949%" y="501" width="0.0426%" height="15" fill="rgb(228,62,29)" fg:x="2093605838" fg:w="1357483"/><text x="65.9449%" y="511.50"></text></g><g><title>_dl_catch_exception (1,357,483 samples, 0.04%)</title><rect x="65.6949%" y="485" width="0.0426%" height="15" fill="rgb(251,103,34)" fg:x="2093605838" fg:w="1357483"/><text x="65.9449%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1,357,483 samples, 0.04%)</title><rect x="65.6949%" y="469" width="0.0426%" height="15" fill="rgb(233,12,30)" fg:x="2093605838" fg:w="1357483"/><text x="65.9449%" y="479.50"></text></g><g><title>[libnvidia-rtcore.so.575.57.08] (1,357,483 samples, 0.04%)</title><rect x="65.6949%" y="453" width="0.0426%" height="15" fill="rgb(238,52,0)" fg:x="2093605838" fg:w="1357483"/><text x="65.9449%" y="463.50"></text></g><g><title>[libnvidia-rtcore.so.575.57.08] (1,357,483 samples, 0.04%)</title><rect x="65.6949%" y="437" width="0.0426%" height="15" fill="rgb(223,98,5)" fg:x="2093605838" fg:w="1357483"/><text x="65.9449%" y="447.50"></text></g><g><title>[libnvidia-rtcore.so.575.57.08] (1,357,483 samples, 0.04%)</title><rect x="65.6949%" y="421" width="0.0426%" height="15" fill="rgb(228,75,37)" fg:x="2093605838" fg:w="1357483"/><text x="65.9449%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once (10,409,129 samples, 0.33%)</title><rect x="65.5136%" y="837" width="0.3266%" height="15" fill="rgb(205,115,49)" fg:x="2087826674" fg:w="10409129"/><text x="65.7636%" y="847.50"></text></g><g><title>silk_engine::gfx::vulkan::gpu::GPU::_{{closure}} (10,409,129 samples, 0.33%)</title><rect x="65.5136%" y="821" width="0.3266%" height="15" fill="rgb(250,154,43)" fg:x="2087826674" fg:w="10409129"/><text x="65.7636%" y="831.50"></text></g><g><title>ash::instance::Instance::create_device (10,409,129 samples, 0.33%)</title><rect x="65.5136%" y="805" width="0.3266%" height="15" fill="rgb(226,43,29)" fg:x="2087826674" fg:w="10409129"/><text x="65.7636%" y="815.50"></text></g><g><title>vkCreateDevice (10,409,129 samples, 0.33%)</title><rect x="65.5136%" y="789" width="0.3266%" height="15" fill="rgb(249,228,39)" fg:x="2087826674" fg:w="10409129"/><text x="65.7636%" y="799.50"></text></g><g><title>[libvulkan.so.1.4.313] (10,409,129 samples, 0.33%)</title><rect x="65.5136%" y="773" width="0.3266%" height="15" fill="rgb(216,79,43)" fg:x="2087826674" fg:w="10409129"/><text x="65.7636%" y="783.50"></text></g><g><title>[libvulkan.so.1.4.313] (10,409,129 samples, 0.33%)</title><rect x="65.5136%" y="757" width="0.3266%" height="15" fill="rgb(228,95,12)" fg:x="2087826674" fg:w="10409129"/><text x="65.7636%" y="767.50"></text></g><g><title>[libVkLayer_khronos_validation.so] (10,409,129 samples, 0.33%)</title><rect x="65.5136%" y="741" width="0.3266%" height="15" fill="rgb(249,221,15)" fg:x="2087826674" fg:w="10409129"/><text x="65.7636%" y="751.50"></text></g><g><title>[libvulkan.so.1.4.313] (9,824,260 samples, 0.31%)</title><rect x="65.5319%" y="725" width="0.3083%" height="15" fill="rgb(233,34,13)" fg:x="2088411543" fg:w="9824260"/><text x="65.7819%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (9,824,260 samples, 0.31%)</title><rect x="65.5319%" y="709" width="0.3083%" height="15" fill="rgb(214,103,39)" fg:x="2088411543" fg:w="9824260"/><text x="65.7819%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (9,824,260 samples, 0.31%)</title><rect x="65.5319%" y="693" width="0.3083%" height="15" fill="rgb(251,126,39)" fg:x="2088411543" fg:w="9824260"/><text x="65.7819%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (9,824,260 samples, 0.31%)</title><rect x="65.5319%" y="677" width="0.3083%" height="15" fill="rgb(214,216,36)" fg:x="2088411543" fg:w="9824260"/><text x="65.7819%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (9,824,260 samples, 0.31%)</title><rect x="65.5319%" y="661" width="0.3083%" height="15" fill="rgb(220,221,8)" fg:x="2088411543" fg:w="9824260"/><text x="65.7819%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.575.57.08] (9,824,260 samples, 0.31%)</title><rect x="65.5319%" y="645" width="0.3083%" height="15" fill="rgb(240,216,3)" fg:x="2088411543" fg:w="9824260"/><text x="65.7819%" y="655.50"></text></g><g><title>[libnvidia-rtcore.so.575.57.08] (3,272,482 samples, 0.10%)</title><rect x="65.7375%" y="629" width="0.1027%" height="15" fill="rgb(232,218,17)" fg:x="2094963321" fg:w="3272482"/><text x="65.9875%" y="639.50"></text></g><g><title>[libnvidia-rtcore.so.575.57.08] (3,272,482 samples, 0.10%)</title><rect x="65.7375%" y="613" width="0.1027%" height="15" fill="rgb(229,163,45)" fg:x="2094963321" fg:w="3272482"/><text x="65.9875%" y="623.50"></text></g><g><title>[libnvidia-rtcore.so.575.57.08] (3,272,482 samples, 0.10%)</title><rect x="65.7375%" y="597" width="0.1027%" height="15" fill="rgb(231,110,42)" fg:x="2094963321" fg:w="3272482"/><text x="65.9875%" y="607.50"></text></g><g><title>[libnvidia-rtcore.so.575.57.08] (3,272,482 samples, 0.10%)</title><rect x="65.7375%" y="581" width="0.1027%" height="15" fill="rgb(208,170,48)" fg:x="2094963321" fg:w="3272482"/><text x="65.9875%" y="591.50"></text></g><g><title>[libnvidia-rtcore.so.575.57.08] (3,272,482 samples, 0.10%)</title><rect x="65.7375%" y="565" width="0.1027%" height="15" fill="rgb(239,116,25)" fg:x="2094963321" fg:w="3272482"/><text x="65.9875%" y="575.50"></text></g><g><title>[libnvidia-rtcore.so.575.57.08] (1,856,222 samples, 0.06%)</title><rect x="65.7820%" y="549" width="0.0582%" height="15" fill="rgb(219,200,50)" fg:x="2096379581" fg:w="1856222"/><text x="66.0320%" y="559.50"></text></g><g><title>[libnvidia-rtcore.so.575.57.08] (1,856,222 samples, 0.06%)</title><rect x="65.7820%" y="533" width="0.0582%" height="15" fill="rgb(245,200,0)" fg:x="2096379581" fg:w="1856222"/><text x="66.0320%" y="543.50"></text></g><g><title>snprintf (1,856,222 samples, 0.06%)</title><rect x="65.7820%" y="517" width="0.0582%" height="15" fill="rgb(245,119,33)" fg:x="2096379581" fg:w="1856222"/><text x="66.0320%" y="527.50"></text></g><g><title>[libc.so.6] (1,856,222 samples, 0.06%)</title><rect x="65.7820%" y="501" width="0.0582%" height="15" fill="rgb(231,125,12)" fg:x="2096379581" fg:w="1856222"/><text x="66.0320%" y="511.50"></text></g><g><title>[libc.so.6] (1,856,222 samples, 0.06%)</title><rect x="65.7820%" y="485" width="0.0582%" height="15" fill="rgb(216,96,41)" fg:x="2096379581" fg:w="1856222"/><text x="66.0320%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (10,586,389 samples, 0.33%)</title><rect x="65.8402%" y="837" width="0.3322%" height="15" fill="rgb(248,43,45)" fg:x="2098235803" fg:w="10586389"/><text x="66.0902%" y="847.50"></text></g><g><title>&lt;tracing::span::EnteredSpan as core::ops::drop::Drop&gt;::drop (1,673,308 samples, 0.05%)</title><rect x="66.1199%" y="821" width="0.0525%" height="15" fill="rgb(217,222,7)" fg:x="2107148884" fg:w="1673308"/><text x="66.3699%" y="831.50"></text></g><g><title>tracing::span::Span::do_exit (1,673,308 samples, 0.05%)</title><rect x="66.1199%" y="805" width="0.0525%" height="15" fill="rgb(233,28,6)" fg:x="2107148884" fg:w="1673308"/><text x="66.3699%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1,673,308 samples, 0.05%)</title><rect x="66.1199%" y="789" width="0.0525%" height="15" fill="rgb(231,218,15)" fg:x="2107148884" fg:w="1673308"/><text x="66.3699%" y="799.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::new (1,396,302 samples, 0.04%)</title><rect x="66.1724%" y="837" width="0.0438%" height="15" fill="rgb(226,171,48)" fg:x="2108822192" fg:w="1396302"/><text x="66.4224%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2,703,330 samples, 0.08%)</title><rect x="66.3066%" y="757" width="0.0848%" height="15" fill="rgb(235,201,9)" fg:x="2113099510" fg:w="2703330"/><text x="66.5566%" y="767.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::new (2,662,086 samples, 0.08%)</title><rect x="66.3914%" y="741" width="0.0835%" height="15" fill="rgb(217,80,15)" fg:x="2115802840" fg:w="2662086"/><text x="66.6414%" y="751.50"></text></g><g><title>gimli::read::abbrev::AttributeSpecification::parse (2,531,659 samples, 0.08%)</title><rect x="66.5640%" y="725" width="0.0794%" height="15" fill="rgb(219,152,8)" fg:x="2121303555" fg:w="2531659"/><text x="66.8140%" y="735.50"></text></g><g><title>gimli::read::reader::Reader::read_uleb128_u16 (2,531,659 samples, 0.08%)</title><rect x="66.5640%" y="709" width="0.0794%" height="15" fill="rgb(243,107,38)" fg:x="2121303555" fg:w="2531659"/><text x="66.8140%" y="719.50"></text></g><g><title>gimli::leb128::read::u16 (2,531,659 samples, 0.08%)</title><rect x="66.5640%" y="693" width="0.0794%" height="15" fill="rgb(231,17,5)" fg:x="2121303555" fg:w="2531659"/><text x="66.8140%" y="703.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::parse (27,874,243 samples, 0.87%)</title><rect x="66.3914%" y="757" width="0.8747%" height="15" fill="rgb(209,25,54)" fg:x="2115802840" fg:w="27874243"/><text x="66.6414%" y="767.50"></text></g><g><title>gimli::read::abbrev::Abbreviation::parse_attributes (25,212,157 samples, 0.79%)</title><rect x="66.4750%" y="741" width="0.7911%" height="15" fill="rgb(219,0,2)" fg:x="2118464926" fg:w="25212157"/><text x="66.7250%" y="751.50"></text></g><g><title>gimli::read::abbrev::Attributes::push (19,841,869 samples, 0.62%)</title><rect x="66.6435%" y="725" width="0.6226%" height="15" fill="rgb(246,9,5)" fg:x="2123835214" fg:w="19841869"/><text x="66.8935%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7,373,461 samples, 0.23%)</title><rect x="67.0347%" y="709" width="0.2314%" height="15" fill="rgb(226,159,4)" fg:x="2136303622" fg:w="7373461"/><text x="67.2847%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (7,373,461 samples, 0.23%)</title><rect x="67.0347%" y="693" width="0.2314%" height="15" fill="rgb(219,175,34)" fg:x="2136303622" fg:w="7373461"/><text x="67.2847%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (7,373,461 samples, 0.23%)</title><rect x="67.0347%" y="677" width="0.2314%" height="15" fill="rgb(236,10,46)" fg:x="2136303622" fg:w="7373461"/><text x="67.2847%" y="687.50"></text></g><g><title>realloc (5,511,043 samples, 0.17%)</title><rect x="67.0932%" y="661" width="0.1729%" height="15" fill="rgb(240,211,16)" fg:x="2138166040" fg:w="5511043"/><text x="67.3432%" y="671.50"></text></g><g><title>[libc.so.6] (2,868,554 samples, 0.09%)</title><rect x="67.1761%" y="645" width="0.0900%" height="15" fill="rgb(205,3,43)" fg:x="2140808529" fg:w="2868554"/><text x="67.4261%" y="655.50"></text></g><g><title>[libc.so.6] (2,868,554 samples, 0.09%)</title><rect x="67.1761%" y="629" width="0.0900%" height="15" fill="rgb(245,7,22)" fg:x="2140808529" fg:w="2868554"/><text x="67.4261%" y="639.50"></text></g><g><title>malloc (1,116,365 samples, 0.04%)</title><rect x="67.3504%" y="693" width="0.0350%" height="15" fill="rgb(239,132,32)" fg:x="2146362394" fg:w="1116365"/><text x="67.6004%" y="703.50"></text></g><g><title>gimli::read::dwarf::Dwarf&lt;R&gt;::abbreviations (44,391,701 samples, 1.39%)</title><rect x="66.2162%" y="821" width="1.3930%" height="15" fill="rgb(228,202,34)" fg:x="2110218494" fg:w="44391701"/><text x="66.4662%" y="831.50"></text></g><g><title>gimli::read::abbrev::AbbreviationsCache::get (44,391,701 samples, 1.39%)</title><rect x="66.2162%" y="805" width="1.3930%" height="15" fill="rgb(254,200,22)" fg:x="2110218494" fg:w="44391701"/><text x="66.4662%" y="815.50"></text></g><g><title>gimli::read::abbrev::DebugAbbrev&lt;R&gt;::abbreviations (44,391,701 samples, 1.39%)</title><rect x="66.2162%" y="789" width="1.3930%" height="15" fill="rgb(219,10,39)" fg:x="2110218494" fg:w="44391701"/><text x="66.4662%" y="799.50"></text></g><g><title>gimli::read::abbrev::Abbreviations::parse (44,391,701 samples, 1.39%)</title><rect x="66.2162%" y="773" width="1.3930%" height="15" fill="rgb(226,210,39)" fg:x="2110218494" fg:w="44391701"/><text x="66.4662%" y="783.50"></text></g><g><title>gimli::read::abbrev::Abbreviations::insert (10,933,112 samples, 0.34%)</title><rect x="67.2661%" y="757" width="0.3431%" height="15" fill="rgb(208,219,16)" fg:x="2143677083" fg:w="10933112"/><text x="67.5161%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8,247,801 samples, 0.26%)</title><rect x="67.3504%" y="741" width="0.2588%" height="15" fill="rgb(216,158,51)" fg:x="2146362394" fg:w="8247801"/><text x="67.6004%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (8,247,801 samples, 0.26%)</title><rect x="67.3504%" y="725" width="0.2588%" height="15" fill="rgb(233,14,44)" fg:x="2146362394" fg:w="8247801"/><text x="67.6004%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (8,247,801 samples, 0.26%)</title><rect x="67.3504%" y="709" width="0.2588%" height="15" fill="rgb(237,97,39)" fg:x="2146362394" fg:w="8247801"/><text x="67.6004%" y="719.50"></text></g><g><title>realloc (7,131,436 samples, 0.22%)</title><rect x="67.3854%" y="693" width="0.2238%" height="15" fill="rgb(218,198,43)" fg:x="2147478759" fg:w="7131436"/><text x="67.6354%" y="703.50"></text></g><g><title>[libc.so.6] (7,131,436 samples, 0.22%)</title><rect x="67.3854%" y="677" width="0.2238%" height="15" fill="rgb(231,104,20)" fg:x="2147478759" fg:w="7131436"/><text x="67.6354%" y="687.50"></text></g><g><title>[libc.so.6] (4,272,440 samples, 0.13%)</title><rect x="67.4751%" y="661" width="0.1341%" height="15" fill="rgb(254,36,13)" fg:x="2150337755" fg:w="4272440"/><text x="67.7251%" y="671.50"></text></g><g><title>[libc.so.6] (2,852,733 samples, 0.09%)</title><rect x="67.5197%" y="645" width="0.0895%" height="15" fill="rgb(248,14,50)" fg:x="2151757462" fg:w="2852733"/><text x="67.7697%" y="655.50"></text></g><g><title>gimli::read::dwarf::Unit&lt;R&gt;::new (45,964,096 samples, 1.44%)</title><rect x="66.2162%" y="837" width="1.4423%" height="15" fill="rgb(217,107,29)" fg:x="2110218494" fg:w="45964096"/><text x="66.4662%" y="847.50"></text></g><g><title>gimli::read::dwarf::Unit&lt;R&gt;::new_with_abbreviations (1,572,395 samples, 0.05%)</title><rect x="67.6092%" y="821" width="0.0493%" height="15" fill="rgb(251,169,33)" fg:x="2154610195" fg:w="1572395"/><text x="67.8592%" y="831.50"></text></g><g><title>gimli::read::unit::parse_attribute (2,887,048 samples, 0.09%)</title><rect x="67.6585%" y="837" width="0.0906%" height="15" fill="rgb(217,108,32)" fg:x="2156182590" fg:w="2887048"/><text x="67.9085%" y="847.50"></text></g><g><title>gimli::read::reader::Reader::read_offset (2,887,048 samples, 0.09%)</title><rect x="67.6585%" y="821" width="0.0906%" height="15" fill="rgb(219,66,42)" fg:x="2156182590" fg:w="2887048"/><text x="67.9085%" y="831.50"></text></g><g><title>gimli::read::reader::Reader::read_word (2,887,048 samples, 0.09%)</title><rect x="67.6585%" y="805" width="0.0906%" height="15" fill="rgb(206,180,7)" fg:x="2156182590" fg:w="2887048"/><text x="67.9085%" y="815.50"></text></g><g><title>gimli::read::reader::Reader::read_u32 (2,887,048 samples, 0.09%)</title><rect x="67.6585%" y="789" width="0.0906%" height="15" fill="rgb(208,226,31)" fg:x="2156182590" fg:w="2887048"/><text x="67.9085%" y="799.50"></text></g><g><title>gimli::read::reader::Reader::read_u8_array (2,887,048 samples, 0.09%)</title><rect x="67.6585%" y="773" width="0.0906%" height="15" fill="rgb(218,26,49)" fg:x="2156182590" fg:w="2887048"/><text x="67.9085%" y="783.50"></text></g><g><title>&lt;gimli::read::endian_slice::EndianSlice&lt;Endian&gt; as gimli::read::reader::Reader&gt;::read_slice (2,887,048 samples, 0.09%)</title><rect x="67.6585%" y="757" width="0.0906%" height="15" fill="rgb(233,197,48)" fg:x="2156182590" fg:w="2887048"/><text x="67.9085%" y="767.50"></text></g><g><title>gimli::read::endian_slice::EndianSlice&lt;Endian&gt;::read_slice (2,887,048 samples, 0.09%)</title><rect x="67.6585%" y="741" width="0.0906%" height="15" fill="rgb(252,181,51)" fg:x="2156182590" fg:w="2887048"/><text x="67.9085%" y="751.50"></text></g><g><title>gimli::read::unit::skip_attributes (5,636,632 samples, 0.18%)</title><rect x="67.7491%" y="837" width="0.1769%" height="15" fill="rgb(253,90,19)" fg:x="2159069638" fg:w="5636632"/><text x="67.9991%" y="847.50"></text></g><g><title>gimli::read::abbrev::get_attribute_size (5,636,632 samples, 0.18%)</title><rect x="67.7491%" y="821" width="0.1769%" height="15" fill="rgb(215,171,30)" fg:x="2159069638" fg:w="5636632"/><text x="67.9991%" y="831.50"></text></g><g><title>ahash::operations::folded_multiply (3,344,157 samples, 0.10%)</title><rect x="67.9785%" y="741" width="0.1049%" height="15" fill="rgb(214,222,9)" fg:x="2166380585" fg:w="3344157"/><text x="68.2285%" y="751.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (3,344,157 samples, 0.10%)</title><rect x="67.9785%" y="725" width="0.1049%" height="15" fill="rgb(223,3,22)" fg:x="2166380585" fg:w="3344157"/><text x="68.2285%" y="735.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (8,374,017 samples, 0.26%)</title><rect x="67.9785%" y="757" width="0.2628%" height="15" fill="rgb(225,196,46)" fg:x="2166380585" fg:w="8374017"/><text x="68.2285%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5,029,860 samples, 0.16%)</title><rect x="68.0834%" y="741" width="0.1578%" height="15" fill="rgb(209,110,37)" fg:x="2169724742" fg:w="5029860"/><text x="68.3334%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (16,517,418 samples, 0.52%)</title><rect x="67.9785%" y="821" width="0.5183%" height="15" fill="rgb(249,89,12)" fg:x="2166380585" fg:w="16517418"/><text x="68.2285%" y="831.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::hash_one (16,517,418 samples, 0.52%)</title><rect x="67.9785%" y="805" width="0.5183%" height="15" fill="rgb(226,27,33)" fg:x="2166380585" fg:w="16517418"/><text x="68.2285%" y="815.50"></text></g><g><title>ahash::random_state::RandomState::hash_one (16,517,418 samples, 0.52%)</title><rect x="67.9785%" y="789" width="0.5183%" height="15" fill="rgb(213,82,22)" fg:x="2166380585" fg:w="16517418"/><text x="68.2285%" y="799.50"></text></g><g><title>&lt;T as ahash::specialize::CallHasher&gt;::get_hash (16,517,418 samples, 0.52%)</title><rect x="67.9785%" y="773" width="0.5183%" height="15" fill="rgb(248,140,0)" fg:x="2166380585" fg:w="16517418"/><text x="68.2285%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8,143,401 samples, 0.26%)</title><rect x="68.2413%" y="757" width="0.2555%" height="15" fill="rgb(228,106,3)" fg:x="2174754602" fg:w="8143401"/><text x="68.4913%" y="767.50"></text></g><g><title>&lt;winit::platform_impl::linux::WindowId as core::hash::Hash&gt;::hash (8,143,401 samples, 0.26%)</title><rect x="68.2413%" y="741" width="0.2555%" height="15" fill="rgb(209,23,37)" fg:x="2174754602" fg:w="8143401"/><text x="68.4913%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (8,143,401 samples, 0.26%)</title><rect x="68.2413%" y="725" width="0.2555%" height="15" fill="rgb(241,93,50)" fg:x="2174754602" fg:w="8143401"/><text x="68.4913%" y="735.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (8,143,401 samples, 0.26%)</title><rect x="68.2413%" y="709" width="0.2555%" height="15" fill="rgb(253,46,43)" fg:x="2174754602" fg:w="8143401"/><text x="68.4913%" y="719.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (8,143,401 samples, 0.26%)</title><rect x="68.2413%" y="693" width="0.2555%" height="15" fill="rgb(226,206,43)" fg:x="2174754602" fg:w="8143401"/><text x="68.4913%" y="703.50"></text></g><g><title>ahash::operations::folded_multiply (4,820,357 samples, 0.15%)</title><rect x="68.3456%" y="677" width="0.1513%" height="15" fill="rgb(217,54,7)" fg:x="2178077646" fg:w="4820357"/><text x="68.5956%" y="687.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (4,820,357 samples, 0.15%)</title><rect x="68.3456%" y="661" width="0.1513%" height="15" fill="rgb(223,5,52)" fg:x="2178077646" fg:w="4820357"/><text x="68.5956%" y="671.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,672,515 samples, 0.05%)</title><rect x="68.9476%" y="773" width="0.0525%" height="15" fill="rgb(206,52,46)" fg:x="2197263783" fg:w="1672515"/><text x="69.1976%" y="783.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1,672,515 samples, 0.05%)</title><rect x="68.9476%" y="757" width="0.0525%" height="15" fill="rgb(253,136,11)" fg:x="2197263783" fg:w="1672515"/><text x="69.1976%" y="767.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (1,672,515 samples, 0.05%)</title><rect x="68.9476%" y="741" width="0.0525%" height="15" fill="rgb(208,106,33)" fg:x="2197263783" fg:w="1672515"/><text x="69.1976%" y="751.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (1,672,515 samples, 0.05%)</title><rect x="68.9476%" y="725" width="0.0525%" height="15" fill="rgb(206,54,4)" fg:x="2197263783" fg:w="1672515"/><text x="69.1976%" y="735.50"></text></g><g><title>core::intrinsics::likely (6,690,861 samples, 0.21%)</title><rect x="69.0001%" y="773" width="0.2100%" height="15" fill="rgb(213,3,15)" fg:x="2198936298" fg:w="6690861"/><text x="69.2501%" y="783.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load (11,705,911 samples, 0.37%)</title><rect x="69.2100%" y="773" width="0.3673%" height="15" fill="rgb(252,211,39)" fg:x="2205627159" fg:w="11705911"/><text x="69.4600%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (11,705,911 samples, 0.37%)</title><rect x="69.2100%" y="757" width="0.3673%" height="15" fill="rgb(223,6,36)" fg:x="2205627159" fg:w="11705911"/><text x="69.4600%" y="767.50"></text></g><g><title>core::ptr::copy_nonoverlapping (11,705,911 samples, 0.37%)</title><rect x="69.2100%" y="741" width="0.3673%" height="15" fill="rgb(252,169,45)" fg:x="2205627159" fg:w="11705911"/><text x="69.4600%" y="751.50"></text></g><g><title>core::ptr::copy_nonoverlapping::precondition_check (10,033,755 samples, 0.31%)</title><rect x="69.2625%" y="725" width="0.3148%" height="15" fill="rgb(212,48,26)" fg:x="2207299315" fg:w="10033755"/><text x="69.5125%" y="735.50"></text></g><g><title>core::ub_checks::maybe_is_nonoverlapping (10,033,755 samples, 0.31%)</title><rect x="69.2625%" y="709" width="0.3148%" height="15" fill="rgb(251,102,48)" fg:x="2207299315" fg:w="10033755"/><text x="69.5125%" y="719.50"></text></g><g><title>core::ub_checks::maybe_is_nonoverlapping::runtime (10,033,755 samples, 0.31%)</title><rect x="69.2625%" y="693" width="0.3148%" height="15" fill="rgb(243,208,16)" fg:x="2207299315" fg:w="10033755"/><text x="69.5125%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::abs_diff (8,360,620 samples, 0.26%)</title><rect x="69.3150%" y="677" width="0.2623%" height="15" fill="rgb(219,96,24)" fg:x="2208972450" fg:w="8360620"/><text x="69.5650%" y="687.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (5,012,007 samples, 0.16%)</title><rect x="69.5773%" y="773" width="0.1573%" height="15" fill="rgb(219,33,29)" fg:x="2217333070" fg:w="5012007"/><text x="69.8273%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5,012,007 samples, 0.16%)</title><rect x="69.5773%" y="757" width="0.1573%" height="15" fill="rgb(223,176,5)" fg:x="2217333070" fg:w="5012007"/><text x="69.8273%" y="767.50"></text></g><g><title>hashbrown::control::tag::Tag::full (11,702,288 samples, 0.37%)</title><rect x="69.7346%" y="773" width="0.3672%" height="15" fill="rgb(228,140,14)" fg:x="2222345077" fg:w="11702288"/><text x="69.9846%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (5,017,085 samples, 0.16%)</title><rect x="70.1018%" y="773" width="0.1574%" height="15" fill="rgb(217,179,31)" fg:x="2234047365" fg:w="5017085"/><text x="70.3518%" y="783.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (5,017,085 samples, 0.16%)</title><rect x="70.1018%" y="757" width="0.1574%" height="15" fill="rgb(230,9,30)" fg:x="2234047365" fg:w="5017085"/><text x="70.3518%" y="767.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (5,017,085 samples, 0.16%)</title><rect x="70.1018%" y="741" width="0.1574%" height="15" fill="rgb(230,136,20)" fg:x="2234047365" fg:w="5017085"/><text x="70.3518%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (5,017,085 samples, 0.16%)</title><rect x="70.1018%" y="725" width="0.1574%" height="15" fill="rgb(215,210,22)" fg:x="2234047365" fg:w="5017085"/><text x="70.3518%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (76,030,881 samples, 2.39%)</title><rect x="67.9260%" y="837" width="2.3858%" height="15" fill="rgb(218,43,5)" fg:x="2164706270" fg:w="76030881"/><text x="68.1760%" y="847.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (57,839,148 samples, 1.81%)</title><rect x="68.4968%" y="821" width="1.8149%" height="15" fill="rgb(216,11,5)" fg:x="2182898003" fg:w="57839148"/><text x="68.7468%" y="831.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (51,830,838 samples, 1.63%)</title><rect x="68.6853%" y="805" width="1.6264%" height="15" fill="rgb(209,82,29)" fg:x="2188906313" fg:w="51830838"/><text x="68.9353%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (46,813,907 samples, 1.47%)</title><rect x="68.8428%" y="789" width="1.4690%" height="15" fill="rgb(244,115,12)" fg:x="2193923244" fg:w="46813907"/><text x="69.0928%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner::ctrl (1,672,701 samples, 0.05%)</title><rect x="70.2592%" y="773" width="0.0525%" height="15" fill="rgb(222,82,18)" fg:x="2239064450" fg:w="1672701"/><text x="70.5092%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1,672,701 samples, 0.05%)</title><rect x="70.2592%" y="757" width="0.0525%" height="15" fill="rgb(249,227,8)" fg:x="2239064450" fg:w="1672701"/><text x="70.5092%" y="767.50"></text></g><g><title>main (501,504 samples, 0.02%)</title><rect x="70.3117%" y="837" width="0.0157%" height="15" fill="rgb(253,141,45)" fg:x="2240737151" fg:w="501504"/><text x="70.5617%" y="847.50"></text></g><g><title>std::rt::lang_start_internal (501,504 samples, 0.02%)</title><rect x="70.3117%" y="821" width="0.0157%" height="15" fill="rgb(234,184,4)" fg:x="2240737151" fg:w="501504"/><text x="70.5617%" y="831.50"></text></g><g><title>pthread_getattr_np (501,504 samples, 0.02%)</title><rect x="70.3117%" y="805" width="0.0157%" height="15" fill="rgb(218,194,23)" fg:x="2240737151" fg:w="501504"/><text x="70.5617%" y="815.50"></text></g><g><title>__getdelim (501,504 samples, 0.02%)</title><rect x="70.3117%" y="789" width="0.0157%" height="15" fill="rgb(235,66,41)" fg:x="2240737151" fg:w="501504"/><text x="70.5617%" y="799.50"></text></g><g><title>_IO_file_underflow (501,504 samples, 0.02%)</title><rect x="70.3117%" y="773" width="0.0157%" height="15" fill="rgb(245,217,1)" fg:x="2240737151" fg:w="501504"/><text x="70.5617%" y="783.50"></text></g><g><title>__read_nocancel (501,504 samples, 0.02%)</title><rect x="70.3117%" y="757" width="0.0157%" height="15" fill="rgb(229,91,1)" fg:x="2240737151" fg:w="501504"/><text x="70.5617%" y="767.50"></text></g><g><title>malloc (5,018,790 samples, 0.16%)</title><rect x="70.3275%" y="837" width="0.1575%" height="15" fill="rgb(207,101,30)" fg:x="2241238655" fg:w="5018790"/><text x="70.5775%" y="847.50"></text></g><g><title>clock_gettime (41,758,111 samples, 1.31%)</title><rect x="71.2241%" y="773" width="1.3103%" height="15" fill="rgb(223,82,49)" fg:x="2269813053" fg:w="41758111"/><text x="71.4741%" y="783.50"></text></g><g><title>__vdso_clock_gettime (40,085,317 samples, 1.26%)</title><rect x="71.2766%" y="757" width="1.2578%" height="15" fill="rgb(218,167,17)" fg:x="2271485847" fg:w="40085317"/><text x="71.5266%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (56,817,294 samples, 1.78%)</title><rect x="70.8566%" y="821" width="1.7829%" height="15" fill="rgb(208,103,14)" fg:x="2258101597" fg:w="56817294"/><text x="71.1066%" y="831.50">c..</text></g><g><title>polling::Poller::wait::_{{closure}} (55,145,919 samples, 1.73%)</title><rect x="70.9091%" y="805" width="1.7304%" height="15" fill="rgb(238,20,8)" fg:x="2259772972" fg:w="55145919"/><text x="71.1591%" y="815.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (46,780,969 samples, 1.47%)</title><rect x="71.1715%" y="789" width="1.4679%" height="15" fill="rgb(218,80,54)" fg:x="2268137922" fg:w="46780969"/><text x="71.4215%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (3,347,727 samples, 0.11%)</title><rect x="72.5344%" y="773" width="0.1050%" height="15" fill="rgb(240,144,17)" fg:x="2311571164" fg:w="3347727"/><text x="72.7844%" y="783.50"></text></g><g><title>clock_gettime (49,748,132 samples, 1.56%)</title><rect x="72.8495%" y="773" width="1.5610%" height="15" fill="rgb(245,27,50)" fg:x="2321610851" fg:w="49748132"/><text x="73.0995%" y="783.50"></text></g><g><title>__vdso_clock_gettime (49,748,132 samples, 1.56%)</title><rect x="72.8495%" y="757" width="1.5610%" height="15" fill="rgb(251,51,7)" fg:x="2321610851" fg:w="49748132"/><text x="73.0995%" y="767.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (51,433,207 samples, 1.61%)</title><rect x="72.8495%" y="789" width="1.6139%" height="15" fill="rgb(245,217,29)" fg:x="2321610851" fg:w="51433207"/><text x="73.0995%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1,685,075 samples, 0.05%)</title><rect x="74.4105%" y="773" width="0.0529%" height="15" fill="rgb(221,176,29)" fg:x="2371358983" fg:w="1685075"/><text x="74.6605%" y="783.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (1,672,946 samples, 0.05%)</title><rect x="74.4634%" y="789" width="0.0525%" height="15" fill="rgb(212,180,24)" fg:x="2373044058" fg:w="1672946"/><text x="74.7134%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (1,674,075 samples, 0.05%)</title><rect x="74.7258%" y="725" width="0.0525%" height="15" fill="rgb(254,24,2)" fg:x="2381406789" fg:w="1674075"/><text x="74.9758%" y="735.50"></text></g><g><title>core::cmp::PartialOrd::ge (1,674,075 samples, 0.05%)</title><rect x="74.7258%" y="709" width="0.0525%" height="15" fill="rgb(230,100,2)" fg:x="2381406789" fg:w="1674075"/><text x="74.9758%" y="719.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (1,674,075 samples, 0.05%)</title><rect x="74.7258%" y="693" width="0.0525%" height="15" fill="rgb(219,142,25)" fg:x="2381406789" fg:w="1674075"/><text x="74.9758%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (78,198,207 samples, 2.45%)</title><rect x="72.6395%" y="821" width="2.4538%" height="15" fill="rgb(240,73,43)" fg:x="2314918891" fg:w="78198207"/><text x="72.8895%" y="831.50">co..</text></g><g><title>polling::Poller::wait::_{{closure}} (78,198,207 samples, 2.45%)</title><rect x="72.6395%" y="805" width="2.4538%" height="15" fill="rgb(214,114,15)" fg:x="2314918891" fg:w="78198207"/><text x="72.8895%" y="815.50">po..</text></g><g><title>std::time::Instant::duration_since (18,400,094 samples, 0.58%)</title><rect x="74.5159%" y="789" width="0.5774%" height="15" fill="rgb(207,130,4)" fg:x="2374717004" fg:w="18400094"/><text x="74.7659%" y="799.50"></text></g><g><title>std::time::Instant::checked_duration_since (18,400,094 samples, 0.58%)</title><rect x="74.5159%" y="773" width="0.5774%" height="15" fill="rgb(221,25,40)" fg:x="2374717004" fg:w="18400094"/><text x="74.7659%" y="783.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (18,400,094 samples, 0.58%)</title><rect x="74.5159%" y="757" width="0.5774%" height="15" fill="rgb(241,184,7)" fg:x="2374717004" fg:w="18400094"/><text x="74.7659%" y="767.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (16,727,033 samples, 0.52%)</title><rect x="74.5684%" y="741" width="0.5249%" height="15" fill="rgb(235,159,4)" fg:x="2376390065" fg:w="16727033"/><text x="74.8184%" y="751.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (10,036,234 samples, 0.31%)</title><rect x="74.7783%" y="725" width="0.3149%" height="15" fill="rgb(214,87,48)" fg:x="2383080864" fg:w="10036234"/><text x="75.0283%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (3,345,276 samples, 0.10%)</title><rect x="74.9883%" y="709" width="0.1050%" height="15" fill="rgb(246,198,24)" fg:x="2389771822" fg:w="3345276"/><text x="75.2383%" y="719.50"></text></g><g><title>core::cmp::PartialOrd::ge (3,345,276 samples, 0.10%)</title><rect x="74.9883%" y="693" width="0.1050%" height="15" fill="rgb(209,66,40)" fg:x="2389771822" fg:w="3345276"/><text x="75.2383%" y="703.50"></text></g><g><title>&lt;std::sys::pal::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (3,345,276 samples, 0.10%)</title><rect x="74.9883%" y="677" width="0.1050%" height="15" fill="rgb(233,147,39)" fg:x="2389771822" fg:w="3345276"/><text x="75.2383%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (1,672,035 samples, 0.05%)</title><rect x="75.0408%" y="661" width="0.0525%" height="15" fill="rgb(231,145,52)" fg:x="2391445063" fg:w="1672035"/><text x="75.2908%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;()&gt;&gt; (11,720,143 samples, 0.37%)</title><rect x="75.0932%" y="821" width="0.3678%" height="15" fill="rgb(206,20,26)" fg:x="2393117098" fg:w="11720143"/><text x="75.3432%" y="831.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11,720,143 samples, 0.37%)</title><rect x="75.0932%" y="805" width="0.3678%" height="15" fill="rgb(238,220,4)" fg:x="2393117098" fg:w="11720143"/><text x="75.3432%" y="815.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (11,720,143 samples, 0.37%)</title><rect x="75.0932%" y="789" width="0.3678%" height="15" fill="rgb(252,195,42)" fg:x="2393117098" fg:w="11720143"/><text x="75.3432%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (11,720,143 samples, 0.37%)</title><rect x="75.0932%" y="773" width="0.3678%" height="15" fill="rgb(209,10,6)" fg:x="2393117098" fg:w="11720143"/><text x="75.3432%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_swap (11,720,143 samples, 0.37%)</title><rect x="75.0932%" y="757" width="0.3678%" height="15" fill="rgb(229,3,52)" fg:x="2393117098" fg:w="11720143"/><text x="75.3432%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (1,672,424 samples, 0.05%)</title><rect x="75.4610%" y="821" width="0.0525%" height="15" fill="rgb(253,49,37)" fg:x="2404837241" fg:w="1672424"/><text x="75.7110%" y="831.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (1,672,424 samples, 0.05%)</title><rect x="75.4610%" y="805" width="0.0525%" height="15" fill="rgb(240,103,49)" fg:x="2404837241" fg:w="1672424"/><text x="75.7110%" y="815.50"></text></g><g><title>tracing::span::Span::do_exit (1,672,424 samples, 0.05%)</title><rect x="75.4610%" y="789" width="0.0525%" height="15" fill="rgb(250,182,30)" fg:x="2404837241" fg:w="1672424"/><text x="75.7110%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1,672,424 samples, 0.05%)</title><rect x="75.4610%" y="773" width="0.0525%" height="15" fill="rgb(248,8,30)" fg:x="2404837241" fg:w="1672424"/><text x="75.7110%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (40,137,655 samples, 1.26%)</title><rect x="75.5135%" y="821" width="1.2595%" height="15" fill="rgb(237,120,30)" fg:x="2406509665" fg:w="40137655"/><text x="75.7635%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_swap (40,137,655 samples, 1.26%)</title><rect x="75.5135%" y="805" width="1.2595%" height="15" fill="rgb(221,146,34)" fg:x="2406509665" fg:w="40137655"/><text x="75.7635%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (3,346,263 samples, 0.11%)</title><rect x="76.7730%" y="805" width="0.1050%" height="15" fill="rgb(242,55,13)" fg:x="2446647320" fg:w="3346263"/><text x="77.0230%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3,346,263 samples, 0.11%)</title><rect x="76.7730%" y="789" width="0.1050%" height="15" fill="rgb(242,112,31)" fg:x="2446647320" fg:w="3346263"/><text x="77.0230%" y="799.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3,346,263 samples, 0.11%)</title><rect x="76.7730%" y="773" width="0.1050%" height="15" fill="rgb(249,192,27)" fg:x="2446647320" fg:w="3346263"/><text x="77.0230%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,346,263 samples, 0.11%)</title><rect x="76.7730%" y="757" width="0.1050%" height="15" fill="rgb(208,204,44)" fg:x="2446647320" fg:w="3346263"/><text x="77.0230%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,346,263 samples, 0.11%)</title><rect x="76.7730%" y="741" width="0.1050%" height="15" fill="rgb(208,93,54)" fg:x="2446647320" fg:w="3346263"/><text x="77.0230%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,346,263 samples, 0.11%)</title><rect x="76.7730%" y="725" width="0.1050%" height="15" fill="rgb(242,1,31)" fg:x="2446647320" fg:w="3346263"/><text x="77.0230%" y="735.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,346,263 samples, 0.11%)</title><rect x="76.7730%" y="709" width="0.1050%" height="15" fill="rgb(241,83,25)" fg:x="2446647320" fg:w="3346263"/><text x="77.0230%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (3,346,263 samples, 0.11%)</title><rect x="76.7730%" y="693" width="0.1050%" height="15" fill="rgb(205,169,50)" fg:x="2446647320" fg:w="3346263"/><text x="77.0230%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (3,346,263 samples, 0.11%)</title><rect x="76.7730%" y="677" width="0.1050%" height="15" fill="rgb(239,186,37)" fg:x="2446647320" fg:w="3346263"/><text x="77.0230%" y="687.50"></text></g><g><title>polling::Events::iter::_{{closure}} (3,346,263 samples, 0.11%)</title><rect x="76.7730%" y="661" width="0.1050%" height="15" fill="rgb(205,221,10)" fg:x="2446647320" fg:w="3346263"/><text x="77.0230%" y="671.50"></text></g><g><title>polling::Events::len (6,691,556 samples, 0.21%)</title><rect x="76.7730%" y="821" width="0.2100%" height="15" fill="rgb(218,196,15)" fg:x="2446647320" fg:w="6691556"/><text x="77.0230%" y="831.50"></text></g><g><title>polling::Events::iter (3,345,293 samples, 0.10%)</title><rect x="76.8780%" y="805" width="0.1050%" height="15" fill="rgb(218,196,35)" fg:x="2449993583" fg:w="3345293"/><text x="77.1280%" y="815.50"></text></g><g><title>polling::epoll::Events::iter (3,345,293 samples, 0.10%)</title><rect x="76.8780%" y="789" width="0.1050%" height="15" fill="rgb(233,63,24)" fg:x="2449993583" fg:w="3345293"/><text x="77.1280%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3,345,293 samples, 0.10%)</title><rect x="76.8780%" y="773" width="0.1050%" height="15" fill="rgb(225,8,4)" fg:x="2449993583" fg:w="3345293"/><text x="77.1280%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (3,345,293 samples, 0.10%)</title><rect x="76.8780%" y="757" width="0.1050%" height="15" fill="rgb(234,105,35)" fg:x="2449993583" fg:w="3345293"/><text x="77.1280%" y="767.50"></text></g><g><title>core::slice::raw::from_raw_parts (3,345,293 samples, 0.10%)</title><rect x="76.8780%" y="741" width="0.1050%" height="15" fill="rgb(236,21,32)" fg:x="2449993583" fg:w="3345293"/><text x="77.1280%" y="751.50"></text></g><g><title>core::slice::raw::from_raw_parts::precondition_check (3,345,293 samples, 0.10%)</title><rect x="76.8780%" y="725" width="0.1050%" height="15" fill="rgb(228,109,6)" fg:x="2449993583" fg:w="3345293"/><text x="77.1280%" y="735.50"></text></g><g><title>core::ub_checks::is_valid_allocation_size (3,345,293 samples, 0.10%)</title><rect x="76.8780%" y="709" width="0.1050%" height="15" fill="rgb(229,215,31)" fg:x="2449993583" fg:w="3345293"/><text x="77.1280%" y="719.50"></text></g><g><title>std::sync::poison::mutex::MutexGuard&lt;T&gt;::new (1,671,313 samples, 0.05%)</title><rect x="77.0354%" y="805" width="0.0524%" height="15" fill="rgb(221,52,54)" fg:x="2455010019" fg:w="1671313"/><text x="77.2854%" y="815.50"></text></g><g><title>std::sync::poison::Flag::guard (1,671,313 samples, 0.05%)</title><rect x="77.0354%" y="789" width="0.0524%" height="15" fill="rgb(252,129,43)" fg:x="2455010019" fg:w="1671313"/><text x="77.2854%" y="799.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::try_lock (23,414,195 samples, 0.73%)</title><rect x="76.9829%" y="821" width="0.7347%" height="15" fill="rgb(248,183,27)" fg:x="2453338876" fg:w="23414195"/><text x="77.2329%" y="831.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::try_lock (20,071,739 samples, 0.63%)</title><rect x="77.0878%" y="805" width="0.6298%" height="15" fill="rgb(250,0,22)" fg:x="2456681332" fg:w="20071739"/><text x="77.3378%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (20,071,739 samples, 0.63%)</title><rect x="77.0878%" y="789" width="0.6298%" height="15" fill="rgb(213,166,10)" fg:x="2456681332" fg:w="20071739"/><text x="77.3378%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (20,071,739 samples, 0.63%)</title><rect x="77.0878%" y="773" width="0.6298%" height="15" fill="rgb(207,163,36)" fg:x="2456681332" fg:w="20071739"/><text x="77.3378%" y="783.50"></text></g><g><title>polling::Poller::wait (232,168,735 samples, 7.29%)</title><rect x="70.4850%" y="837" width="7.2852%" height="15" fill="rgb(208,122,22)" fg:x="2246257445" fg:w="232168735"/><text x="70.7350%" y="847.50">polling::P..</text></g><g><title>tracing_core::metadata::LevelFilter::current (1,673,109 samples, 0.05%)</title><rect x="77.7176%" y="821" width="0.0525%" height="15" fill="rgb(207,104,49)" fg:x="2476753071" fg:w="1673109"/><text x="77.9676%" y="831.50"></text></g><g><title>polling::epoll::Events::iter (3,346,448 samples, 0.11%)</title><rect x="77.7701%" y="837" width="0.1050%" height="15" fill="rgb(248,211,50)" fg:x="2478426180" fg:w="3346448"/><text x="78.0201%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,672,794 samples, 0.05%)</title><rect x="77.8227%" y="821" width="0.0525%" height="15" fill="rgb(217,13,45)" fg:x="2480099834" fg:w="1672794"/><text x="78.0727%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1,672,794 samples, 0.05%)</title><rect x="77.8227%" y="805" width="0.0525%" height="15" fill="rgb(211,216,49)" fg:x="2480099834" fg:w="1672794"/><text x="78.0727%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1,672,794 samples, 0.05%)</title><rect x="77.8227%" y="789" width="0.0525%" height="15" fill="rgb(221,58,53)" fg:x="2480099834" fg:w="1672794"/><text x="78.0727%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1,672,794 samples, 0.05%)</title><rect x="77.8227%" y="773" width="0.0525%" height="15" fill="rgb(220,112,41)" fg:x="2480099834" fg:w="1672794"/><text x="78.0727%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (1,672,794 samples, 0.05%)</title><rect x="77.8227%" y="757" width="0.0525%" height="15" fill="rgb(236,38,28)" fg:x="2480099834" fg:w="1672794"/><text x="78.0727%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (1,672,794 samples, 0.05%)</title><rect x="77.8227%" y="741" width="0.0525%" height="15" fill="rgb(227,195,22)" fg:x="2480099834" fg:w="1672794"/><text x="78.0727%" y="751.50"></text></g><g><title>polling::epoll::Poller::modify (8,366,444 samples, 0.26%)</title><rect x="77.8751%" y="837" width="0.2625%" height="15" fill="rgb(214,55,33)" fg:x="2481772628" fg:w="8366444"/><text x="78.1251%" y="847.50"></text></g><g><title>&lt;core::time::Duration as core::cmp::PartialEq&gt;::eq (1,672,434 samples, 0.05%)</title><rect x="79.1681%" y="821" width="0.0525%" height="15" fill="rgb(248,80,13)" fg:x="2522976377" fg:w="1672434"/><text x="79.4181%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (5,014,529 samples, 0.16%)</title><rect x="79.2206%" y="821" width="0.1574%" height="15" fill="rgb(238,52,6)" fg:x="2524648811" fg:w="5014529"/><text x="79.4706%" y="831.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (5,014,529 samples, 0.16%)</title><rect x="79.2206%" y="805" width="0.1574%" height="15" fill="rgb(224,198,47)" fg:x="2524648811" fg:w="5014529"/><text x="79.4706%" y="815.50"></text></g><g><title>tracing::span::Span::do_exit (5,014,529 samples, 0.16%)</title><rect x="79.2206%" y="789" width="0.1574%" height="15" fill="rgb(233,171,20)" fg:x="2524648811" fg:w="5014529"/><text x="79.4706%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (5,014,529 samples, 0.16%)</title><rect x="79.2206%" y="773" width="0.1574%" height="15" fill="rgb(241,30,25)" fg:x="2524648811" fg:w="5014529"/><text x="79.4706%" y="783.50"></text></g><g><title>polling::Event::readable (63,615,883 samples, 2.00%)</title><rect x="79.3779%" y="821" width="1.9962%" height="15" fill="rgb(207,171,38)" fg:x="2529663340" fg:w="63615883"/><text x="79.6279%" y="831.50">p..</text></g><g><title>polling::Event::new (63,615,883 samples, 2.00%)</title><rect x="79.3779%" y="805" width="1.9962%" height="15" fill="rgb(234,70,1)" fg:x="2529663340" fg:w="63615883"/><text x="79.6279%" y="815.50">p..</text></g><g><title>polling::epoll::Notifier::clear (44,658,384 samples, 1.40%)</title><rect x="81.3741%" y="821" width="1.4013%" height="15" fill="rgb(232,178,18)" fg:x="2593279223" fg:w="44658384"/><text x="81.6241%" y="831.50"></text></g><g><title>rustix::io::read_write::read (44,658,384 samples, 1.40%)</title><rect x="81.3741%" y="805" width="1.4013%" height="15" fill="rgb(241,78,40)" fg:x="2593279223" fg:w="44658384"/><text x="81.6241%" y="815.50"></text></g><g><title>rustix::backend::io::syscalls::read (44,658,384 samples, 1.40%)</title><rect x="81.3741%" y="789" width="1.4013%" height="15" fill="rgb(222,35,25)" fg:x="2593279223" fg:w="44658384"/><text x="81.6241%" y="799.50"></text></g><g><title>rustix::backend::arch::asm::syscall3 (44,658,384 samples, 1.40%)</title><rect x="81.3741%" y="773" width="1.4013%" height="15" fill="rgb(207,92,16)" fg:x="2593279223" fg:w="44658384"/><text x="81.6241%" y="783.50"></text></g><g><title>[unknown] (15,076,329 samples, 0.47%)</title><rect x="82.3023%" y="757" width="0.4731%" height="15" fill="rgb(216,59,51)" fg:x="2622861278" fg:w="15076329"/><text x="82.5523%" y="767.50"></text></g><g><title>&lt;rustix::buffer::SpareCapacity&lt;T&gt; as rustix::buffer::private::Sealed&lt;T&gt;&gt;::assume_init (2,324,011 samples, 0.07%)</title><rect x="82.7754%" y="805" width="0.0729%" height="15" fill="rgb(213,80,28)" fg:x="2637937607" fg:w="2324011"/><text x="83.0254%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (2,324,011 samples, 0.07%)</title><rect x="82.7754%" y="789" width="0.0729%" height="15" fill="rgb(220,93,7)" fg:x="2637937607" fg:w="2324011"/><text x="83.0254%" y="799.50"></text></g><g><title>&lt;rustix::buffer::SpareCapacity&lt;T&gt; as rustix::buffer::private::Sealed&lt;T&gt;&gt;::parts_mut (3,344,190 samples, 0.10%)</title><rect x="82.8483%" y="805" width="0.1049%" height="15" fill="rgb(225,24,44)" fg:x="2640261618" fg:w="3344190"/><text x="83.0983%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::spare_capacity_mut (3,344,190 samples, 0.10%)</title><rect x="82.8483%" y="789" width="0.1049%" height="15" fill="rgb(243,74,40)" fg:x="2640261618" fg:w="3344190"/><text x="83.0983%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1,672,742 samples, 0.05%)</title><rect x="82.9008%" y="773" width="0.0525%" height="15" fill="rgb(228,39,7)" fg:x="2641933066" fg:w="1672742"/><text x="83.1508%" y="783.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,672,639 samples, 0.05%)</title><rect x="82.9533%" y="789" width="0.0525%" height="15" fill="rgb(227,79,8)" fg:x="2643605808" fg:w="1672639"/><text x="83.2033%" y="799.50"></text></g><g><title>rustix::backend::conv::&lt;impl core::convert::From&lt;std::os::fd::owned::BorrowedFd&gt; for rustix::backend::reg::ArgReg&lt;Num&gt;&gt;::from (1,672,639 samples, 0.05%)</title><rect x="82.9533%" y="773" width="0.0525%" height="15" fill="rgb(236,58,11)" fg:x="2643605808" fg:w="1672639"/><text x="83.2033%" y="783.50"></text></g><g><title>rustix::backend::conv::raw_fd (1,672,639 samples, 0.05%)</title><rect x="82.9533%" y="757" width="0.0525%" height="15" fill="rgb(249,63,35)" fg:x="2643605808" fg:w="1672639"/><text x="83.2033%" y="767.50"></text></g><g><title>rustix::backend::arch::asm::syscall5 (39,296,670 samples, 1.23%)</title><rect x="83.0058%" y="789" width="1.2331%" height="15" fill="rgb(252,114,16)" fg:x="2645278447" fg:w="39296670"/><text x="83.2558%" y="799.50"></text></g><g><title>[unknown] (13,380,541 samples, 0.42%)</title><rect x="83.8190%" y="773" width="0.4199%" height="15" fill="rgb(254,151,24)" fg:x="2671194576" fg:w="13380541"/><text x="84.0690%" y="783.50"></text></g><g><title>rustix::event::epoll::wait (55,004,528 samples, 1.73%)</title><rect x="82.7754%" y="821" width="1.7260%" height="15" fill="rgb(253,54,39)" fg:x="2637937607" fg:w="55004528"/><text x="83.0254%" y="831.50"></text></g><g><title>rustix::backend::event::syscalls::epoll_wait (49,336,327 samples, 1.55%)</title><rect x="82.9533%" y="805" width="1.5481%" height="15" fill="rgb(243,25,45)" fg:x="2643605808" fg:w="49336327"/><text x="83.2033%" y="815.50"></text></g><g><title>rustix::backend::conv::ret_usize (8,367,018 samples, 0.26%)</title><rect x="84.2389%" y="789" width="0.2625%" height="15" fill="rgb(234,134,9)" fg:x="2684575117" fg:w="8367018"/><text x="84.4889%" y="799.50"></text></g><g><title>rustix::backend::io::errno::try_decode_usize (8,367,018 samples, 0.26%)</title><rect x="84.2389%" y="773" width="0.2625%" height="15" fill="rgb(227,166,31)" fg:x="2684575117" fg:w="8367018"/><text x="84.4889%" y="783.50"></text></g><g><title>rustix::backend::reg::RetReg&lt;Num&gt;::is_in_range (8,367,018 samples, 0.26%)</title><rect x="84.2389%" y="757" width="0.2625%" height="15" fill="rgb(245,143,41)" fg:x="2684575117" fg:w="8367018"/><text x="84.4889%" y="767.50"></text></g><g><title>core::ops::range::Range&lt;Idx&gt;::contains (8,367,018 samples, 0.26%)</title><rect x="84.2389%" y="741" width="0.2625%" height="15" fill="rgb(238,181,32)" fg:x="2684575117" fg:w="8367018"/><text x="84.4889%" y="751.50"></text></g><g><title>core::ops::range::RangeBounds::contains (8,367,018 samples, 0.26%)</title><rect x="84.2389%" y="725" width="0.2625%" height="15" fill="rgb(224,113,18)" fg:x="2684575117" fg:w="8367018"/><text x="84.4889%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (8,367,018 samples, 0.26%)</title><rect x="84.2389%" y="709" width="0.2625%" height="15" fill="rgb(240,229,28)" fg:x="2684575117" fg:w="8367018"/><text x="84.4889%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for isize&gt;::le (8,367,018 samples, 0.26%)</title><rect x="84.2389%" y="693" width="0.2625%" height="15" fill="rgb(250,185,3)" fg:x="2684575117" fg:w="8367018"/><text x="84.4889%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,673,231 samples, 0.05%)</title><rect x="84.5014%" y="789" width="0.0525%" height="15" fill="rgb(212,59,25)" fg:x="2692942135" fg:w="1673231"/><text x="84.7514%" y="799.50"></text></g><g><title>rustix::backend::conv::&lt;impl core::convert::From&lt;std::os::fd::owned::BorrowedFd&gt; for rustix::backend::reg::ArgReg&lt;Num&gt;&gt;::from (1,673,231 samples, 0.05%)</title><rect x="84.5014%" y="773" width="0.0525%" height="15" fill="rgb(221,87,20)" fg:x="2692942135" fg:w="1673231"/><text x="84.7514%" y="783.50"></text></g><g><title>rustix::backend::conv::raw_fd (1,673,231 samples, 0.05%)</title><rect x="84.5014%" y="757" width="0.0525%" height="15" fill="rgb(213,74,28)" fg:x="2692942135" fg:w="1673231"/><text x="84.7514%" y="767.50"></text></g><g><title>rustix::backend::arch::asm::syscall4 (27,621,805 samples, 0.87%)</title><rect x="84.5539%" y="789" width="0.8667%" height="15" fill="rgb(224,132,34)" fg:x="2694615366" fg:w="27621805"/><text x="84.8039%" y="799.50"></text></g><g><title>[unknown] (27,621,805 samples, 0.87%)</title><rect x="84.5539%" y="773" width="0.8667%" height="15" fill="rgb(222,101,24)" fg:x="2694615366" fg:w="27621805"/><text x="84.8039%" y="783.50"></text></g><g><title>rustix::time::timerfd::timerfd_settime (41,009,117 samples, 1.29%)</title><rect x="84.5014%" y="821" width="1.2868%" height="15" fill="rgb(254,142,4)" fg:x="2692942135" fg:w="41009117"/><text x="84.7514%" y="831.50"></text></g><g><title>rustix::backend::time::syscalls::timerfd_settime (41,009,117 samples, 1.29%)</title><rect x="84.5014%" y="805" width="1.2868%" height="15" fill="rgb(230,229,49)" fg:x="2692942135" fg:w="41009117"/><text x="84.7514%" y="815.50"></text></g><g><title>rustix::backend::conv::ret (11,714,081 samples, 0.37%)</title><rect x="85.4206%" y="789" width="0.3676%" height="15" fill="rgb(238,70,47)" fg:x="2722237171" fg:w="11714081"/><text x="85.6706%" y="799.50"></text></g><g><title>rustix::backend::io::errno::try_decode_void (11,714,081 samples, 0.37%)</title><rect x="85.4206%" y="773" width="0.3676%" height="15" fill="rgb(231,160,17)" fg:x="2722237171" fg:w="11714081"/><text x="85.6706%" y="783.50"></text></g><g><title>rustix::backend::reg::RetReg&lt;Num&gt;::is_nonzero (10,038,379 samples, 0.31%)</title><rect x="85.4732%" y="757" width="0.3150%" height="15" fill="rgb(218,68,53)" fg:x="2723912873" fg:w="10038379"/><text x="85.7232%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (10,038,379 samples, 0.31%)</title><rect x="85.4732%" y="741" width="0.3150%" height="15" fill="rgb(236,111,10)" fg:x="2723912873" fg:w="10038379"/><text x="85.7232%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (10,038,379 samples, 0.31%)</title><rect x="85.4732%" y="725" width="0.3150%" height="15" fill="rgb(224,34,41)" fg:x="2723912873" fg:w="10038379"/><text x="85.7232%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null::runtime (10,038,379 samples, 0.31%)</title><rect x="85.4732%" y="709" width="0.3150%" height="15" fill="rgb(241,118,19)" fg:x="2723912873" fg:w="10038379"/><text x="85.7232%" y="719.50"></text></g><g><title>polling::epoll::Poller::wait (248,826,787 samples, 7.81%)</title><rect x="78.1377%" y="837" width="7.8079%" height="15" fill="rgb(238,129,25)" fg:x="2490139072" fg:w="248826787"/><text x="78.3877%" y="847.50">polling::ep..</text></g><g><title>tracing_core::metadata::LevelFilter::current (5,014,607 samples, 0.16%)</title><rect x="85.7882%" y="821" width="0.1574%" height="15" fill="rgb(238,22,31)" fg:x="2733951252" fg:w="5014607"/><text x="86.0382%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3,345,035 samples, 0.10%)</title><rect x="85.8406%" y="805" width="0.1050%" height="15" fill="rgb(222,174,48)" fg:x="2735620824" fg:w="3345035"/><text x="86.0906%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (3,345,035 samples, 0.10%)</title><rect x="85.8406%" y="789" width="0.1050%" height="15" fill="rgb(206,152,40)" fg:x="2735620824" fg:w="3345035"/><text x="86.0906%" y="799.50"></text></g><g><title>pthread_mutex_lock (1,668,687 samples, 0.05%)</title><rect x="85.9456%" y="837" width="0.0524%" height="15" fill="rgb(218,99,54)" fg:x="2738965859" fg:w="1668687"/><text x="86.1956%" y="847.50"></text></g><g><title>silk_engine::App::event (3,345,757 samples, 0.10%)</title><rect x="85.9979%" y="837" width="0.1050%" height="15" fill="rgb(220,174,26)" fg:x="2740634546" fg:w="3345757"/><text x="86.2479%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,345,865 samples, 0.10%)</title><rect x="87.0001%" y="757" width="0.1050%" height="15" fill="rgb(245,116,9)" fg:x="2772571968" fg:w="3345865"/><text x="87.2501%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,345,865 samples, 0.10%)</title><rect x="87.0001%" y="741" width="0.1050%" height="15" fill="rgb(209,72,35)" fg:x="2772571968" fg:w="3345865"/><text x="87.2501%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (3,345,865 samples, 0.10%)</title><rect x="87.0001%" y="725" width="0.1050%" height="15" fill="rgb(226,126,21)" fg:x="2772571968" fg:w="3345865"/><text x="87.2501%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (3,345,865 samples, 0.10%)</title><rect x="87.0001%" y="709" width="0.1050%" height="15" fill="rgb(227,192,1)" fg:x="2772571968" fg:w="3345865"/><text x="87.2501%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (11,711,101 samples, 0.37%)</title><rect x="86.7902%" y="821" width="0.3675%" height="15" fill="rgb(237,180,29)" fg:x="2765881820" fg:w="11711101"/><text x="87.0402%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,020,953 samples, 0.16%)</title><rect x="87.0001%" y="805" width="0.1576%" height="15" fill="rgb(230,197,35)" fg:x="2772571968" fg:w="5020953"/><text x="87.2501%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5,020,953 samples, 0.16%)</title><rect x="87.0001%" y="789" width="0.1576%" height="15" fill="rgb(246,193,31)" fg:x="2772571968" fg:w="5020953"/><text x="87.2501%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (5,020,953 samples, 0.16%)</title><rect x="87.0001%" y="773" width="0.1576%" height="15" fill="rgb(241,36,4)" fg:x="2772571968" fg:w="5020953"/><text x="87.2501%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1,675,088 samples, 0.05%)</title><rect x="87.1051%" y="757" width="0.0526%" height="15" fill="rgb(241,130,17)" fg:x="2775917833" fg:w="1675088"/><text x="87.3551%" y="767.50"></text></g><g><title>core::ptr::copy_nonoverlapping (1,675,088 samples, 0.05%)</title><rect x="87.1051%" y="741" width="0.0526%" height="15" fill="rgb(206,137,32)" fg:x="2775917833" fg:w="1675088"/><text x="87.3551%" y="751.50"></text></g><g><title>[libc.so.6] (1,675,088 samples, 0.05%)</title><rect x="87.1051%" y="725" width="0.0526%" height="15" fill="rgb(237,228,51)" fg:x="2775917833" fg:w="1675088"/><text x="87.3551%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1,672,053 samples, 0.05%)</title><rect x="87.1576%" y="821" width="0.0525%" height="15" fill="rgb(243,6,42)" fg:x="2777592921" fg:w="1672053"/><text x="87.4076%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,672,053 samples, 0.05%)</title><rect x="87.1576%" y="805" width="0.0525%" height="15" fill="rgb(251,74,28)" fg:x="2777592921" fg:w="1672053"/><text x="87.4076%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,672,053 samples, 0.05%)</title><rect x="87.1576%" y="789" width="0.0525%" height="15" fill="rgb(218,20,49)" fg:x="2777592921" fg:w="1672053"/><text x="87.4076%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,672,053 samples, 0.05%)</title><rect x="87.1576%" y="773" width="0.0525%" height="15" fill="rgb(238,28,14)" fg:x="2777592921" fg:w="1672053"/><text x="87.4076%" y="783.50"></text></g><g><title>silk_engine::gfx::Gfx::reset (38,631,876 samples, 1.21%)</title><rect x="86.1029%" y="837" width="1.2122%" height="15" fill="rgb(229,40,46)" fg:x="2743980303" fg:w="38631876"/><text x="86.3529%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;[f32: 4]&gt;&gt; (3,347,205 samples, 0.11%)</title><rect x="87.2101%" y="821" width="0.1050%" height="15" fill="rgb(244,195,20)" fg:x="2779264974" fg:w="3347205"/><text x="87.4601%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;[f32: 4]&gt;&gt; (3,347,205 samples, 0.11%)</title><rect x="87.2101%" y="805" width="0.1050%" height="15" fill="rgb(253,56,35)" fg:x="2779264974" fg:w="3347205"/><text x="87.4601%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,347,205 samples, 0.11%)</title><rect x="87.2101%" y="789" width="0.1050%" height="15" fill="rgb(210,149,44)" fg:x="2779264974" fg:w="3347205"/><text x="87.4601%" y="799.50"></text></g><g><title>silk_engine::gfx::Gfx::text (3,859,879 samples, 0.12%)</title><rect x="87.3151%" y="837" width="0.1211%" height="15" fill="rgb(240,135,12)" fg:x="2782612179" fg:w="3859879"/><text x="87.5651%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3,859,879 samples, 0.12%)</title><rect x="87.3151%" y="821" width="0.1211%" height="15" fill="rgb(251,24,50)" fg:x="2782612179" fg:w="3859879"/><text x="87.5651%" y="831.50"></text></g><g><title>silk_engine::gfx::vulkan::gpu_alloc::GpuAlloc::resize_mappable_buf (3,873,483 samples, 0.12%)</title><rect x="87.4363%" y="837" width="0.1215%" height="15" fill="rgb(243,200,47)" fg:x="2786472058" fg:w="3873483"/><text x="87.6863%" y="847.50"></text></g><g><title>silk_engine::gfx::vulkan::gpu_alloc::GpuAlloc::read_mapped (3,873,483 samples, 0.12%)</title><rect x="87.4363%" y="821" width="0.1215%" height="15" fill="rgb(224,166,26)" fg:x="2786472058" fg:w="3873483"/><text x="87.6863%" y="831.50"></text></g><g><title>silk_engine::gfx::vulkan::gpu_alloc::GpuAlloc::read_mapped_off (3,873,483 samples, 0.12%)</title><rect x="87.4363%" y="805" width="0.1215%" height="15" fill="rgb(233,0,47)" fg:x="2786472058" fg:w="3873483"/><text x="87.6863%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (3,873,483 samples, 0.12%)</title><rect x="87.4363%" y="789" width="0.1215%" height="15" fill="rgb(253,80,5)" fg:x="2786472058" fg:w="3873483"/><text x="87.6863%" y="799.50"></text></g><g><title>core::ptr::copy_nonoverlapping (3,873,483 samples, 0.12%)</title><rect x="87.4363%" y="773" width="0.1215%" height="15" fill="rgb(214,133,25)" fg:x="2786472058" fg:w="3873483"/><text x="87.6863%" y="783.50"></text></g><g><title>[libc.so.6] (3,873,483 samples, 0.12%)</title><rect x="87.4363%" y="757" width="0.1215%" height="15" fill="rgb(209,27,14)" fg:x="2786472058" fg:w="3873483"/><text x="87.6863%" y="767.50"></text></g><g><title>silk_engine::gfx::vulkan::gpu_alloc::MemBlock::new (3,759,984 samples, 0.12%)</title><rect x="87.5578%" y="837" width="0.1180%" height="15" fill="rgb(219,102,51)" fg:x="2790345541" fg:w="3759984"/><text x="87.8078%" y="847.50"></text></g><g><title>ash::device::Device::allocate_memory (3,759,984 samples, 0.12%)</title><rect x="87.5578%" y="821" width="0.1180%" height="15" fill="rgb(237,18,16)" fg:x="2790345541" fg:w="3759984"/><text x="87.8078%" y="831.50"></text></g><g><title>[libVkLayer_khronos_validation.so] (3,759,984 samples, 0.12%)</title><rect x="87.5578%" y="805" width="0.1180%" height="15" fill="rgb(241,85,17)" fg:x="2790345541" fg:w="3759984"/><text x="87.8078%" y="815.50"></text></g><g><title>[libVkLayer_khronos_validation.so] (3,759,984 samples, 0.12%)</title><rect x="87.5578%" y="789" width="0.1180%" height="15" fill="rgb(236,90,42)" fg:x="2790345541" fg:w="3759984"/><text x="87.8078%" y="799.50"></text></g><g><title>[libVkLayer_khronos_validation.so] (3,759,984 samples, 0.12%)</title><rect x="87.5578%" y="773" width="0.1180%" height="15" fill="rgb(249,57,21)" fg:x="2790345541" fg:w="3759984"/><text x="87.8078%" y="783.50"></text></g><g><title>[libVkLayer_khronos_validation.so] (3,759,984 samples, 0.12%)</title><rect x="87.5578%" y="757" width="0.1180%" height="15" fill="rgb(243,12,36)" fg:x="2790345541" fg:w="3759984"/><text x="87.8078%" y="767.50"></text></g><g><title>[libVkLayer_khronos_validation.so] (3,759,984 samples, 0.12%)</title><rect x="87.5578%" y="741" width="0.1180%" height="15" fill="rgb(253,128,47)" fg:x="2790345541" fg:w="3759984"/><text x="87.8078%" y="751.50"></text></g><g><title>silk_engine::input::Input::event (3,343,618 samples, 0.10%)</title><rect x="87.6758%" y="837" width="0.1049%" height="15" fill="rgb(207,33,20)" fg:x="2794105525" fg:w="3343618"/><text x="87.9258%" y="847.50"></text></g><g><title>silk_engine::sfx::Sfx::load (7,200,375 samples, 0.23%)</title><rect x="87.7807%" y="837" width="0.2259%" height="15" fill="rgb(233,215,35)" fg:x="2797449143" fg:w="7200375"/><text x="88.0307%" y="847.50"></text></g><g><title>silk_engine::sfx::Sfx::resample (7,200,375 samples, 0.23%)</title><rect x="87.7807%" y="821" width="0.2259%" height="15" fill="rgb(249,188,52)" fg:x="2797449143" fg:w="7200375"/><text x="88.0307%" y="831.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::floor (3,381,148 samples, 0.11%)</title><rect x="87.9006%" y="805" width="0.1061%" height="15" fill="rgb(225,12,32)" fg:x="2801268370" fg:w="3381148"/><text x="88.1506%" y="815.50"></text></g><g><title>core::f64::math::floor (3,381,148 samples, 0.11%)</title><rect x="87.9006%" y="789" width="0.1061%" height="15" fill="rgb(247,98,14)" fg:x="2801268370" fg:w="3381148"/><text x="88.1506%" y="799.50"></text></g><g><title>floor (3,381,148 samples, 0.11%)</title><rect x="87.9006%" y="773" width="0.1061%" height="15" fill="rgb(247,219,48)" fg:x="2801268370" fg:w="3381148"/><text x="88.1506%" y="783.50"></text></g><g><title>compiler_builtins::math::full_availability::floor (3,381,148 samples, 0.11%)</title><rect x="87.9006%" y="757" width="0.1061%" height="15" fill="rgb(253,60,48)" fg:x="2801268370" fg:w="3381148"/><text x="88.1506%" y="767.50"></text></g><g><title>compiler_builtins::math::libm_math::floor::floor (3,381,148 samples, 0.11%)</title><rect x="87.9006%" y="741" width="0.1061%" height="15" fill="rgb(245,15,52)" fg:x="2801268370" fg:w="3381148"/><text x="88.1506%" y="751.50"></text></g><g><title>compiler_builtins::math::libm_math::generic::floor::floor (3,381,148 samples, 0.11%)</title><rect x="87.9006%" y="725" width="0.1061%" height="15" fill="rgb(220,133,28)" fg:x="2801268370" fg:w="3381148"/><text x="88.1506%" y="735.50"></text></g><g><title>compiler_builtins::math::libm_math::generic::floor::floor_status (3,381,148 samples, 0.11%)</title><rect x="87.9006%" y="709" width="0.1061%" height="15" fill="rgb(217,180,4)" fg:x="2801268370" fg:w="3381148"/><text x="88.1506%" y="719.50"></text></g><g><title>&lt;u64 as core::ops::bit::Not&gt;::not (3,381,148 samples, 0.11%)</title><rect x="87.9006%" y="693" width="0.1061%" height="15" fill="rgb(251,24,1)" fg:x="2801268370" fg:w="3381148"/><text x="88.1506%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (2,971,811 samples, 0.09%)</title><rect x="88.0837%" y="773" width="0.0933%" height="15" fill="rgb(212,185,49)" fg:x="2807106420" fg:w="2971811"/><text x="88.3337%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,971,811 samples, 0.09%)</title><rect x="88.0837%" y="757" width="0.0933%" height="15" fill="rgb(215,175,22)" fg:x="2807106420" fg:w="2971811"/><text x="88.3337%" y="767.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,731,768 samples, 0.05%)</title><rect x="88.1770%" y="725" width="0.0543%" height="15" fill="rgb(250,205,14)" fg:x="2810078231" fg:w="1731768"/><text x="88.4270%" y="735.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1,731,768 samples, 0.05%)</title><rect x="88.1770%" y="709" width="0.0543%" height="15" fill="rgb(225,211,22)" fg:x="2810078231" fg:w="1731768"/><text x="88.4270%" y="719.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (1,731,768 samples, 0.05%)</title><rect x="88.1770%" y="693" width="0.0543%" height="15" fill="rgb(251,179,42)" fg:x="2810078231" fg:w="1731768"/><text x="88.4270%" y="703.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (1,731,768 samples, 0.05%)</title><rect x="88.1770%" y="677" width="0.0543%" height="15" fill="rgb(208,216,51)" fg:x="2810078231" fg:w="1731768"/><text x="88.4270%" y="687.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load (3,410,850 samples, 0.11%)</title><rect x="88.2313%" y="725" width="0.1070%" height="15" fill="rgb(235,36,11)" fg:x="2811809999" fg:w="3410850"/><text x="88.4813%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3,410,850 samples, 0.11%)</title><rect x="88.2313%" y="709" width="0.1070%" height="15" fill="rgb(213,189,28)" fg:x="2811809999" fg:w="3410850"/><text x="88.4813%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_undefined_si128 (3,410,850 samples, 0.11%)</title><rect x="88.2313%" y="693" width="0.1070%" height="15" fill="rgb(227,203,42)" fg:x="2811809999" fg:w="3410850"/><text x="88.4813%" y="703.50"></text></g><g><title>silk_engine::util::ttf::Ttf::read_gpos::read_pair_adjustements (12,594,597 samples, 0.40%)</title><rect x="88.0067%" y="837" width="0.3952%" height="15" fill="rgb(244,72,36)" fg:x="2804649518" fg:w="12594597"/><text x="88.2567%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10,137,695 samples, 0.32%)</title><rect x="88.0837%" y="821" width="0.3181%" height="15" fill="rgb(213,53,17)" fg:x="2807106420" fg:w="10137695"/><text x="88.3337%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10,137,695 samples, 0.32%)</title><rect x="88.0837%" y="805" width="0.3181%" height="15" fill="rgb(207,167,3)" fg:x="2807106420" fg:w="10137695"/><text x="88.3337%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10,137,695 samples, 0.32%)</title><rect x="88.0837%" y="789" width="0.3181%" height="15" fill="rgb(216,98,30)" fg:x="2807106420" fg:w="10137695"/><text x="88.3337%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7,165,884 samples, 0.22%)</title><rect x="88.1770%" y="773" width="0.2249%" height="15" fill="rgb(236,123,15)" fg:x="2810078231" fg:w="7165884"/><text x="88.4270%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7,165,884 samples, 0.22%)</title><rect x="88.1770%" y="757" width="0.2249%" height="15" fill="rgb(248,81,50)" fg:x="2810078231" fg:w="7165884"/><text x="88.4270%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (7,165,884 samples, 0.22%)</title><rect x="88.1770%" y="741" width="0.2249%" height="15" fill="rgb(214,120,4)" fg:x="2810078231" fg:w="7165884"/><text x="88.4270%" y="751.50"></text></g><g><title>hashbrown::control::tag::Tag::full (2,023,266 samples, 0.06%)</title><rect x="88.3384%" y="725" width="0.0635%" height="15" fill="rgb(208,179,34)" fg:x="2815220849" fg:w="2023266"/><text x="88.5884%" y="735.50"></text></g><g><title>&lt;&amp;mut T as std::os::fd::owned::AsFd&gt;::as_fd (1,673,556 samples, 0.05%)</title><rect x="88.7686%" y="773" width="0.0525%" height="15" fill="rgb(227,140,7)" fg:x="2828932378" fg:w="1673556"/><text x="89.0186%" y="783.50"></text></g><g><title>&lt;calloop::sources::generic::NoIoDrop&lt;T&gt; as std::os::fd::owned::AsFd&gt;::as_fd (1,673,556 samples, 0.05%)</title><rect x="88.7686%" y="757" width="0.0525%" height="15" fill="rgb(214,22,6)" fg:x="2828932378" fg:w="1673556"/><text x="89.0186%" y="767.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::process_events::_{{closure}} (15,077,657 samples, 0.47%)</title><rect x="88.8211%" y="773" width="0.4731%" height="15" fill="rgb(207,137,27)" fg:x="2830605934" fg:w="15077657"/><text x="89.0711%" y="783.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::new::_{{closure}} (6,709,207 samples, 0.21%)</title><rect x="89.0837%" y="757" width="0.2105%" height="15" fill="rgb(210,8,46)" fg:x="2838974384" fg:w="6709207"/><text x="89.3337%" y="767.50"></text></g><g><title>rustix::backend::arch::asm::syscall3 (26,728,109 samples, 0.84%)</title><rect x="89.4538%" y="725" width="0.8387%" height="15" fill="rgb(240,16,54)" fg:x="2850769118" fg:w="26728109"/><text x="89.7038%" y="735.50"></text></g><g><title>[unknown] (25,054,299 samples, 0.79%)</title><rect x="89.5064%" y="709" width="0.7862%" height="15" fill="rgb(211,209,29)" fg:x="2852442928" fg:w="25054299"/><text x="89.7564%" y="719.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (82,015,161 samples, 2.57%)</title><rect x="88.4019%" y="837" width="2.5735%" height="15" fill="rgb(226,228,24)" fg:x="2817244115" fg:w="82015161"/><text x="88.6519%" y="847.50">st..</text></g><g><title>clock_gettime (70,326,898 samples, 2.21%)</title><rect x="88.7686%" y="821" width="2.2068%" height="15" fill="rgb(222,84,9)" fg:x="2828932378" fg:w="70326898"/><text x="89.0186%" y="831.50">c..</text></g><g><title>&lt;calloop::sources::generic::Generic&lt;F,E&gt; as calloop::sources::EventSource&gt;::process_events (70,326,898 samples, 2.21%)</title><rect x="88.7686%" y="805" width="2.2068%" height="15" fill="rgb(234,203,30)" fg:x="2828932378" fg:w="70326898"/><text x="89.0186%" y="815.50">&lt;..</text></g><g><title>&lt;calloop::sources::ping::eventfd::PingSource as calloop::sources::EventSource&gt;::process_events::_{{closure}} (70,326,898 samples, 2.21%)</title><rect x="88.7686%" y="789" width="2.2068%" height="15" fill="rgb(238,109,14)" fg:x="2828932378" fg:w="70326898"/><text x="89.0186%" y="799.50">&lt;..</text></g><g><title>calloop::sources::ping::eventfd::drain_ping (53,575,685 samples, 1.68%)</title><rect x="89.2943%" y="773" width="1.6811%" height="15" fill="rgb(233,206,34)" fg:x="2845683591" fg:w="53575685"/><text x="89.5443%" y="783.50"></text></g><g><title>rustix::io::read_write::read (48,490,158 samples, 1.52%)</title><rect x="89.4538%" y="757" width="1.5216%" height="15" fill="rgb(220,167,47)" fg:x="2850769118" fg:w="48490158"/><text x="89.7038%" y="767.50"></text></g><g><title>rustix::backend::io::syscalls::read (48,490,158 samples, 1.52%)</title><rect x="89.4538%" y="741" width="1.5216%" height="15" fill="rgb(238,105,10)" fg:x="2850769118" fg:w="48490158"/><text x="89.7038%" y="751.50"></text></g><g><title>rustix::backend::conv::ret_usize (21,762,049 samples, 0.68%)</title><rect x="90.2925%" y="725" width="0.6829%" height="15" fill="rgb(213,227,17)" fg:x="2877497227" fg:w="21762049"/><text x="90.5425%" y="735.50"></text></g><g><title>rustix::backend::io::errno::try_decode_usize (21,762,049 samples, 0.68%)</title><rect x="90.2925%" y="709" width="0.6829%" height="15" fill="rgb(217,132,38)" fg:x="2877497227" fg:w="21762049"/><text x="90.5425%" y="719.50"></text></g><g><title>rustix::backend::reg::RetReg&lt;Num&gt;::is_in_range (21,762,049 samples, 0.68%)</title><rect x="90.2925%" y="693" width="0.6829%" height="15" fill="rgb(242,146,4)" fg:x="2877497227" fg:w="21762049"/><text x="90.5425%" y="703.50"></text></g><g><title>core::ops::range::Range&lt;Idx&gt;::contains (21,762,049 samples, 0.68%)</title><rect x="90.2925%" y="677" width="0.6829%" height="15" fill="rgb(212,61,9)" fg:x="2877497227" fg:w="21762049"/><text x="90.5425%" y="687.50"></text></g><g><title>core::ops::range::RangeBounds::contains (21,762,049 samples, 0.68%)</title><rect x="90.2925%" y="661" width="0.6829%" height="15" fill="rgb(247,126,22)" fg:x="2877497227" fg:w="21762049"/><text x="90.5425%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (21,762,049 samples, 0.68%)</title><rect x="90.2925%" y="645" width="0.6829%" height="15" fill="rgb(220,196,2)" fg:x="2877497227" fg:w="21762049"/><text x="90.5425%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for isize&gt;::le (21,762,049 samples, 0.68%)</title><rect x="90.2925%" y="629" width="0.6829%" height="15" fill="rgb(208,46,4)" fg:x="2877497227" fg:w="21762049"/><text x="90.5425%" y="639.50"></text></g><g><title>std::time::Instant::duration_since (5,024,175 samples, 0.16%)</title><rect x="90.9754%" y="837" width="0.1577%" height="15" fill="rgb(252,104,46)" fg:x="2899259276" fg:w="5024175"/><text x="91.2254%" y="847.50"></text></g><g><title>std::time::SystemTime::checked_add (5,019,019 samples, 0.16%)</title><rect x="91.1330%" y="837" width="0.1575%" height="15" fill="rgb(237,152,48)" fg:x="2904283451" fg:w="5019019"/><text x="91.3830%" y="847.50"></text></g><g><title>std::sys::pal::unix::time::SystemTime::checked_add_duration (3,346,852 samples, 0.11%)</title><rect x="91.1855%" y="821" width="0.1050%" height="15" fill="rgb(221,59,37)" fg:x="2905955618" fg:w="3346852"/><text x="91.4355%" y="831.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::checked_add_duration (3,346,852 samples, 0.11%)</title><rect x="91.1855%" y="805" width="0.1050%" height="15" fill="rgb(209,202,51)" fg:x="2905955618" fg:w="3346852"/><text x="91.4355%" y="815.50"></text></g><g><title>core::num::&lt;impl i64&gt;::checked_add_unsigned (1,673,934 samples, 0.05%)</title><rect x="91.2380%" y="789" width="0.0525%" height="15" fill="rgb(228,81,30)" fg:x="2907628536" fg:w="1673934"/><text x="91.4880%" y="799.50"></text></g><g><title>core::num::&lt;impl i64&gt;::overflowing_add_unsigned (1,673,934 samples, 0.05%)</title><rect x="91.2380%" y="773" width="0.0525%" height="15" fill="rgb(227,42,39)" fg:x="2907628536" fg:w="1673934"/><text x="91.4880%" y="783.50"></text></g><g><title>core::num::&lt;impl i64&gt;::overflowing_add (1,673,934 samples, 0.05%)</title><rect x="91.2380%" y="757" width="0.0525%" height="15" fill="rgb(221,26,2)" fg:x="2907628536" fg:w="1673934"/><text x="91.4880%" y="767.50"></text></g><g><title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2,099,318 samples, 0.07%)</title><rect x="91.2905%" y="837" width="0.0659%" height="15" fill="rgb(254,61,31)" fg:x="2909302470" fg:w="2099318"/><text x="91.5405%" y="847.50"></text></g><g><title>wayland_backend::sys::client::Backend::flush (1,687,681 samples, 0.05%)</title><rect x="91.3564%" y="837" width="0.0530%" height="15" fill="rgb(222,173,38)" fg:x="2911401788" fg:w="1687681"/><text x="91.6064%" y="847.50"></text></g><g><title>std::sync::poison::Flag::done (5,018,391 samples, 0.16%)</title><rect x="91.6718%" y="789" width="0.1575%" height="15" fill="rgb(218,50,12)" fg:x="2921452748" fg:w="5018391"/><text x="91.9218%" y="799.50"></text></g><g><title>std::thread::panicking (3,346,627 samples, 0.11%)</title><rect x="91.7243%" y="773" width="0.1050%" height="15" fill="rgb(223,88,40)" fg:x="2923124512" fg:w="3346627"/><text x="91.9743%" y="783.50"></text></g><g><title>std::panicking::panicking (3,346,627 samples, 0.11%)</title><rect x="91.7243%" y="757" width="0.1050%" height="15" fill="rgb(237,54,19)" fg:x="2923124512" fg:w="3346627"/><text x="91.9743%" y="767.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (3,346,627 samples, 0.11%)</title><rect x="91.7243%" y="741" width="0.1050%" height="15" fill="rgb(251,129,25)" fg:x="2923124512" fg:w="3346627"/><text x="91.9743%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,673,120 samples, 0.05%)</title><rect x="91.7768%" y="725" width="0.0525%" height="15" fill="rgb(238,97,19)" fg:x="2924798019" fg:w="1673120"/><text x="92.0268%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (1,673,120 samples, 0.05%)</title><rect x="91.7768%" y="709" width="0.0525%" height="15" fill="rgb(240,169,18)" fg:x="2924798019" fg:w="1673120"/><text x="92.0268%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::poison::mutex::MutexGuard&lt;wayland_backend::sys::client_impl::ConnectionState&gt;&gt; (54,753,109 samples, 1.72%)</title><rect x="91.6718%" y="821" width="1.7181%" height="15" fill="rgb(230,187,49)" fg:x="2921452748" fg:w="54753109"/><text x="91.9218%" y="831.50"></text></g><g><title>&lt;std::sync::poison::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (54,753,109 samples, 1.72%)</title><rect x="91.6718%" y="805" width="1.7181%" height="15" fill="rgb(209,44,26)" fg:x="2921452748" fg:w="54753109"/><text x="91.9218%" y="815.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (49,734,718 samples, 1.56%)</title><rect x="91.8293%" y="789" width="1.5606%" height="15" fill="rgb(244,0,6)" fg:x="2926471139" fg:w="49734718"/><text x="92.0793%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (46,388,884 samples, 1.46%)</title><rect x="91.9343%" y="773" width="1.4556%" height="15" fill="rgb(248,18,21)" fg:x="2929816973" fg:w="46388884"/><text x="92.1843%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_swap (46,388,884 samples, 1.46%)</title><rect x="91.9343%" y="757" width="1.4556%" height="15" fill="rgb(245,180,19)" fg:x="2929816973" fg:w="46388884"/><text x="92.1843%" y="767.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerBackend::lock_state (11,705,020 samples, 0.37%)</title><rect x="93.3899%" y="821" width="0.3673%" height="15" fill="rgb(252,118,36)" fg:x="2976205857" fg:w="11705020"/><text x="93.6399%" y="831.50"></text></g><g><title>std::sync::poison::mutex::Mutex&lt;T&gt;::lock (11,705,020 samples, 0.37%)</title><rect x="93.3899%" y="805" width="0.3673%" height="15" fill="rgb(210,224,19)" fg:x="2976205857" fg:w="11705020"/><text x="93.6399%" y="815.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (11,705,020 samples, 0.37%)</title><rect x="93.3899%" y="789" width="0.3673%" height="15" fill="rgb(218,30,24)" fg:x="2976205857" fg:w="11705020"/><text x="93.6399%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (11,705,020 samples, 0.37%)</title><rect x="93.3899%" y="773" width="0.3673%" height="15" fill="rgb(219,75,50)" fg:x="2976205857" fg:w="11705020"/><text x="93.6399%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11,705,020 samples, 0.37%)</title><rect x="93.3899%" y="757" width="0.3673%" height="15" fill="rgb(234,72,50)" fg:x="2976205857" fg:w="11705020"/><text x="93.6399%" y="767.50"></text></g><g><title>wayland_sys::client::wayland_client_handle (1,672,933 samples, 0.05%)</title><rect x="93.7572%" y="821" width="0.0525%" height="15" fill="rgb(219,100,48)" fg:x="2987910877" fg:w="1672933"/><text x="94.0072%" y="831.50"></text></g><g><title>[libc.so.6] (45,297,602 samples, 1.42%)</title><rect x="94.1772%" y="805" width="1.4214%" height="15" fill="rgb(253,5,41)" fg:x="3001294809" fg:w="45297602"/><text x="94.4272%" y="815.50"></text></g><g><title>[libwayland-client.so.0.23.1] (18,767,043 samples, 0.59%)</title><rect x="95.5985%" y="805" width="0.5889%" height="15" fill="rgb(247,181,11)" fg:x="3046592411" fg:w="18767043"/><text x="95.8485%" y="815.50"></text></g><g><title>sendmsg (1,677,423 samples, 0.05%)</title><rect x="96.1348%" y="789" width="0.0526%" height="15" fill="rgb(222,223,25)" fg:x="3063682031" fg:w="1677423"/><text x="96.3848%" y="799.50"></text></g><g><title>[libc.so.6] (1,677,423 samples, 0.05%)</title><rect x="96.1348%" y="773" width="0.0526%" height="15" fill="rgb(214,198,28)" fg:x="3063682031" fg:w="1677423"/><text x="96.3848%" y="783.50"></text></g><g><title>[libc.so.6] (1,677,423 samples, 0.05%)</title><rect x="96.1348%" y="757" width="0.0526%" height="15" fill="rgb(230,46,43)" fg:x="3063682031" fg:w="1677423"/><text x="96.3848%" y="767.50"></text></g><g><title>[libc.so.6] (1,677,423 samples, 0.05%)</title><rect x="96.1348%" y="741" width="0.0526%" height="15" fill="rgb(233,65,53)" fg:x="3063682031" fg:w="1677423"/><text x="96.3848%" y="751.50"></text></g><g><title>[unknown] (1,677,423 samples, 0.05%)</title><rect x="96.1348%" y="725" width="0.0526%" height="15" fill="rgb(221,121,27)" fg:x="3063682031" fg:w="1677423"/><text x="96.3848%" y="735.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerBackend::flush (196,842,323 samples, 6.18%)</title><rect x="91.4094%" y="837" width="6.1767%" height="15" fill="rgb(247,70,47)" fg:x="2913089469" fg:w="196842323"/><text x="91.6594%" y="847.50">wayland_..</text></g><g><title>wl_display_flush (120,347,982 samples, 3.78%)</title><rect x="93.8097%" y="821" width="3.7764%" height="15" fill="rgb(228,85,35)" fg:x="2989583810" fg:w="120347982"/><text x="94.0597%" y="831.50">wl_d..</text></g><g><title>pthread_mutex_lock (44,572,338 samples, 1.40%)</title><rect x="96.1874%" y="805" width="1.3986%" height="15" fill="rgb(209,50,18)" fg:x="3065359454" fg:w="44572338"/><text x="96.4374%" y="815.50"></text></g><g><title>wl_proxy_marshal_array_constructor (1,673,145 samples, 0.05%)</title><rect x="97.6322%" y="821" width="0.0525%" height="15" fill="rgb(250,19,35)" fg:x="3111403418" fg:w="1673145"/><text x="97.8822%" y="831.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerBackend::send_request (3,701,787 samples, 0.12%)</title><rect x="97.5861%" y="837" width="0.1162%" height="15" fill="rgb(253,107,29)" fg:x="3109931792" fg:w="3701787"/><text x="97.8361%" y="847.50"></text></g><g><title>wl_proxy_set_queue (557,016 samples, 0.02%)</title><rect x="97.6847%" y="821" width="0.0175%" height="15" fill="rgb(252,179,29)" fg:x="3113076563" fg:w="557016"/><text x="97.9347%" y="831.50"></text></g><g><title>wayland_backend::sys::client_impl::InnerReadEventsGuard::try_new (5,015,151 samples, 0.16%)</title><rect x="97.7022%" y="837" width="0.1574%" height="15" fill="rgb(238,194,6)" fg:x="3113633579" fg:w="5015151"/><text x="97.9522%" y="847.50"></text></g><g><title>wayland_client::conn::Connection::flush (3,345,141 samples, 0.10%)</title><rect x="97.8596%" y="837" width="0.1050%" height="15" fill="rgb(238,164,29)" fg:x="3118648730" fg:w="3345141"/><text x="98.1096%" y="847.50"></text></g><g><title>wayland_client::conn::Connection::prepare_read (20,101,399 samples, 0.63%)</title><rect x="97.9645%" y="837" width="0.6308%" height="15" fill="rgb(224,25,9)" fg:x="3121993871" fg:w="20101399"/><text x="98.2145%" y="847.50"></text></g><g><title>wayland_backend::sys::client::Backend::prepare_read (20,101,399 samples, 0.63%)</title><rect x="97.9645%" y="821" width="0.6308%" height="15" fill="rgb(244,153,23)" fg:x="3121993871" fg:w="20101399"/><text x="98.2145%" y="831.50"></text></g><g><title>&lt;wayland_backend::sys::client_impl::InnerBackend as core::clone::Clone&gt;::clone (20,101,399 samples, 0.63%)</title><rect x="97.9645%" y="805" width="0.6308%" height="15" fill="rgb(212,203,14)" fg:x="3121993871" fg:w="20101399"/><text x="98.2145%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (20,101,399 samples, 0.63%)</title><rect x="97.9645%" y="789" width="0.6308%" height="15" fill="rgb(220,164,20)" fg:x="3121993871" fg:w="20101399"/><text x="98.2145%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (20,101,399 samples, 0.63%)</title><rect x="97.9645%" y="773" width="0.6308%" height="15" fill="rgb(222,203,48)" fg:x="3121993871" fg:w="20101399"/><text x="98.2145%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_add (20,101,399 samples, 0.63%)</title><rect x="97.9645%" y="757" width="0.6308%" height="15" fill="rgb(215,159,22)" fg:x="3121993871" fg:w="20101399"/><text x="98.2145%" y="767.50"></text></g><g><title>wayland_sys::client::wayland_client_handle (3,349,164 samples, 0.11%)</title><rect x="98.5953%" y="837" width="0.1051%" height="15" fill="rgb(216,183,47)" fg:x="3142095270" fg:w="3349164"/><text x="98.8453%" y="847.50"></text></g><g><title>[libxkbcommon.so.0.10.0] (1,571,318 samples, 0.05%)</title><rect x="98.7747%" y="741" width="0.0493%" height="15" fill="rgb(229,195,25)" fg:x="3147811680" fg:w="1571318"/><text x="99.0247%" y="751.50"></text></g><g><title>winit::platform_impl::linux::common::xkb::Context::new (4,762,494 samples, 0.15%)</title><rect x="98.7004%" y="837" width="0.1494%" height="15" fill="rgb(224,132,51)" fg:x="3145444434" fg:w="4762494"/><text x="98.9504%" y="847.50"></text></g><g><title>winit::platform_impl::linux::common::xkb::compose::XkbComposeTable::new (4,762,494 samples, 0.15%)</title><rect x="98.7004%" y="821" width="0.1494%" height="15" fill="rgb(240,63,7)" fg:x="3145444434" fg:w="4762494"/><text x="98.9504%" y="831.50"></text></g><g><title>xkb_compose_table_new_from_locale (4,762,494 samples, 0.15%)</title><rect x="98.7004%" y="805" width="0.1494%" height="15" fill="rgb(249,182,41)" fg:x="3145444434" fg:w="4762494"/><text x="98.9504%" y="815.50"></text></g><g><title>[libxkbcommon.so.0.10.0] (4,762,494 samples, 0.15%)</title><rect x="98.7004%" y="789" width="0.1494%" height="15" fill="rgb(243,47,26)" fg:x="3145444434" fg:w="4762494"/><text x="98.9504%" y="799.50"></text></g><g><title>[libxkbcommon.so.0.10.0] (4,762,494 samples, 0.15%)</title><rect x="98.7004%" y="773" width="0.1494%" height="15" fill="rgb(233,48,2)" fg:x="3145444434" fg:w="4762494"/><text x="98.9504%" y="783.50"></text></g><g><title>[libxkbcommon.so.0.10.0] (4,185,103 samples, 0.13%)</title><rect x="98.7185%" y="757" width="0.1313%" height="15" fill="rgb(244,165,34)" fg:x="3146021825" fg:w="4185103"/><text x="98.9685%" y="767.50"></text></g><g><title>xkb_keysym_from_name (823,930 samples, 0.03%)</title><rect x="98.8240%" y="741" width="0.0259%" height="15" fill="rgb(207,89,7)" fg:x="3149382998" fg:w="823930"/><text x="99.0740%" y="751.50"></text></g><g><title>winit::platform_impl::linux::common::xkb::keymap::XkbKeymap::from_fd (3,309,002 samples, 0.10%)</title><rect x="98.8498%" y="837" width="0.1038%" height="15" fill="rgb(244,117,36)" fg:x="3150206928" fg:w="3309002"/><text x="99.0998%" y="847.50"></text></g><g><title>xkb_keymap_new_from_buffer (3,309,002 samples, 0.10%)</title><rect x="98.8498%" y="821" width="0.1038%" height="15" fill="rgb(226,144,34)" fg:x="3150206928" fg:w="3309002"/><text x="99.0998%" y="831.50"></text></g><g><title>[libxkbcommon.so.0.10.0] (3,309,002 samples, 0.10%)</title><rect x="98.8498%" y="805" width="0.1038%" height="15" fill="rgb(213,23,19)" fg:x="3150206928" fg:w="3309002"/><text x="99.0998%" y="815.50"></text></g><g><title>[libxkbcommon.so.0.10.0] (3,309,002 samples, 0.10%)</title><rect x="98.8498%" y="789" width="0.1038%" height="15" fill="rgb(217,75,12)" fg:x="3150206928" fg:w="3309002"/><text x="99.0998%" y="799.50"></text></g><g><title>[libxkbcommon.so.0.10.0] (1,054,650 samples, 0.03%)</title><rect x="98.9206%" y="773" width="0.0331%" height="15" fill="rgb(224,159,17)" fg:x="3152461280" fg:w="1054650"/><text x="99.1706%" y="783.50"></text></g><g><title>[libxkbcommon.so.0.10.0] (1,054,650 samples, 0.03%)</title><rect x="98.9206%" y="757" width="0.0331%" height="15" fill="rgb(217,118,1)" fg:x="3152461280" fg:w="1054650"/><text x="99.1706%" y="767.50"></text></g><g><title>[libxkbcommon.so.0.10.0] (1,054,650 samples, 0.03%)</title><rect x="98.9206%" y="741" width="0.0331%" height="15" fill="rgb(232,180,48)" fg:x="3152461280" fg:w="1054650"/><text x="99.1706%" y="751.50"></text></g><g><title>ahash::hash_map::AHashMap&lt;K,V,S&gt;::get (1,670,518 samples, 0.05%)</title><rect x="99.3180%" y="757" width="0.0524%" height="15" fill="rgb(230,27,33)" fg:x="3165127154" fg:w="1670518"/><text x="99.5680%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,670,518 samples, 0.05%)</title><rect x="99.3180%" y="741" width="0.0524%" height="15" fill="rgb(205,31,21)" fg:x="3165127154" fg:w="1670518"/><text x="99.5680%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,670,518 samples, 0.05%)</title><rect x="99.3180%" y="725" width="0.0524%" height="15" fill="rgb(253,59,4)" fg:x="3165127154" fg:w="1670518"/><text x="99.5680%" y="735.50"></text></g><g><title>ahash::hash_map::AHashMap&lt;K,V,S&gt;::get_mut (1,672,626 samples, 0.05%)</title><rect x="99.3704%" y="757" width="0.0525%" height="15" fill="rgb(224,201,9)" fg:x="3166797672" fg:w="1672626"/><text x="99.6204%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1,672,626 samples, 0.05%)</title><rect x="99.3704%" y="741" width="0.0525%" height="15" fill="rgb(229,206,30)" fg:x="3166797672" fg:w="1672626"/><text x="99.6204%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1,672,626 samples, 0.05%)</title><rect x="99.3704%" y="725" width="0.0525%" height="15" fill="rgb(212,67,47)" fg:x="3166797672" fg:w="1672626"/><text x="99.6204%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (5,016,991 samples, 0.16%)</title><rect x="99.4229%" y="757" width="0.1574%" height="15" fill="rgb(211,96,50)" fg:x="3168470298" fg:w="5016991"/><text x="99.6729%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5,016,991 samples, 0.16%)</title><rect x="99.4229%" y="741" width="0.1574%" height="15" fill="rgb(252,114,18)" fg:x="3168470298" fg:w="5016991"/><text x="99.6729%" y="751.50"></text></g><g><title>core::ptr::copy_nonoverlapping (5,016,991 samples, 0.16%)</title><rect x="99.4229%" y="725" width="0.1574%" height="15" fill="rgb(223,58,37)" fg:x="3168470298" fg:w="5016991"/><text x="99.6729%" y="735.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::pump_events (23,318,750 samples, 0.73%)</title><rect x="98.9537%" y="837" width="0.7317%" height="15" fill="rgb(237,70,4)" fg:x="3153515930" fg:w="23318750"/><text x="99.2037%" y="847.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::poll_events_with_timeout (23,318,750 samples, 0.73%)</title><rect x="98.9537%" y="821" width="0.7317%" height="15" fill="rgb(244,85,46)" fg:x="3153515930" fg:w="23318750"/><text x="99.2037%" y="831.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::single_iteration (19,971,555 samples, 0.63%)</title><rect x="99.0587%" y="805" width="0.6267%" height="15" fill="rgb(223,39,52)" fg:x="3156863125" fg:w="19971555"/><text x="99.3087%" y="815.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::with_state (19,971,555 samples, 0.63%)</title><rect x="99.0587%" y="789" width="0.6267%" height="15" fill="rgb(218,200,14)" fg:x="3156863125" fg:w="19971555"/><text x="99.3087%" y="799.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::single_iteration::_{{closure}} (19,971,555 samples, 0.63%)</title><rect x="99.0587%" y="773" width="0.6267%" height="15" fill="rgb(208,171,16)" fg:x="3156863125" fg:w="19971555"/><text x="99.3087%" y="783.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::sink::EventSink::append (3,347,391 samples, 0.11%)</title><rect x="99.5804%" y="757" width="0.1050%" height="15" fill="rgb(234,200,18)" fg:x="3173487289" fg:w="3347391"/><text x="99.8304%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (3,347,391 samples, 0.11%)</title><rect x="99.5804%" y="741" width="0.1050%" height="15" fill="rgb(228,45,11)" fg:x="3173487289" fg:w="3347391"/><text x="99.8304%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3,347,391 samples, 0.11%)</title><rect x="99.5804%" y="725" width="0.1050%" height="15" fill="rgb(237,182,11)" fg:x="3173487289" fg:w="3347391"/><text x="99.8304%" y="735.50"></text></g><g><title>core::ptr::copy_nonoverlapping (3,347,391 samples, 0.11%)</title><rect x="99.5804%" y="709" width="0.1050%" height="15" fill="rgb(241,175,49)" fg:x="3173487289" fg:w="3347391"/><text x="99.8304%" y="719.50"></text></g><g><title>winit::platform_impl::linux::wayland::event_loop::EventLoop&lt;T&gt;::run_on_demand (3,338,420 samples, 0.10%)</title><rect x="99.6854%" y="837" width="0.1048%" height="15" fill="rgb(247,38,35)" fg:x="3176834680" fg:w="3338420"/><text x="99.9354%" y="847.50"></text></g><g><title>winit::platform_impl::linux::wayland::window::state::WindowState::refresh_frame (1,673,439 samples, 0.05%)</title><rect x="99.7901%" y="837" width="0.0525%" height="15" fill="rgb(228,39,49)" fg:x="3180173100" fg:w="1673439"/><text x="100.0401%" y="847.50"></text></g><g><title>wl_display_cancel_read (1,672,047 samples, 0.05%)</title><rect x="99.8427%" y="837" width="0.0525%" height="15" fill="rgb(226,101,26)" fg:x="3181846539" fg:w="1672047"/><text x="100.0927%" y="847.50"></text></g><g><title>all (3,186,860,850 samples, 100%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(206,141,19)" fg:x="0" fg:w="3186860850"/><text x="0.2500%" y="879.50"></text></g><g><title>my_app (3,181,065,435 samples, 99.82%)</title><rect x="0.1819%" y="853" width="99.8181%" height="15" fill="rgb(211,200,13)" fg:x="5795415" fg:w="3181065435"/><text x="0.4319%" y="863.50">my_app</text></g><g><title>wl_display_flush (3,342,264 samples, 0.10%)</title><rect x="99.8951%" y="837" width="0.1049%" height="15" fill="rgb(241,121,6)" fg:x="3183518586" fg:w="3342264"/><text x="100.1451%" y="847.50"></text></g></svg></svg>